// Code generated by go-bindata.
// sources:
// golang.create-raw.tmpl
// golang.create.tmpl
// golang.decl.tmpl
// golang.delete-all.tmpl
// golang.delete-world.tmpl
// golang.delete.tmpl
// golang.dialect-postgres.tmpl
// golang.dialect-sqlite3.tmpl
// golang.footer.tmpl
// golang.get-all.tmpl
// golang.get-count.tmpl
// golang.get-first.tmpl
// golang.get-has.tmpl
// golang.get-last.tmpl
// golang.get-limitoffset.tmpl
// golang.get-one-all.tmpl
// golang.get-one.tmpl
// golang.get-paged.tmpl
// golang.get-scalar-all.tmpl
// golang.get-scalar.tmpl
// golang.header.tmpl
// golang.misc.tmpl
// golang.update.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _golangCreateRawTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcd\x8a\xdb\x30\x10\x3e\xdb\x4f\x31\xcd\xc9\x86\xac\x1e\xa0\xb0\x87\x52\xb6\x10\x28\x85\x26\xbd\x0b\x25\x1a\xa7\x6a\x64\xc9\x3b\x52\xfe\x08\x79\xf7\x8e\x2c\x27\xeb\x25\x24\x14\xba\x87\xc0\x68\x46\xfa\xfe\x2c\xe5\x74\x7a\x02\x8d\x8d\x71\x08\x13\xa7\x5a\x9c\xc0\xd3\xf9\x5c\xce\xd5\xfe\x2b\xa1\x8a\x78\x3a\x81\x69\xc0\xf9\x08\x62\x8e\x71\x4b\x0e\xce\xe7\x1f\x3e\x97\x3c\x43\xa7\xb9\x21\xb9\x12\x8b\x6d\xd3\x98\x03\xaf\xca\x04\x99\x06\x09\xa8\x1c\xe3\x07\xb3\x76\x8a\x4f\x0e\x24\x69\x14\xb1\xed\x2c\xf3\x5c\xc8\x05\x03\x54\x0c\xb7\x8a\x87\x4e\x91\x6a\x41\x7c\xa1\x35\xf7\x6a\xa8\xca\x22\x8b\x79\x13\xc2\xeb\x61\xd3\xb5\x35\x85\xab\x2a\x24\x02\xfe\x79\xaa\xef\x2b\x32\x6e\xe7\x37\xff\x26\x47\xb1\x8e\x8b\x98\x72\x20\xb9\xc1\x5b\x7a\x7d\xcc\x68\xbd\x58\x67\xa2\xc3\x3d\x88\x6f\x06\xad\x0e\x29\x9b\xbe\x8f\xed\x12\x35\xf3\xac\xf0\xb7\xb7\x1a\x29\x80\x98\xb9\xc6\xc3\x70\xac\x1f\x87\x57\x3b\x74\x27\x52\xf6\x1d\x19\x62\x1b\x27\x19\x64\xa7\x08\x64\xdf\x80\xe7\x54\xbc\xda\xe5\xd6\x69\x8b\x72\xce\xb2\x90\x2a\xbf\xfc\x23\xb4\x51\x16\x57\x71\x0a\xe3\xf3\x75\x59\xa4\x99\xf5\xeb\x05\xaf\xaa\x8c\xd1\x87\xd6\xfb\xbb\x0a\xad\xcb\x4b\xdc\xef\xbf\x7d\x59\xc8\x69\x4a\x95\x69\x7b\x0e\x32\x3b\x24\xf1\x72\xc0\xd5\x1d\xac\x04\x55\x30\x4c\x3a\xf3\xe9\x19\x9c\xb1\x70\x2a\x8b\x82\x32\x60\xc2\x68\xd5\x06\x5f\x88\x2a\xde\xc1\x5b\x99\x61\x98\xf1\xd6\x1c\x87\x0d\xf8\x16\x69\x93\x6e\x5a\xd7\x79\x8a\x21\x8b\x32\x6e\x0d\xa3\xbc\xdf\x69\xbd\x11\xfa\x73\x8b\x74\x9c\xfb\xfd\x03\xe3\x62\xb1\x52\x2e\x7d\x73\xa5\x35\xf9\x06\xaa\x86\x2f\x44\x44\x77\x01\xae\xe1\xb1\x25\x5e\x4e\x1f\xfa\xba\x50\x8e\xee\xec\xad\x55\x29\x09\x43\x4e\xfa\xf3\xc7\x44\x7d\x5f\x97\x94\xdd\xe6\x4a\xd5\x13\x8b\xef\x2a\xc4\x99\x0b\x48\x71\xa6\xab\xff\x72\x9b\x66\x6b\x8c\x09\x30\xfd\x4b\x64\xd3\xe2\xd7\xb1\xc3\xf4\xb4\xf8\x5d\xa5\xfb\xd9\x6d\xea\xec\x7f\x78\x53\xe3\x7a\x54\xfe\x0d\x00\x00\xff\xff\xa6\x7b\x5d\x9d\xac\x04\x00\x00")

func golangCreateRawTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateRawTmpl,
		"golang.create-raw.tmpl",
	)
}

func golangCreateRawTmpl() (*asset, error) {
	bytes, err := golangCreateRawTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create-raw.tmpl", size: 1196, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x41\x8f\xda\x3c\x10\x3d\x27\xbf\x62\x3e\x4e\x89\xc4\xfa\x07\xac\xb4\x87\x4f\xab\xad\x8a\x54\x21\x15\xb6\x67\xcb\xe0\x49\xea\x92\xd8\x59\xdb\xb0\x20\xc4\x7f\xef\x4c\x9c\x00\x2b\xc4\xaa\x52\x7b\x40\x1a\xcf\x8c\xdf\x7b\xf3\x32\xe6\x78\x7c\x00\x8d\x95\xb1\x08\x13\xab\x5a\x9c\xc0\xc3\xe9\x94\x3f\x7b\x54\x11\x8f\x47\x30\x15\x58\x17\x41\x2c\x30\x6e\xbd\x85\xd3\x69\xee\x52\x48\x35\xb4\x9a\x12\x92\x22\xb1\xdc\x56\x95\xd9\xd3\x29\x67\x3c\x2e\x30\x4a\x7e\x0d\x1e\x4c\x6d\x15\xdd\x1c\x18\xb8\x14\xb1\xed\x1a\xe2\x19\x99\x05\x01\x14\x04\xb7\x8e\xfb\x4e\x79\xd5\x82\xf8\xdf\xd7\x81\x92\x25\x14\x79\x96\xd4\x5c\x94\xd0\x79\xe8\x3a\xa7\xa6\x70\x96\x85\xde\x03\xfd\x9c\x2f\xef\x4b\x32\x76\xe7\x36\x7f\xa6\x47\xf9\xfa\xa2\x26\x1f\x58\x6e\x00\x57\x4e\x1f\x12\x5c\xc6\x69\x96\x3b\x47\xd4\x61\xee\xde\xd9\x9b\x4c\x4a\x4b\xd1\xe3\x13\xb8\xd5\x2f\xa1\x57\xe2\xab\x73\x9b\x20\xa8\x5a\x94\xe2\xc7\xeb\x73\x51\xf6\x53\x8e\xd0\xfd\xc4\xd6\x44\x8b\xef\x20\xbe\x18\x6c\x34\xb3\xe7\xa9\xa7\x5d\xa1\x26\xb1\x6b\xfc\xe9\x1a\x8d\x3e\x80\x98\xd9\xca\xc1\x70\xad\x2f\x87\xb7\x66\xc8\x4e\xa4\xec\x33\x32\xc4\x36\x4e\x12\xc8\x4e\x79\x90\x7d\x02\x9e\x38\x78\x6b\x56\x5b\xab\x1b\x94\x0b\xe2\x47\x5f\xf4\x12\x8d\x6a\x70\x1d\xa7\x70\x7d\x9f\x44\x72\xad\x71\xf5\x92\x4e\x45\xc2\xe8\x9d\xef\x4d\x3a\x0b\x2d\xf3\xf1\x9b\x7d\xdc\x20\xb2\x61\xca\x9f\x06\x06\x1b\xbc\xd9\xa1\x17\x2f\x7b\x5c\xdf\xc1\x62\xa8\x8c\x60\xf8\xce\x7f\x4f\x60\x4d\x03\xc7\x3c\xcb\x7c\x02\x64\x8c\x56\x6d\xf0\xc5\xfb\x82\x3a\xa8\x95\x18\x86\x1a\xb5\x26\x3b\x9a\x80\x17\x4b\x2b\xde\xd7\xae\x73\x3e\x86\x24\xca\xd8\x1a\xae\xfc\xfe\xa0\xf5\x46\xe8\xf7\x2d\xfa\xc3\x82\x3e\xd9\xfd\xc1\xc5\x72\xad\x2c\x2f\x8e\xd2\xda\xbb\x0a\x8a\x8a\xb6\x2a\xa2\x1d\x81\x4b\xf8\x7c\x24\x3a\x4e\x3f\x9d\x6b\xa4\xbc\x5a\xfc\xdb\x51\xa5\xf4\x18\x92\xd3\x8f\xff\xc6\xea\xfb\xba\xa4\xec\x36\x67\xaa\x9e\x58\x7c\x53\x21\xce\x6c\x40\x1f\x67\xba\xf8\xab\x69\xb9\x56\x63\x64\x40\xfe\xaf\x49\x43\x8b\xd7\x43\x87\xfc\x3e\xe9\x71\xf2\x7e\x76\x9b\xdb\xc7\x33\xc6\x57\xe1\xef\x00\x00\x00\xff\xff\xc0\xb8\xac\xa4\xef\x04\x00\x00")

func golangCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateTmpl,
		"golang.create.tmpl",
	)
}

func golangCreateTmpl() (*asset, error) {
	bytes, err := golangCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create.tmpl", size: 1263, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeclTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x49\x4d\xce\x51\x52\xa8\xad\xe5\x4a\x2b\xcd\x4b\x56\xd0\xc8\x4f\xca\x52\xd0\xaa\xae\x56\xd0\x0b\x4a\x4d\x4e\xcd\x2c\x4b\x2d\x72\x4a\x2c\x4e\x05\x4a\x7b\xe6\x16\xe4\x68\x2a\x80\x24\x82\x33\xd3\xf3\x12\x4b\x4a\x8b\x40\xa2\x0a\xd5\x5c\x20\x21\xa7\xfc\x94\x4a\x90\x11\xb5\x20\x5e\x6a\x5e\x8a\x82\x2e\x90\x03\x08\x00\x00\xff\xff\x9b\x28\x5e\xfd\x65\x00\x00\x00")

func golangDeclTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeclTmpl,
		"golang.decl.tmpl",
	)
}

func golangDeclTmpl() (*asset, error) {
	bytes, err := golangDeclTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.decl.tmpl", size: 101, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\x41\x8b\xdb\x30\x10\x85\xcf\xf6\xaf\x98\x0d\x39\xd8\xe0\x15\x3d\x94\x1e\x0a\x39\x04\xba\x87\x5e\xf6\xb0\x7b\x2c\xc5\xc8\xd6\xc8\x55\x57\x96\xb2\x23\x39\x4d\x31\xf9\xef\x1d\x29\x6e\xf0\x42\x68\x61\x0f\x81\x68\xe6\xf9\x9b\x37\x8f\x99\xe7\x7b\x50\xa8\x8d\x43\xd8\x04\x33\x38\x19\x27\xc2\x0d\xdc\x9f\xcf\xe5\x17\xb4\x18\xb1\x9d\x67\x10\xcf\x93\xd6\xe6\x04\xe7\x73\xc5\xaf\x3e\x9e\x0e\x92\xe4\x08\x62\x6f\xed\x9e\x86\xc0\xf5\x1a\xaa\xb2\xe8\xfd\xe4\x22\x18\x17\x3f\x7d\x6c\x00\x89\xd2\xcf\x53\x5d\xa6\x19\xe8\x54\x86\x96\xeb\x81\xc6\x1d\xfd\xcb\xff\xa7\x49\x1a\xde\xcc\x62\xc6\x6d\x5e\xe7\xd5\xef\x0b\xad\x48\x92\xb1\x43\x75\xb0\xb2\xc7\x1f\xde\x2a\xa4\x00\xe2\xab\xd3\x1e\xd6\xed\xf0\x6a\x97\xea\xa6\x6d\x73\xa5\x0d\x71\x8c\x9b\x24\x2a\x8b\xa3\x24\x68\xdb\xa3\xb4\x13\x06\xf8\xf6\x9d\x37\x43\xd2\xcc\x9b\x99\x70\xad\xef\x40\x1e\x0e\x6c\xa7\xfa\x5b\x69\x80\xe9\xda\xa0\x55\xf9\xcd\xfb\x44\x19\x4d\x7f\x75\x9f\xa7\x93\x74\x03\xc2\xd6\x34\xb0\x4d\xeb\x7d\xde\x81\x78\x9c\xac\x95\x9d\xc5\x45\x58\x16\x46\xc3\x1d\x4b\x93\x40\x3c\xca\x11\xb9\x28\x4c\x70\x2c\xab\x6a\x98\xcb\x82\x3d\xf4\xde\xa9\x94\xd9\xd6\xa4\x66\x22\xb0\x1f\x2d\x6d\xc0\xdc\xfe\xa7\xc5\x37\xdc\x5c\xaf\xea\xba\x2c\x96\x74\x38\xdf\x55\x06\x29\x14\xc6\xf0\x9f\x57\xdb\x4d\x4e\x59\x6c\x9f\x58\x82\x54\xf9\xee\xa7\x50\x46\x5a\xec\x63\x03\xeb\x0c\x19\x95\x7a\xd6\x0f\xcf\xfc\xaa\x2e\x8c\xe6\x9a\xa7\x10\x22\x45\xd1\xb6\x94\xec\xa4\x6b\xe1\x0c\x32\x8c\xcc\x11\x49\x3c\x9c\xb0\xbf\xfd\x51\xca\x25\xe9\xef\x76\xe0\x8c\xcd\x41\x10\xf2\xd9\x3a\xf8\xd0\x64\xc2\x28\x5f\xf0\x81\xa8\x62\x51\xde\x67\xb9\xcc\xcb\x94\xb4\x04\x8f\x14\x4f\xfe\x57\xd8\x6b\xcd\xb6\x51\x55\xef\x82\x2e\xfd\x85\xcd\x5f\xad\xef\xf2\x4f\x00\x00\x00\xff\xff\x5a\xc7\x38\xe5\x58\x03\x00\x00")

func golangDeleteAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteAllTmpl,
		"golang.delete-all.tmpl",
	)
}

func golangDeleteAllTmpl() (*asset, error) {
	bytes, err := golangDeleteAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-all.tmpl", size: 856, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteWorldTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x90\xc1\x4e\x03\x21\x10\x86\xcf\xec\x53\x8c\x9b\x98\xd0\xd8\x12\x0f\xc6\xdb\x1e\x1a\xd3\x9b\x17\xeb\x03\x34\x5b\x18\x1a\x14\xc1\x0e\x6c\x5d\x43\xfa\xee\xb2\xd0\x6d\x7a\xf6\x40\x48\x60\xbe\xef\x9f\x99\x94\x56\xa0\x50\x1b\x87\xd0\x06\x73\x70\x7d\x1c\x08\x5b\x58\x9d\xcf\x8d\x42\x8b\x11\xd7\xd6\x72\x19\x47\x90\xde\x45\x1c\xa3\x78\xa9\xf7\x02\xb8\xf4\x83\x8b\x60\x5c\x7c\x7e\x5a\x02\x12\x4d\xc7\xd3\xa2\x99\x94\xe8\x54\x71\x34\xb7\xfe\xbd\x57\xbf\x55\xcd\x4e\x3d\xc1\x6e\x47\x18\x20\x1c\xad\xd8\x62\x18\x6c\x9c\x5f\x6f\xbc\x95\xa7\xde\x1d\x10\xc4\xfb\xdb\x6b\x80\x09\x2e\x60\x8d\xec\xc0\xef\x3f\x84\x22\x73\x42\x12\x9b\x11\x25\x4f\x09\xbe\x29\xc3\x1a\xda\xfb\x63\x0b\x22\x13\x8b\x86\x19\x5d\xca\xef\x3a\x70\xc6\x42\x6a\x18\x23\xcc\x93\x3a\x78\x5c\x16\xc3\x57\xff\x89\x1b\x22\x9e\x8b\x72\x75\xee\x9b\x5d\xfa\x98\x63\x4a\xa6\xd8\xfa\x9f\xb0\xd6\x1a\x65\x44\xc5\xff\xa1\x65\x75\xb6\x87\x6e\x1e\xf3\xba\xac\x69\x57\x33\x7c\x09\xce\xca\xfc\x7d\x5d\xe5\x5f\x00\x00\x00\xff\xff\xab\x74\xf7\x3d\xaa\x01\x00\x00")

func golangDeleteWorldTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteWorldTmpl,
		"golang.delete-world.tmpl",
	)
}

func golangDeleteWorldTmpl() (*asset, error) {
	bytes, err := golangDeleteWorldTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-world.tmpl", size: 426, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\x4f\x8b\xdb\x30\x10\xc5\xcf\xd6\xa7\x98\x0d\x39\xd8\xe0\x15\x3d\x17\x52\x08\x74\x0f\xbd\xec\x61\xf7\x58\x8a\x91\xad\x91\xab\xae\x2c\x65\x47\x72\x9a\x62\xf2\xdd\x3b\x52\xdc\x90\x85\xfe\x81\x1e\x0c\xd6\xe8\xcd\xef\xcd\x3c\xb4\x2c\xf7\xa0\xd1\x58\x8f\xb0\x89\x76\xf4\x2a\xcd\x84\x1b\xb8\x3f\x9f\xc5\x47\x74\x98\xb0\x5b\x16\x90\xcf\xb3\x31\xf6\x04\xe7\x73\xcd\xa7\x21\x9d\x0e\x8a\xd4\x04\x72\xef\xdc\x9e\xc6\xc8\xf5\x06\x6a\x51\xe9\xd2\xa0\xa1\x0f\xc1\xb5\x80\x44\xf9\x0b\xd4\x88\x6c\x82\x5e\x17\xaa\xb8\x75\xb4\xfe\x18\x5e\xfe\x6d\xa7\x68\x7c\x63\xf6\x67\x60\x1f\xf4\x8f\x0b\xae\xe2\x56\x9c\x7a\xd4\x07\xa7\x06\xfc\x1a\x9c\x46\x8a\x20\x3f\x79\x13\xe0\xf6\x3a\xbe\xba\xb5\xba\xe9\xba\x52\xe9\x62\x9a\xd2\x26\x8b\x44\x75\x54\x04\x5d\x77\x54\x6e\xc6\x08\x9f\xbf\x58\x9f\x90\x0c\xf3\x16\x26\x5c\xeb\x3b\x50\x87\x03\x8f\x53\xff\xaa\xb4\xc0\x74\x63\xd1\xe9\x72\xe6\x85\x92\x4a\x76\xb8\x8e\x5f\xdc\x49\xf9\x11\x61\x6b\x5b\xd8\xe6\xfd\xde\xef\x40\x3e\xce\xce\xa9\xde\xe1\x2a\x14\x95\x35\x70\xc7\xd2\x2c\x90\x8f\x6a\x42\x2e\x4a\x1b\x3d\xcb\xea\x06\x16\x51\xf1\x0c\x43\xf0\x3a\x87\xb6\xb5\xf9\x32\x13\x78\x1e\xa3\x5c\xc4\x72\xfd\xd7\x11\xdf\x70\x4b\xbd\x6e\x1a\x51\xad\xe9\x70\xbe\x37\x19\xe4\x50\x18\xc3\x3f\xaf\xae\x9f\xbd\x76\xd8\x3d\xb1\x04\xa9\x0e\xfd\x37\xa9\xad\x72\x38\xa4\x16\x6e\x33\x64\x54\xbe\x73\x61\x7c\xe6\x53\x7d\x61\xb4\xd7\x3c\xa5\x94\x39\x8a\xae\xa3\x3c\x4e\x7e\x2e\x9c\x41\x81\x91\x3d\x22\xc9\x87\x13\x0e\xbf\x6f\xca\xb9\x64\xfd\xdd\x0e\xbc\x75\x25\x08\x42\x7e\xb8\xfe\xb2\x78\x5b\x28\x93\x7a\xc1\x07\xa2\x9a\x85\x65\x27\x51\xc2\x9a\x7d\xba\x7a\x15\x67\xf9\x14\xbe\xc7\xbd\x31\x3c\x3d\xea\xfa\xbf\xd9\xab\x66\xb5\x80\x0f\xf0\xae\xcd\xfd\x62\x0d\x32\xbf\xc8\x9f\x01\x00\x00\xff\xff\x94\xcf\x73\x61\x6b\x03\x00\x00")

func golangDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteTmpl,
		"golang.delete.tmpl",
	)
}

func golangDeleteTmpl() (*asset, error) {
	bytes, err := golangDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete.tmpl", size: 875, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectPostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xb1\x6e\x83\x30\x18\x84\x67\xfc\x14\xbf\x3c\xd9\x11\x38\x52\xbb\xb5\xca\xd2\xb4\x73\xa5\xbe\x41\x80\x1f\x6a\xd5\xb1\xc1\x36\x5d\x2c\xde\xbd\xbf\x9d\x90\x28\x43\x25\x04\xc2\x77\xdf\x9d\xce\x29\x35\xd0\xe3\xa0\x2d\x02\xd7\xe7\xc9\xf9\xc8\x61\x5d\x59\xc5\x47\x1d\xbf\x97\x56\x75\xee\xbc\x37\xba\xdd\x4f\x33\x67\x29\x01\xda\x1e\x1a\xd2\xd9\x03\x17\x9a\xce\xd9\x10\xfd\x49\xdb\xd8\xa0\xf7\xce\x97\x90\x61\xb1\x1d\x08\x4a\x35\x40\xa8\xfa\xc2\x0e\xf5\x2f\x7a\x92\x24\xe8\x70\xbc\x21\x1f\x99\x10\xc4\x41\x61\x25\x08\x56\xdd\x03\x81\xbe\xda\x8e\x35\xb8\x1f\x68\x9d\x33\x12\x12\xab\xf4\x00\x58\x4e\x5e\x0e\x19\x52\x62\x37\xcd\xaa\xe4\xc8\xd7\x7c\x4c\x96\xaa\x98\xd4\xd1\xf5\xf4\x32\xa7\x10\x84\x84\xc3\x01\xf8\xd3\x33\xbf\xc8\x95\xc7\xb8\x78\x5b\x3c\x5b\x59\x0d\xd1\x2f\x98\x55\xba\x03\x7a\xae\x16\xce\x6b\x18\x4e\x26\x20\x5b\xff\xbd\x05\x37\xa1\xbd\xcf\xce\x7f\x93\x0b\x71\xf4\x18\x44\x70\x8b\xef\xf0\x3a\x84\xe6\xed\xc2\x6c\xd4\xfb\x5b\xbd\xed\x4d\xb7\xa2\x2c\x7c\x12\x2a\xf8\x06\x53\xf3\x05\x97\x0f\xdd\x7f\x01\x00\x00\xff\xff\xc1\x0a\x5b\x7f\xb8\x01\x00\x00")

func golangDialectPostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectPostgresTmpl,
		"golang.dialect-postgres.tmpl",
	)
}

func golangDialectPostgresTmpl() (*asset, error) {
	bytes, err := golangDialectPostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-postgres.tmpl", size: 440, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectSqlite3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\xcd\x6e\xdb\x3c\x10\x3c\x5b\x4f\xb1\x1f\x0f\x1f\xa4\x56\x96\xd1\xe6\xe6\xc2\x87\x34\x09\xfa\x83\xfc\xb4\x49\x81\x1e\x82\xc0\xa0\xa5\xb5\xcc\x5a\x22\x5d\x92\x4a\x62\x18\x7e\xf7\xee\x52\x52\x6c\x37\x69\x81\x02\x06\x0c\x71\x77\x66\x96\x33\xcb\xcd\x66\x08\x05\xce\x95\x46\x10\xaa\x5e\x19\xeb\x05\x6c\xb7\xd1\x40\xd4\xd2\x2f\x46\x56\xea\x42\xd0\x47\xa9\xfc\xa2\x99\x65\xb9\xa9\x47\x74\xee\xf5\xa8\x34\x43\xf7\xb3\x52\x1e\x8f\x44\xb4\xd9\x00\xea\x02\x86\x04\x8b\x0e\xe8\xdc\x30\x37\xda\x79\x2b\x95\xf6\x43\xb4\xd6\xd8\xc0\x3d\x6f\x74\x0e\x31\x89\x55\x40\xd0\xec\x1a\x73\x54\xf7\x68\xa9\x94\x80\x72\x27\x4f\x90\x33\x46\xc4\x84\x83\x80\x4d\x20\x8e\x06\x3b\x42\xa0\x7f\xa5\xcb\x14\xcc\x12\x66\xc6\x54\x09\x6c\xa2\x81\x9a\x03\x86\x93\xf1\x84\x41\x59\xdc\x0d\x99\x05\xae\xe4\x1d\x97\xa8\x6d\x10\x1a\xb3\x13\x53\x20\x4c\x26\xb0\xd7\xb4\x53\x6f\xfb\x06\xb5\x2b\x7b\xb2\x76\x9e\x24\x1c\xe7\xa6\x32\x9a\x0b\xed\x14\x2e\x3b\x97\xce\x7f\xd2\x05\x3e\xc6\x84\x48\x41\x8c\x45\xdb\x48\x42\x6d\xef\x7f\x13\x18\xbe\xe9\x48\x07\x16\x7d\x63\xf5\x13\xf8\x9b\x55\xf5\xcd\x4a\xe6\xc8\xe0\xdb\xd0\x3f\xbe\x4b\x52\xf0\xb6\xc1\x00\xd8\x46\x7b\x28\x21\x76\x15\x2a\xd0\x6f\xaf\x30\x97\x95\xc3\x68\xfb\xc7\x50\xcc\x0a\x75\x48\xe1\x5e\xda\xfe\xe2\xa7\x96\xfd\xbf\x94\x35\xb9\x01\x9c\x4e\x9c\x74\xa3\xf1\xbc\xdc\xa8\x0a\xb8\x3d\x7a\x7b\x37\x5b\x7b\x52\xe5\xa5\xa0\xd4\x64\x11\xab\xe2\x96\xe6\xdc\xe9\x77\x7c\x53\x01\xaf\x3b\x82\xbe\x65\x4b\xbe\xb5\xc1\x2b\xad\x7c\x1c\xc2\xa2\x6e\xa2\x29\x95\xf3\x68\xe3\x67\xa3\xa4\xf0\x7f\x9f\xcb\xcd\xd7\x73\xfa\x6f\x4b\x6c\x20\x85\xa4\x31\xf7\x1f\x8d\x59\x8e\xfb\x3b\xdc\xd0\x08\x2b\x2e\xa4\xe4\x08\xe9\x45\xd1\x68\x04\x2d\xf0\xe8\xb3\xa1\xe9\x64\x75\xc1\x71\xd3\x02\x79\x6b\x2a\x07\x7e\x81\xf0\xa3\x2d\x4c\x6b\xae\xac\xac\x2c\x6b\x09\x73\x63\x41\x56\x15\x68\x7c\xe0\x66\x16\x52\xb4\x14\x59\xe0\x53\x3a\x47\x50\x9e\xd6\x14\x2c\x19\x00\x0f\xf4\x2e\x4c\xe3\x41\x42\xdd\x78\x7c\x4c\xb9\x56\x37\xce\xc3\x8c\x94\x16\x52\x97\x58\x80\x37\x41\xeb\x5e\x56\x0d\xc2\xda\x34\xf0\x20\xb5\x67\xb6\x19\x92\x16\x82\xd4\x6b\xb8\xa2\x54\x20\x27\x59\xd2\x61\xbf\x5f\x18\x7c\x02\xe2\xfb\xf1\xb9\xe8\x5c\xfc\xfd\xd6\x31\x8f\x0a\xaf\x0e\x1d\xe3\x02\xbd\x9a\xbd\x17\x44\xee\x4d\x53\xfe\x20\x3a\x46\x64\x67\x8f\x98\xc7\xe2\xcb\xf5\xf1\x87\x8b\x63\xbe\x3a\xaa\x52\x4f\x97\xb8\x76\xd4\x70\x75\x49\xfb\xa4\x55\x95\xb4\xef\x8a\x40\xb4\xc3\xf4\x1d\x96\xb8\x8b\xbc\x96\x4b\xa4\x77\xc1\x1a\x49\x58\xc5\xbf\xd0\x1f\xb8\x4d\xd7\xa1\x25\x79\x7e\xcf\x7f\x57\xec\xce\xa9\x8d\x53\x0f\xee\xf0\x92\x77\x56\xc4\x8e\xb8\x29\xb4\x76\x1d\xc9\x0d\xf6\x28\x3b\x7d\x9f\xee\x59\xd2\xbf\x46\x2a\x70\x10\x2f\xed\x62\xcb\x92\x1c\x3c\xac\x5f\x01\x00\x00\xff\xff\x26\x74\xff\xed\x3b\x05\x00\x00")

func golangDialectSqlite3TmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectSqlite3Tmpl,
		"golang.dialect-sqlite3.tmpl",
	)
}

func golangDialectSqlite3Tmpl() (*asset, error) {
	bytes, err := golangDialectSqlite3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-sqlite3.tmpl", size: 1339, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x94\xc1\x8e\x9b\x30\x10\x86\xcf\xf6\x53\xb8\x37\x58\x6d\x39\x55\x3d\xb4\xca\xa1\xbb\xdb\x43\x0f\x55\xa5\x24\x3d\x57\x06\x26\x59\x14\xc7\xb0\xc6\x6c\x5d\xa1\xbc\x7b\x67\x00\x63\x02\xa4\xab\x1e\x22\xb0\x3d\xf3\xff\xdf\x78\x86\xb4\xad\x28\x0e\x22\xd9\x35\x55\x55\x1a\xbb\x75\xe2\x72\xe1\xf6\x4f\x05\x02\x5f\x6b\x6b\x9a\xcc\x8a\x96\xb3\x3c\x15\x77\x4f\x0f\x9c\x59\x27\xee\xf6\x8e\x5f\x38\x3f\x34\x3a\x13\x91\xc1\xf5\xd6\xc5\xe2\xa7\xae\xe5\x01\xf6\x2e\xca\x30\x22\x2b\xb5\x05\x67\x93\xc7\xfe\x19\x8b\xa8\xe9\x8e\x7f\x51\x76\xfd\xa2\x92\xbd\xbb\x17\x60\x0c\xfd\x4a\x13\x93\xbe\x1d\x76\x3e\x6d\x84\x71\xc9\x11\x6c\x2f\x15\x73\x86\x70\x74\xf0\x6e\x23\x74\xa1\x28\x94\x19\xb0\x8d\xd1\xb4\xec\x72\x38\xbb\x70\xbf\x67\x5d\xa7\x8d\x47\x4b\xc4\x51\x74\x85\xaf\x2f\x6b\x0e\x85\xd6\x08\x83\x67\x9b\x60\xee\xf7\xfa\xd8\x8e\x36\x4f\x93\x1f\x15\xe8\x8e\xf7\xf3\x1c\x76\x49\x4b\xb8\x81\x78\x10\x5b\x25\xde\x42\x5a\xe8\x3c\xaa\xa9\x0f\x85\x3e\xc6\xc3\x93\x74\x43\x36\xba\xfb\xb8\x78\x29\xf1\x58\x9e\xcf\x85\x8d\xb0\xc4\x1b\xa5\x4d\x50\xc7\x82\xf0\x16\x7d\x1e\x5d\x77\x7f\x05\x1d\xe2\x04\x9c\x6a\x59\x12\x97\x4a\xa5\x32\x3b\xfd\xbf\x61\xc8\x7c\xd3\x12\x27\xd6\x48\x7d\x04\x91\x7c\x07\xfb\x5c\xe6\x35\x8d\xec\x35\x07\x86\x24\xbb\xe2\xa8\x25\xe6\x01\x1e\x93\xdd\xab\x34\x62\x18\x5f\xa2\xb9\x6a\x61\x18\xb8\x45\x03\x07\xef\xd9\x94\x91\xc1\x37\xfd\x5a\x9e\x48\x1d\xa1\x70\x0d\x3a\xa7\xf7\xf0\xd6\x7f\x46\x9e\xb1\xc0\x59\x33\x07\x99\x01\xaa\xb6\xed\xfb\x95\x12\xd8\x9c\x7a\xa2\xe5\xd5\xf6\x6e\x4d\x8f\x0d\x9b\x9c\xb3\x1b\x33\xc3\xd9\x38\x09\x5d\x4f\x30\x30\xb4\xaa\xdf\xf1\x16\x76\xdd\x62\x74\x46\x93\x1c\x14\x58\xf8\xa2\xd4\x8d\xcf\x09\x13\x3f\x7e\xb8\x1f\xba\xcf\xd9\x59\x9e\xe0\xab\x31\xd3\x89\xb8\xb6\x7c\x7a\x78\xa3\xaa\x5d\xf6\x0c\x67\x19\x85\x6a\x7c\x99\x2f\x6a\x5e\xa8\xd7\xcc\xd3\x55\xcd\xd1\x0a\x55\x7f\x1b\x59\x61\xdb\xc3\xbf\x52\x1c\x8a\xff\x27\xf5\xdf\x00\x00\x00\xff\xff\x20\xf7\x92\xb8\x34\x05\x00\x00")

func golangFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangFooterTmpl,
		"golang.footer.tmpl",
	)
}

func golangFooterTmpl() (*asset, error) {
	bytes, err := golangFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.footer.tmpl", size: 1332, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\xc1\x6e\xdb\x3a\x10\x3c\x4b\x5f\xb1\x31\x7c\x90\x00\x85\x1f\x90\x07\x1f\x82\x87\x1e\x7a\x31\xd0\xf8\x58\x14\x02\x2d\x2e\x5d\x36\x34\xe9\x90\x94\xed\x40\xf0\xbf\x77\x97\x92\x05\x1b\x48\x1b\xf4\x60\xc0\xdc\x1d\xcd\xcc\x0e\x97\xc3\xf0\x08\x0a\xb5\x71\x08\x8b\x68\x76\x4e\xa6\x3e\xe0\x02\x1e\x2f\x97\xf2\xd9\xda\x76\x18\x40\x6c\x7a\xad\xcd\x19\x2e\x97\x8a\x4e\x5d\x3a\x1f\x64\x90\x7b\x10\xd4\x7e\x0e\xbb\x48\xf5\x1a\xaa\xb2\x08\xfe\x14\x81\x00\xd1\x9a\x0e\xbd\x06\xf1\xe2\x4f\xd4\x6b\x00\x43\xe0\x9f\x0f\x75\xc9\x62\xe8\x54\x66\x2f\x6f\x95\x8d\x3b\xfa\xd7\x4f\x64\x65\xd8\xdd\x89\xfe\x99\x6d\xeb\xd5\xfb\x82\x20\x65\x41\x5f\xe2\x7e\x8b\xea\x60\x65\x87\x3f\xbd\x55\x18\x22\x88\xaf\x4e\xfb\xbb\x76\x7c\xb3\x53\x75\xd1\xb6\xb9\xd2\xc6\xb4\x4f\x99\xa3\x2c\x8e\x32\x40\xdb\x1e\xa5\xed\x31\xc2\xf7\x1f\xc6\x25\x0c\x9a\xf8\x06\x62\x98\xeb\x2b\x90\x87\x03\xb9\xa9\xae\x95\x86\xc3\xd0\x06\xad\xca\x67\x9a\x27\xc9\x64\xba\xd9\x7d\x56\x0f\xd2\xed\x10\x96\xa6\x81\x25\x8f\xf7\xb4\x02\xb1\xee\xad\x95\x5b\x8b\x13\xb0\x2c\x8c\x86\x07\x82\x32\x40\xac\xe5\x1e\xa9\x28\x4c\x74\x04\xab\x6a\x18\xca\x82\x3c\x74\xde\x29\xce\x6c\x69\xb8\xc9\x0c\xe4\x47\x4b\x1b\x31\xb7\xff\x6a\xf1\x8e\x37\xd7\xab\xba\x2e\x8b\x29\x1d\x8a\xf7\x26\x03\x0e\x85\x68\xe8\xcf\x9b\xdd\xf6\x4e\x59\x6c\x5f\x08\x82\xa1\xf2\xdb\x5f\x42\x19\x69\xb1\x4b\x0d\xdc\x66\x48\x54\xdc\xb3\x7e\xb7\xa1\x53\x35\x72\x34\x73\x9e\x42\x08\x8e\xa2\x6d\x79\x7d\xc6\x5d\xa1\x10\x32\x5b\x30\x47\x0c\xe2\x5b\x8f\xe1\xfd\xe3\xcf\x38\x19\xfe\xe0\x61\x05\xce\xd8\x1c\x45\x40\x5a\x5f\xc7\xc7\x26\x93\xec\xe5\x2b\x7e\x09\xa1\x22\xd8\x38\x13\xad\x08\xf2\x24\x2c\x27\xfe\xb7\x3e\xd2\xb4\xa4\xaf\xfd\x5c\x5c\xe3\x39\x4d\xc1\x52\x00\xc6\x99\xe4\xf0\x74\xdd\x66\x2a\xb2\xe2\xea\x0a\xde\x74\xd2\xf1\x7a\x4a\xa5\x02\xed\x7c\xa5\xad\x4c\x09\x5d\x86\xd7\xf9\x9a\x8b\x0f\x5c\x7e\x62\x93\x7d\x8e\xcf\x69\xbe\xb1\x31\x1d\x16\xe2\x47\x30\x7a\x19\x07\x9a\xd8\x9f\x66\x4b\xcc\x53\xff\xf7\xcf\xc1\x4c\x80\x51\x88\x60\xe5\x74\xfb\xfc\xb8\x7e\x07\x00\x00\xff\xff\x8d\x17\xe9\xb7\x24\x04\x00\x00")

func golangGetAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetAllTmpl,
		"golang.get-all.tmpl",
	)
}

func golangGetAllTmpl() (*asset, error) {
	bytes, err := golangGetAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-all.tmpl", size: 1060, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetCountTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xcf\x8a\xdc\x30\x0c\xc6\xcf\xf1\x53\x68\x87\xa1\x38\x90\x35\x3d\x94\x1e\x0a\x73\x58\x4a\x0f\xbd\x2c\x74\xe7\x58\x4a\x70\x62\x25\x75\xd7\xb1\x67\x65\x67\xba\x4b\x98\x77\xaf\xec\x66\x87\x19\xe8\x9f\x43\x20\x96\x3e\xfd\x24\x7d\x68\x59\x6e\xc1\xe0\x60\x3d\xc2\x26\xda\xd1\xeb\x34\x13\x6e\xe0\xf6\x74\x12\x1f\xc3\xec\x53\xbb\x2c\xa0\xf6\xf3\x30\xd8\x67\x38\x9d\x24\xbf\xfa\xf4\x7c\xd0\xa4\x27\x50\x77\xce\xdd\xd1\x18\x39\x5e\x83\x14\x55\x9f\xf5\x60\x7d\x7a\xff\xae\x01\x24\xca\x5f\xa0\x5a\xe4\x16\xe8\x4d\x61\x8a\xcb\x7e\xd6\x1f\xc3\xe3\x7f\x9b\x69\x1a\xaf\x5a\xfd\x9d\xd7\x05\xf3\xb2\x61\x89\xa8\xb8\x12\xa7\x0e\xcd\xc1\xe9\x1e\xbf\x07\x67\x90\x22\xa8\xcf\x7e\x08\x57\xe9\xf8\xe4\xd6\xe8\xa6\x6d\x4b\xa4\x8d\x69\x4a\x85\x21\xaa\xa3\x26\x68\xdb\xa3\x76\x33\x46\xf8\xfa\x8d\x17\x43\x1a\x98\xb7\x30\xe1\x1c\xdf\x81\x3e\x1c\x78\x1a\xf9\x1a\x69\x80\xe9\x83\x45\x67\xca\x9b\xf7\x49\x3a\xd9\xfe\x3c\x7d\xe9\x4e\xda\x8f\x08\x5b\xdb\xc0\x36\xaf\xf7\x61\x07\xea\x7e\x76\x4e\x77\x0e\x57\xa1\xa8\xec\x00\x37\x2c\xcd\x02\x75\xaf\x27\xe4\xa0\xb2\xd1\xb3\x4c\xd6\xb0\x88\x8a\x67\xe8\x83\x37\xd9\xb3\xad\xcd\xc9\x4c\xe0\x79\x06\xed\x22\x96\xf4\x3f\x47\xbc\xe2\x96\xb8\xac\x6b\x51\xad\xee\xb0\xbd\x17\x1e\x64\x53\x18\xc3\x3f\x4f\xae\x9b\xbd\x71\xd8\x3e\xb0\x04\x49\x86\xee\x87\x32\x56\x3b\xec\x53\x03\x97\x1e\x32\x2a\xe7\x5c\x18\xf7\xfc\x92\xbf\x19\xcd\xd9\x4f\xa5\x54\xb6\x22\x5f\xc9\x0e\x0a\x84\xec\x11\x49\x7d\x99\x91\x5e\x1e\xc2\xcf\x3f\x16\xa8\x7d\xaf\xbd\x7c\x53\xee\xac\x2e\x06\xe5\xfa\x9b\x1d\x78\xeb\x8a\x23\x84\x7c\xbd\x1e\xde\x36\x05\x39\xe9\x47\xfc\x44\x24\x59\x54\x16\x13\xaf\xf9\x02\x68\x72\x95\x58\x77\xcd\xa7\xf4\x2b\x00\x00\xff\xff\x6b\x43\x21\x7d\x0a\x03\x00\x00")

func golangGetCountTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetCountTmpl,
		"golang.get-count.tmpl",
	)
}

func golangGetCountTmpl() (*asset, error) {
	bytes, err := golangGetCountTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-count.tmpl", size: 778, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetFirstTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x53\xc1\x8e\xda\x30\x10\x3d\x27\x5f\x31\x8b\x38\x24\x52\xd6\x1f\xb0\x15\x87\x55\xd5\x4a\xbd\x20\x75\x39\x56\x55\x64\xe2\x09\x75\xd7\xd8\xec\xd8\x61\x59\x45\xfc\x7b\x67\x4c\x40\x50\xb5\x5d\xa9\x07\x10\x7e\xf3\xfc\xde\xcc\x63\x3c\x8e\xf7\x60\xb0\xb7\x1e\x61\x16\xed\xc6\xeb\x34\x10\xce\xe0\xfe\x78\x2c\x3f\x5b\x8a\xa9\x1d\x47\x50\xab\xa1\xef\xed\x01\x8e\xc7\x8a\x4f\x5d\x3a\xec\x34\xe9\x2d\xa8\x47\xe7\x1e\x69\x13\x19\xaf\xa1\x2a\x0b\xae\x4d\x85\xa7\xf0\xca\x60\x03\x48\x24\x9f\x40\x75\x29\x3e\xe8\x4d\x16\x2e\xaf\x4d\xad\xdf\x87\xe7\x77\x1d\x35\x6d\x6e\xfc\xfe\xae\xb7\x0e\xe6\x6d\xc6\x94\xdc\x0f\x6e\xd7\x68\x76\x4e\x77\xf8\x23\x38\x83\x14\x41\x7d\xf1\x7d\xb8\x29\xc7\x17\x37\xa1\xb3\xb6\xcd\x48\x1b\xd3\x36\x65\x8d\xb2\xd8\x6b\x82\xb6\xdd\x6b\x37\x60\x84\x6f\xdf\xad\x4f\x48\x3d\xeb\x8d\xac\x70\xc1\x17\xa0\x77\x3b\xee\xa6\x3a\x23\x0d\xb0\x7a\x6f\xd1\x99\x7c\xe6\x79\x92\x4e\xb6\xbb\x74\x9f\xdd\x49\xfb\x0d\xc2\xdc\x36\x30\x97\xf1\x1e\x16\xa0\x96\x83\x73\x7a\xed\x70\x22\x96\x85\xed\xe1\x8e\xa9\x42\x50\x4b\xbd\x45\x06\x95\x8d\x9e\x69\x55\x0d\x63\x59\x70\x0f\x5d\xf0\x46\x32\x9b\x5b\x29\x8a\x02\xf7\xd3\x6b\x17\x31\x97\xff\xd9\xe2\x8d\x6e\xc6\xab\xba\x2e\x8b\x29\x1d\x8e\xf7\x2a\x03\x09\x85\x65\xf8\xc7\x8b\x5b\x0f\xde\x38\x6c\x9f\x98\x82\x54\x85\xf5\x4f\x65\xac\x76\xd8\xa5\x06\xae\x33\x64\x29\xa9\xb9\xb0\x59\xf1\xa9\x3a\x69\x34\x97\x3c\x95\x52\x12\x45\xdb\x52\x78\x8d\xa7\x6d\xe1\x10\xb2\x1a\xd9\x3d\x92\xfa\x3a\x20\xbd\xfd\xf9\x9a\x24\x23\x17\xee\x16\xe0\xad\xcb\x51\x10\xf2\xee\x7a\x39\x36\x59\x64\xab\x9f\xf1\x13\x51\xc5\xb4\xd3\x4c\xbc\x22\x28\x93\x88\x9d\xfa\xe8\x42\xe4\x69\xcb\x53\xc6\x13\xb8\xc4\x43\x9a\x82\x9d\xf4\x1f\x16\xe7\x0b\x22\x55\x7f\xf8\xdd\xf4\x1d\x57\xb1\xbd\xa1\xf0\x97\xf4\x92\x03\xb6\xde\xa6\xf3\x63\x29\x0b\x11\xbe\x98\xad\x3a\xed\x65\xf5\xb5\x31\x14\x7a\xa8\x7a\xa7\x53\x42\x9f\xd9\x75\x5e\xa1\xff\x08\xa0\x3c\x33\x44\x58\x1e\xd4\xf9\x9d\x4a\x53\xd3\x1f\x2e\xef\xe9\x57\x00\x00\x00\xff\xff\x82\xd1\x12\x31\x14\x04\x00\x00")

func golangGetFirstTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetFirstTmpl,
		"golang.get-first.tmpl",
	)
}

func golangGetFirstTmpl() (*asset, error) {
	bytes, err := golangGetFirstTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-first.tmpl", size: 1044, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetHasTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xcf\x8a\xdb\x40\x0c\xc6\xcf\x9e\xa7\xd0\x86\x50\x6c\xf0\xce\x03\x14\x72\xd8\x43\xa1\xbd\x2c\x74\x73\x2c\xc5\xc8\x1e\xd9\x3b\xdd\xf1\x4c\x56\x63\xa7\xbb\x98\xbc\x7b\x35\x13\x37\x24\xd0\x3f\x07\x83\x47\xfa\xf4\x93\xf4\xa1\x65\xb9\x07\x43\xbd\xf5\x04\x9b\x68\x07\x8f\xd3\xcc\xb4\x81\xfb\xd3\x49\x7d\xc6\xd8\x2c\x0b\xe8\xfd\xdc\xf7\xf6\x0d\x4e\xa7\x52\x5e\xdd\xf4\x76\x40\xc6\x11\xf4\x83\x73\x0f\x3c\x44\x89\x57\x50\xaa\xe2\x19\x23\xb4\x21\xb8\x1a\x88\x39\x7d\x81\x2b\x95\xe8\xe4\x4d\xc6\xa9\xeb\x56\xd6\x1f\xc3\xcb\x7f\xfa\x20\x0f\x37\x5d\xfe\x4e\x6b\x83\x79\xdf\x88\x44\x15\x52\x49\x63\x4b\xe6\xe0\xb0\xa3\xe7\xe0\x0c\x71\x04\xfd\xc5\xf7\xe1\x26\x1d\x5f\xdd\x1a\xdd\x34\x4d\x8e\x34\x71\x1a\xa7\xcc\x50\xc5\x11\x19\x9a\xe6\x88\x6e\xa6\x08\xdf\xbe\x5b\x3f\x11\xf7\xc2\x5b\x84\x70\x89\xef\x00\x0f\x07\x99\xa6\xfc\x1d\xa9\x41\xe8\xbd\x25\x67\xf2\x5b\xf6\x99\x70\xb2\xdd\x65\xfa\xdc\x9d\xd1\x0f\x04\x5b\x5b\xc3\x36\xad\xf7\x71\x07\xfa\x71\x76\x0e\x5b\x47\xab\x50\x15\xb6\x87\x3b\x91\x26\x81\x7e\xc4\x91\x24\xa8\x6d\xf4\x22\x2b\x2b\x58\x54\x21\x33\x74\xc1\x9b\xe4\xd9\xd6\xa6\x64\x22\xc8\x3c\x3d\xba\x48\x39\xfd\xcf\x11\x6f\xb8\x39\x5e\x56\x95\x2a\x56\x77\xc4\xde\x2b\x0f\x92\x29\x82\x91\x9f\x57\xd7\xce\xde\x38\x6a\x9e\x44\x42\x5c\x86\xf6\x87\x36\x16\x1d\x75\x53\x0d\xd7\x1e\x0a\x2a\xe5\x5c\x18\xf6\xf2\x2a\xcf\x8c\xfa\xe2\xa7\xd6\x3a\x59\x91\x6e\x64\x07\x19\xc2\xf6\x48\xac\xbf\xce\xc4\xef\x4f\xe1\xe7\x1f\x0b\xf4\xbe\x43\x5f\x7e\x90\x13\xab\xb2\x3d\xa9\xfa\x6e\x07\xde\xba\xec\x07\x93\x1c\xad\x3f\xef\x5f\x67\xe8\x88\x2f\xf4\x89\xb9\x14\xe1\x79\xb5\x55\x22\x84\x3a\x95\xa9\x75\xd5\x74\x49\xbf\x02\x00\x00\xff\xff\x00\x39\xc5\xaf\x02\x03\x00\x00")

func golangGetHasTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetHasTmpl,
		"golang.get-has.tmpl",
	)
}

func golangGetHasTmpl() (*asset, error) {
	bytes, err := golangGetHasTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-has.tmpl", size: 770, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLastTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\x31\x6f\xb3\x30\x10\x86\x67\xfb\x57\xdc\xc7\x64\x24\xe2\xe9\x53\xb7\x4c\x55\x87\x4a\x5d\x9a\x74\x47\x06\x1f\xd4\x8d\xb1\xc9\xe1\xa4\x49\x11\xff\xbd\x36\x24\x2a\x19\x10\x70\xbe\xe7\x7d\x7c\x37\x8e\x1b\xd0\xd8\x18\x87\x90\x0d\xa6\x75\x2a\x9c\x08\x33\xd8\x4c\x13\x6f\x31\xbc\xa9\x21\x8c\x23\xc8\x1d\xc6\xb2\x93\x1f\xd7\x1e\x61\x9a\x44\x1d\x2e\x50\x7b\x17\xf0\x12\xe4\xf3\xf2\x2e\x38\xeb\x0f\x60\x5c\x78\xfa\x9f\x83\xe0\x2c\x52\xbd\x22\xd5\xdd\xd9\x88\x15\x80\x44\xe9\xf1\x94\xf3\xe4\x45\xa7\x67\x11\x5f\x5f\xa2\xf2\xfa\xba\xf8\x53\x06\x76\x15\xea\xde\xaa\x1a\x3f\xbd\xd5\x48\x03\xc8\x57\xd7\x78\x58\x1f\x0f\x47\x7b\xab\x66\x65\x39\x57\xca\x21\x74\x21\x4b\x4d\x9c\x9d\x15\x41\x39\x17\x60\x9b\x3e\x8e\xb6\x3a\x39\x6d\xb1\xdc\x45\x3d\x92\xf0\xd5\x97\xd4\x46\x59\xac\x43\x01\x6b\x3e\xe7\x2c\x9d\x59\xdf\xee\xe3\x9f\x58\x32\x0a\xe8\x0f\x39\x9f\xdd\xc6\x99\xb0\x9a\x8e\xb3\x34\xdd\x16\xe6\x3c\x32\x67\x24\xf9\x7e\x42\xba\xee\xfc\xf7\x9a\x95\xfb\x5a\x39\x11\x71\xa5\x35\xf9\x06\x44\x63\x55\x08\xe8\xee\x49\x79\x8c\x8a\x66\xd3\xcc\xcb\xfa\xb7\x05\x67\x2c\x8c\x9c\x31\x5a\x44\x91\xfc\x41\xf2\x0f\x6b\x4d\xca\x4e\x1d\xf0\x85\x48\x44\x2a\xe2\xf1\x36\x7f\xfd\x8a\xda\x87\xf6\x98\xc8\xd3\xee\x6e\xdb\xff\x0d\x00\x00\xff\xff\x3a\xb2\xd4\xf6\x02\x02\x00\x00")

func golangGetLastTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLastTmpl,
		"golang.get-last.tmpl",
	)
}

func golangGetLastTmpl() (*asset, error) {
	bytes, err := golangGetLastTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-last.tmpl", size: 514, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLimitoffsetTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\xc1\x6e\xdb\x30\x0c\x3d\x5b\x5f\xc1\x06\x3d\xd8\x80\xab\xd3\xb0\x43\x87\x1c\x8a\x61\x87\x01\x43\x81\xb5\xc7\x61\x30\x14\x9b\xca\xb4\xca\x52\x2a\xc9\x49\x0a\x23\xff\x3e\x52\x76\x82\xa4\x28\xba\xed\x60\xc0\xa2\x1e\x1f\x1f\x9f\xc8\x71\xbc\x81\x0e\xb5\x71\x08\x8b\x68\xd6\x4e\xa5\x21\xe0\x02\x6e\x0e\x07\xf1\xcd\xf4\x26\x61\xd7\x8c\x23\xc8\xc7\x41\x6b\xb3\x87\xc3\xa1\xa4\x53\x9b\xf6\x1b\x15\x54\x0f\xf2\xce\xda\xbb\xb0\x8e\x14\xaf\x45\x61\x19\x0f\xc6\xa5\x1a\xbc\xd6\x11\xf3\xff\xc7\x0f\x15\x94\xa2\x08\x7e\x17\x81\x52\xa3\x35\x2d\x7a\x0d\xf2\xc1\xef\x38\x0b\x30\x04\xfe\x7c\xa8\x04\x4b\x41\xd7\xe5\xda\x42\x9c\x0b\x33\x6e\xeb\x9f\xfe\x41\x95\x0a\xeb\x0b\x4d\x90\x25\x1d\xe5\xbc\xaa\x70\x5e\x60\xe5\xbb\x97\x05\x65\x88\x82\x88\xb0\x5f\x61\xb7\xb1\xaa\xc5\x5f\xde\x76\x18\x22\xc8\xaf\x4e\xfb\x8b\xeb\xf8\x6c\xe7\xe8\xa2\x69\x72\xa4\x89\xa9\x4f\x99\x43\x14\x5b\x15\xa0\x69\xb6\xca\x0e\x18\xe1\xc7\x4f\xb2\x01\x83\x26\xbe\x91\x18\x4e\xf1\x25\xa8\xcd\x86\xd4\x94\xc7\x48\xcd\x06\x69\x83\xb6\xcb\x67\x6a\x2f\xa9\x64\xda\xb9\x99\x4a\xe4\xea\x41\xb9\x35\xc2\xb5\xa9\xe1\x9a\xbb\xbd\x5d\x82\xbc\x1f\xac\x55\x2b\x8b\x33\x50\x14\x46\xc3\x15\x41\x19\x20\xef\x55\x8f\x14\x94\x26\x3a\x82\x95\x15\x8c\xa2\x20\x0d\xad\x77\xd9\xc2\x6b\xc3\x97\xcc\x40\x7a\xb4\xb2\x11\xf3\xf5\xbb\x12\x2f\x78\x73\xbc\xac\x2a\x51\xcc\xee\x90\xbd\xd9\x83\xf7\x48\x5e\x3d\xcb\xd1\x30\x76\x90\xe0\xf4\xf3\x6c\x57\x83\xeb\x2c\x36\x0f\x94\x88\xa1\xf4\xab\xdf\xb2\x33\xca\x62\x4b\x69\xe7\x86\x53\x5d\xbe\xb3\x7e\xfd\x48\xa7\x72\xe2\xa8\x4f\xe6\x4b\x29\xab\xac\x85\xe7\x6f\x1a\x36\x72\x2c\xb3\x05\xb3\xc5\x20\xbf\x0f\x18\x5e\xde\x4e\x63\x1b\x39\xe1\x6a\x09\xce\xd8\xec\x5b\x40\xda\x0e\xc7\xc7\x3a\x93\xf4\xea\x09\xbf\x84\x50\x12\x6c\x32\x80\xe6\x09\xb9\x13\x2e\x27\x3f\x5b\x1f\xc9\x1a\xaa\xaf\xfd\x29\x78\x8f\xfb\x34\xbf\x02\xb9\x65\x9c\x49\x0e\x77\xc7\x75\xa0\x20\x57\x5c\x1e\xc1\x8f\xad\x72\x3c\xda\xaa\xeb\x02\x2d\x4d\xa9\xad\x4a\x09\x5d\x86\x57\x79\x26\x8a\x37\x54\xfe\x45\x26\xeb\x9c\xf6\xf1\xf4\x32\x93\x3b\x5c\x88\x17\x68\xd2\x32\x35\x34\xb3\xdf\x9e\x24\x31\x4f\xf5\xe9\xbf\x8d\x99\x01\x53\x21\x82\x89\x79\x54\x78\x13\xff\x04\x00\x00\xff\xff\xed\x93\x86\x3b\x83\x04\x00\x00")

func golangGetLimitoffsetTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLimitoffsetTmpl,
		"golang.get-limitoffset.tmpl",
	)
}

func golangGetLimitoffsetTmpl() (*asset, error) {
	bytes, err := golangGetLimitoffsetTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-limitoffset.tmpl", size: 1155, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x8f\xda\x30\x10\x3d\x27\xbf\x62\x36\xa2\x52\x22\x65\xfd\x03\xb6\xe2\xb0\xaa\xaa\xaa\x87\x22\x75\x39\x56\x55\x64\x92\x31\x75\xd7\xd8\x60\x3b\x2c\x28\xe2\xbf\x77\xc6\x04\x0a\xfd\xa2\xda\x03\x12\x9e\x79\xf3\xde\xcc\xd3\x4c\x86\xe1\x1e\x3a\x54\xda\x22\x14\x41\x2f\xad\x8c\xbd\xc7\x02\xee\x0f\x87\xfc\x03\xc6\x66\x18\x40\xcc\x7b\xa5\xf4\x0e\x0e\x87\x92\x5e\x6d\xdc\xad\xa5\x97\x2b\x10\x8f\xc6\x3c\xfa\x65\xa0\x78\x05\x65\x9e\x51\x6e\x4c\x3c\xb9\x17\x0a\xd6\x80\xde\xf3\xcf\xf9\x2a\x67\x15\xb4\x5d\xa2\xcd\x2f\x25\xb5\xdd\xba\xe7\x1b\x7a\xd2\x2f\xaf\xd4\xfe\xce\xb6\x70\xdd\xbe\x20\x48\xea\x06\x57\x0b\xec\xd6\x46\xb6\xf8\xcd\x99\x0e\x7d\x00\xf1\xd1\x2a\x77\x95\x0e\x1b\x33\x46\x8b\xa6\x49\x91\x26\xc4\x55\x4c\x1c\x79\xb6\x95\x1e\x9a\x66\x2b\x4d\x8f\x01\xbe\x7c\xd5\x36\xa2\x57\xc4\x37\x10\xc3\x39\x3e\x05\xb9\x5e\x53\x37\xe5\x29\x52\x03\xb1\x2b\x8d\xa6\x4b\x6f\x9a\x27\xca\xa8\xdb\x73\xf7\x49\xdd\x4b\xbb\x44\x98\xe8\x1a\x26\x3c\xde\xc3\x14\xc4\xac\x37\x46\x2e\x0c\x8e\xc0\x3c\xd3\x0a\xee\x08\xca\x00\x31\x93\x2b\xa4\xa0\xd0\xc1\x12\xac\xac\x60\xc8\x33\xea\xa1\x75\xb6\x63\xcf\x26\x9a\x93\xcc\x40\xfd\x28\x69\x02\xa6\xf4\x3f\x5b\xbc\xe2\x4d\xf1\xb2\xaa\xf2\x6c\x74\x87\xec\xbd\xf0\x80\x4d\x21\x1a\xfa\xb3\x31\x8b\xde\x76\x06\x9b\x27\x82\xa0\x2f\xdd\xe2\xbb\xe8\xb4\x34\xd8\xc6\x1a\x2e\x3d\x24\x2a\xce\x19\xb7\x9c\xd3\xab\x3c\x72\xd4\x67\x3f\x85\x10\x6c\x45\xd3\x78\xf7\x12\x8e\xbb\x42\x26\x24\x36\xaf\xb7\xe8\xc5\xe7\x1e\xfd\xfe\xcf\x65\xec\x0c\x17\xdc\x4d\xc1\x6a\x93\xac\xf0\x48\x7b\x6b\xf9\x59\x27\x92\x95\x7c\xc6\xf7\xde\x97\x04\x3b\xce\x44\x2b\x82\x3c\x09\xcb\x89\x77\xc6\x05\x9a\x36\x3f\x7a\x3c\x06\x67\xb8\x8b\xa3\xb1\x23\xff\xc3\xf4\x54\xc0\x54\xd5\xdb\x5f\x45\x6f\xa8\xb2\xec\x15\xe4\x94\x26\x13\x99\x71\xe6\xe8\x52\x42\x6a\x2f\x79\xae\xad\x8e\xa7\xeb\xc9\x33\xd6\x3a\xeb\xcf\x5b\x69\xf9\x1a\x64\xd7\x79\xa7\xa0\x54\x46\xc6\x88\x36\xa1\xab\xb4\x55\xaf\xf0\x24\xd5\xfc\x3e\xfc\x65\x59\x74\xee\x93\xb4\x7b\xee\x93\xe5\xd7\x9e\x6e\x40\x41\xf1\x66\x53\x5c\x9c\xe9\x4f\xb2\xff\x31\xed\x76\x57\x23\x82\xc7\xe5\xcb\x3f\x7d\x4e\xa8\x22\x1f\x37\x93\x0f\xff\x47\x00\x00\x00\xff\xff\x2f\xa6\x55\x23\xb9\x04\x00\x00")

func golangGetOneAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneAllTmpl,
		"golang.get-one-all.tmpl",
	)
}

func golangGetOneAllTmpl() (*asset, error) {
	bytes, err := golangGetOneAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one-all.tmpl", size: 1209, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xcf\x6e\xdb\x30\x0c\xc6\xcf\xd6\x53\xb0\x41\x0f\x32\xe0\xea\x01\x06\xe4\xd0\xc3\x30\xec\x52\x60\xcd\x71\x18\x0c\xd9\xa2\x3c\xad\xb2\x94\xd2\x72\xd6\xce\xc8\xbb\x8f\x52\x9d\x34\x01\xf6\xe7\x10\x20\xfc\xf8\xf9\x47\xea\x03\x97\xe5\x0e\x0c\x5a\x17\x10\x36\x93\x1b\x82\x4e\x33\xe1\x06\xee\x8e\x47\xf1\x09\x53\xbb\x2c\xa0\x76\xb3\xb5\xee\x05\x8e\x47\xc9\x55\x9f\x5e\xf6\x9a\xf4\x08\xea\xde\xfb\x7b\x1a\x26\xd6\x6b\x90\xa2\xe2\xde\xda\x78\x8c\x3f\x59\x6c\x00\x89\xf2\x2f\x52\x2d\xf2\x14\x0c\xa6\x60\xc5\xe5\x48\x17\x0e\xf1\xe9\x3f\xf3\x34\x0d\x57\xd3\xfe\x4e\xeb\xa2\x79\xdd\xb0\xa5\x6c\x83\x63\x87\x66\xef\x75\x8f\xdf\xa3\x37\x48\x13\xa8\xcf\xc1\xc6\xab\xf6\xf4\xec\x57\x75\xd3\xb6\x45\x69\xa7\x34\xa6\xc2\x10\xd5\x41\x13\xb4\xed\x41\xfb\x19\x27\xf8\xfa\xcd\x85\x84\x64\x99\xb7\x30\xe1\xac\x6f\x41\xef\xf7\xbc\x8d\x3c\x29\x0d\x30\xdd\x3a\xf4\xa6\xd4\xfc\x9e\xa4\x93\xeb\xcf\xdb\x97\xe9\xa4\xc3\x80\x70\xeb\x1a\xb8\xcd\xcf\xfb\xb0\x05\xf5\x30\x7b\xaf\x3b\x8f\xab\x51\x54\xce\xc2\x0d\x5b\xb3\x41\x3d\xe8\x11\x59\x54\x6e\x0a\x6c\x93\x35\x2c\xa2\xe2\x1d\xfa\x18\x4c\xce\xec\xd6\xe5\x66\x26\xf0\x3e\x56\xfb\x09\x4b\xfb\x9f\x2b\x5e\x71\x8b\x2e\xeb\x5a\x54\x6b\x3a\x1c\xef\x45\x06\x39\x14\xc6\xf0\x9f\x67\xdf\xcd\xc1\x78\x6c\x1f\xd9\x82\x24\x63\xf7\x43\x19\xa7\x3d\xf6\xa9\x81\xcb\x0c\x19\x95\x7b\x3e\x0e\x3b\xae\xe4\x1b\xa3\x39\xe7\xa9\x94\x5a\xa3\x70\xc1\xa5\xd3\xd1\x88\x2a\x1f\xcd\x16\x0a\x95\xdc\x01\x49\x7d\x99\x91\x5e\xb9\xfb\x47\x82\xda\xf5\x3a\xe4\x33\xd1\xc6\x50\xb4\x20\xad\xd7\x29\x61\x28\xbc\xba\xc4\x9d\x63\xcc\xd0\x9b\x2d\x04\xe7\x4b\x6e\x84\x7c\xe4\x21\x67\xf0\x0b\x29\xbe\x1f\x6c\x9e\x3a\xea\x27\xfc\x48\x24\xf9\x93\xb7\x30\xde\xcd\xe5\x0e\x4f\x5e\x66\x89\x35\xa7\x7c\x86\xbf\x03\x00\x00\xff\xff\x87\x4f\x2c\x01\x47\x03\x00\x00")

func golangGetOneTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneTmpl,
		"golang.get-one.tmpl",
	)
}

func golangGetOneTmpl() (*asset, error) {
	bytes, err := golangGetOneTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one.tmpl", size: 839, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetPagedTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x51\x6b\xdc\x30\x0c\x7e\x4e\x7e\x85\x1a\xfa\x90\x40\x6a\xfa\xdc\x71\x83\x32\xf6\x30\x18\xa5\xeb\x3d\x8e\x11\x7c\x89\x72\xf3\xea\xd8\x57\xdb\xb9\xb6\xdc\xee\xbf\x4f\xb2\x93\xf4\x0a\xa5\x1b\x7b\x08\xc4\xf2\x27\xe9\xd3\x27\xc9\x87\xc3\x05\x74\xd8\x2b\x83\x50\x78\xb5\x35\x32\x8c\x0e\x0b\xb8\x38\x1e\xf3\x5b\xb9\xc5\xae\x39\x1c\x40\xac\xc7\xbe\x57\x4f\x70\x3c\x96\x74\x6a\xc3\xd3\x4e\x3a\x39\x80\xb8\xd6\xfa\xda\x6d\x3d\xd9\xeb\x3c\xd3\x6a\x50\x01\x94\x09\x35\x21\xec\x3d\x1a\xf0\xc1\x29\xb3\xad\xa0\xcc\x33\x67\x1f\x3d\x90\xaf\xd7\xaa\x45\xdb\x83\xb8\xb3\x8f\xec\x36\x41\xed\x18\x26\x74\x0d\xe8\x1c\x7f\xd6\x55\x39\x73\x43\xd3\x45\x32\xf9\x29\x51\x65\xf6\xe4\xf6\x37\x96\xd2\x6d\x5f\x71\x84\x48\x71\xce\xf9\x4e\xf8\x8d\xed\x9e\x0b\xf2\xc8\x33\xd5\xcf\xc5\xac\x56\x50\x14\x70\xc8\xb3\x6c\x36\x40\x71\x59\xe4\x19\xb9\x66\x94\x0e\x87\x0d\x76\x3b\x2d\x5b\xfc\x69\x75\x87\xce\x83\xf8\x62\x7a\x1b\x83\xcc\xd7\xfe\x41\x4f\xd6\xa2\x69\xa2\xa5\xf1\x61\x08\x31\x53\x9e\xed\xa5\x83\xa6\xd9\x4b\x3d\xa2\x87\xef\x3f\x48\x48\x74\x3d\xc5\x3b\x50\x84\xc5\xbe\x02\xb9\xdb\x11\xe7\x72\xb6\xd4\xac\x6a\xaf\x50\x77\xf1\x4c\x22\x04\x19\x54\x3b\x95\x5c\x25\x72\x4e\x9a\x2d\xc2\xb9\xaa\xe1\x9c\x35\xb9\x5a\x81\xb8\x19\xb5\x96\x1b\x8d\x13\x30\x56\x7a\x46\x50\x06\x88\x1b\x39\x20\x19\x85\xf2\x86\x60\x65\x15\xcb\x6e\x9a\xd6\x9a\x28\xf4\xb9\xe2\x4b\x8e\x40\x7c\x7a\xa9\x3d\xc6\xeb\x77\x29\xbe\x8a\x1b\xed\x65\x55\xb1\x7a\x51\x1d\x6a\x42\xd4\xe0\xbd\x20\x49\xf6\xa9\x89\xd5\x22\x18\x2b\x48\x70\xfa\x79\xd0\x9b\xd1\x74\x1a\x9b\x3b\x72\x44\x57\xda\xcd\x2f\xd1\x29\xa9\xb1\xa5\x9e\x9f\x0a\x4e\x79\xf9\x4e\xdb\xed\x9a\x4e\x65\x8a\x51\x2f\xe2\x0b\x21\xaa\xc8\x85\x87\x36\xcd\x23\x29\x16\xa3\x39\xb5\x47\x27\xbe\x8d\xe8\x9e\xdf\x76\x63\x19\xd9\xe1\x6c\x05\x46\xe9\xa8\x9b\x43\xda\x28\xc3\xc7\x9a\x26\xa8\x8e\x81\x06\x79\x8f\x9f\x9d\x2b\x09\x9a\x44\xa0\xc9\x43\xae\x86\x53\x8a\x4f\xda\x7a\x92\x27\xf5\x4e\x19\x15\x0c\x3e\x82\xf8\x2a\x7d\xb8\xbd\x8f\xbd\xea\xed\x82\xbd\xc1\xa7\x30\x35\xe8\x14\x9c\xd6\x8b\x8c\x4c\x66\x35\x83\xd7\xad\x34\xbc\x1b\xb2\xeb\x1c\x2d\x61\xd9\x6b\x19\x02\x8d\x32\xc3\x2b\xf8\x0d\xad\x1d\x06\x49\x7e\x2f\x90\x97\xac\xc4\xf3\x8d\xe2\xfe\xa1\x3a\x2e\x2f\xed\xff\xd2\xd4\x24\x2c\x67\xe1\x0d\x4d\x5c\x93\x0e\x53\x86\xab\x85\x32\xc7\xa9\x3e\xfc\x8f\xa6\x31\x58\x7a\x94\x3e\xc2\x65\x74\x63\x03\x9a\x98\xbe\xe2\x85\x4e\xb7\xb1\x8e\x97\x77\x88\x46\x7a\x08\x62\xbd\xa3\xd7\x28\x94\x33\xc7\x57\x32\x10\xcf\x23\x20\x8d\xfd\xc9\x73\x90\x3c\xd3\x7f\xca\x3e\x71\x4c\xb5\x2e\xa0\x9a\x49\xe7\xd3\xcc\xf3\xc3\xf3\x27\x00\x00\xff\xff\x20\x27\x50\x4a\x80\x05\x00\x00")

func golangGetPagedTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetPagedTmpl,
		"golang.get-paged.tmpl",
	)
}

func golangGetPagedTmpl() (*asset, error) {
	bytes, err := golangGetPagedTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-paged.tmpl", size: 1408, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x8f\xda\x30\x10\x3d\x27\xbf\x62\x36\xa2\x52\x22\x65\xfd\x03\xb6\xe2\xb0\xaa\x5a\xa9\x87\x22\x75\x39\x56\x55\x64\x92\x31\x75\xd7\xd8\x60\x3b\x2c\x28\xe2\xbf\x77\xc6\x04\x0a\xfd\xa2\xda\x03\x08\xbf\x79\x7e\x6f\xe6\x69\xcc\x30\xdc\x43\x87\x4a\x5b\x84\x22\xe8\xa5\x95\xb1\xf7\x58\xc0\xfd\xe1\x90\x7f\xd0\xb6\x6b\x86\x01\xc4\xbc\x57\x4a\xef\xe0\x70\x28\xe9\xd4\xc6\xdd\x5a\x7a\xb9\x02\xf1\x68\xcc\xa3\x5f\x06\xc2\x2b\x28\xf3\x8c\x6a\x63\xe1\xc9\xbd\x10\x58\x03\x7a\xcf\x1f\xe7\xab\x9c\x6d\xd0\x76\x49\x37\xbf\xf4\xd4\x76\xeb\x9e\x6f\x19\x4a\xbf\xbc\xb2\xfb\xbb\xdc\xc2\x75\xfb\x82\x28\xa9\x1d\x5c\x2d\xb0\x5b\x1b\xd9\xe2\x37\x67\x3a\xf4\x01\xc4\x47\xab\xdc\x55\x39\x6c\xcc\x88\x16\x4d\x93\x90\x26\xc4\x55\x4c\x1a\x79\xb6\x95\x1e\x9a\x66\x2b\x4d\x8f\x01\xbe\x7c\xd5\x36\xa2\x57\xa4\x37\x90\xc2\x19\x9f\x82\x5c\xaf\xa9\x9b\xf2\x84\xd4\x40\xea\x4a\xa3\xe9\xd2\x99\xe6\x89\x32\xea\xf6\xdc\x7d\x72\xf7\xd2\x2e\x11\x26\xba\x86\x09\x8f\xf7\x30\x05\x31\xeb\x8d\x91\x0b\x83\x23\x31\xcf\xb4\x82\x3b\xa2\x32\x41\xcc\xe4\x0a\x09\x14\x3a\x58\xa2\x95\x15\x0c\x79\x46\x3d\xb4\xee\x98\xd9\x44\x73\x91\x15\xa8\x1f\x25\x4d\xc0\x54\xfe\x67\x8b\x57\xba\x09\x2f\xab\x2a\xcf\xc6\x74\x28\xde\x8b\x0c\x38\x14\x92\xa1\x1f\x1b\xb3\xe8\x6d\x67\xb0\x79\x22\x0a\xfa\xd2\x2d\xbe\x8b\x4e\x4b\x83\x6d\xac\xe1\x32\x43\x92\xe2\x9a\x71\xcb\x39\x9d\xca\xa3\x46\x7d\xce\x53\x08\xc1\x51\x34\x8d\x77\x2f\xe1\xb8\x2c\x14\x42\x52\xf3\x7a\x8b\x5e\x7c\xee\xd1\xef\xff\x7c\x8d\x93\xe1\x0b\x77\x53\xb0\xda\xa4\x28\x3c\xd2\xe6\x5a\x3e\xd6\x49\x64\x25\x9f\xf1\xbd\xf7\x25\xd1\x8e\x33\xd1\x8a\x20\x4f\xc2\x76\xe2\x9d\x71\x81\xa6\xcd\x8f\x19\x8f\xe0\x0c\x77\x71\x0c\x76\xd4\x7f\x98\x9e\x2e\xb0\x54\xf5\xf6\x57\xd3\x1b\xae\x6c\x7b\x45\xa1\x2f\xee\x25\x05\xac\xad\x8e\xa7\xb7\x92\x67\x2c\x7c\x36\x9b\xb7\xd2\xf2\xea\xcb\xae\xf3\x4e\x41\xa9\x8c\x8c\x11\x6d\x62\x57\x69\x85\x5e\x11\x40\xba\xf3\xfb\xa4\x97\xd7\xa2\x73\x9f\xa4\xdd\x93\x4b\x60\xfb\xb5\xa7\x85\x57\x50\xbc\xd9\x14\x17\x6f\xf2\xa7\xd8\xff\x24\x74\xbb\xab\x91\xc1\xe3\xf2\x33\x3f\xfd\x79\x70\x54\xe3\x1a\xf2\x2b\xff\x11\x00\x00\xff\xff\x62\x10\xdc\x10\xa8\x04\x00\x00")

func golangGetScalarAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarAllTmpl,
		"golang.get-scalar-all.tmpl",
	)
}

func golangGetScalarAllTmpl() (*asset, error) {
	bytes, err := golangGetScalarAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar-all.tmpl", size: 1192, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x41\x6e\xdb\x3c\x10\x85\xd7\xd2\x29\x26\x86\x17\x12\xa0\xf0\x00\x3f\xa0\x45\x16\x7f\x81\x6e\x0c\x34\x5e\x16\x85\x40\x89\x43\x95\x0d\x45\x3a\x43\xca\x4d\x2a\xf8\xee\x1d\xd2\x8a\x63\x03\x6d\xba\x10\x20\xbe\x19\x7e\xf3\xf8\x30\xcb\x72\x0f\x0a\xb5\x71\x08\x9b\x60\x46\x27\xe3\x4c\xb8\x81\xfb\xd3\xa9\xfc\x64\x9c\xea\x96\x05\xc4\x7e\xd6\xda\xbc\xc0\xe9\x54\xf1\x69\x88\x2f\x07\x49\x72\x02\xf1\x60\xed\x03\x8d\x81\xf5\x1a\xaa\xb2\xe0\xda\x5a\x78\xf4\x3f\x59\x6c\x00\x89\xd2\xe7\xa9\x2e\xd3\x18\x74\x2a\x73\xcb\xeb\x99\xc6\x1d\xfd\xd3\xbf\x06\x4a\x1a\x6f\xc6\xfd\x1d\xd7\x7b\xf5\xba\xe1\x96\x6c\x07\xa7\x1e\xd5\xc1\xca\x01\xbf\x7b\xab\x90\x02\x88\xcf\x4e\xfb\x9b\x72\x78\xb6\xab\xba\xe9\xba\xac\x74\x21\x4e\x31\x33\xca\xe2\x28\x09\xba\xee\x28\xed\x8c\x01\xbe\x7e\x33\x2e\x22\x69\xe6\x2d\x4c\xb8\xe8\x2d\xc8\xc3\x81\xdd\x54\x6f\x4a\x03\x4c\xd7\x06\xad\xca\x67\x7e\x4f\x94\xd1\x0c\x17\xf7\x79\x3a\x49\x37\x22\x6c\x4d\x03\xdb\xf4\xbc\xff\x5a\x10\xbb\xd9\x5a\xd9\x5b\x5c\x1b\xcb\xc2\x68\xb8\xe3\xd6\xd4\x20\x76\x72\x42\x16\x85\x09\x8e\xdb\xaa\x1a\x96\xb2\x60\x0f\x83\x3f\x67\xb6\x35\xa9\x98\x08\xec\x47\x4b\x1b\x30\x97\x3f\xb4\x78\xc3\xcd\x7a\x55\xd7\x65\xb1\xa6\xc3\xf1\x5e\x65\x90\x42\x61\x0c\xff\x3c\xdb\x7e\x76\xca\x62\xf7\xc8\x2d\x48\x95\xef\x7f\x08\x65\xa4\xc5\x21\x36\x70\x9d\x21\xa3\x52\xcd\xfa\x71\xcf\xa7\xea\xcc\x68\x2e\x79\x0a\x21\xd6\x28\x8c\x33\xf1\x6d\x6b\xca\x22\x6d\x4d\x0b\x99\x4a\xe6\x88\x24\xbe\xcc\x48\xaf\x5c\xfd\x23\x41\xec\x07\xe9\xd2\x9a\x48\xa5\xc8\x6b\xa8\xb4\x95\x31\xa2\xcb\xbc\x3a\xc7\x9d\x62\xcc\xd0\x16\xd8\xbc\xf8\x9f\x68\xe7\xb9\x18\x72\x82\x84\xbc\xf0\x2e\xa5\xf1\x0b\xc9\xbf\xef\xae\x33\x36\x27\xb1\xde\xbd\x6b\x93\xf2\xe1\x8d\xe4\x78\x92\x4f\xc8\xfc\x8a\xaf\x9c\x83\x7c\x6f\xce\x3b\x7c\x4d\x5f\x33\x4e\x2b\xfc\x3b\x00\x00\xff\xff\x74\x62\xde\x03\x85\x03\x00\x00")

func golangGetScalarTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarTmpl,
		"golang.get-scalar.tmpl",
	)
}

func golangGetScalarTmpl() (*asset, error) {
	bytes, err := golangGetScalarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar.tmpl", size: 901, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x59\xef\x6e\xdb\xc8\x11\xff\x2c\x3d\xc5\x44\xcd\x05\xa4\xa1\xd0\x57\x5c\x51\xa0\x3a\xb8\x40\x6c\x39\xad\x51\xc7\x76\x6c\xf9\x0e\x45\x2e\xd0\x51\xe2\xd2\x61\x4d\x71\x15\x72\x29\xd1\x55\xf4\xee\x9d\x99\xdd\x25\x97\x94\xe4\x4b\xee\x7a\x38\x38\xcb\xdd\xf9\xb7\xbf\x99\x9d\x99\x5d\x6d\x36\xaf\xe1\xa5\x5c\xaa\x44\x66\x05\x8c\x4e\x20\xb8\x36\xe3\xd7\xdb\x6d\xbf\x7f\x7c\x0c\x6f\xee\x27\xd7\xff\x38\xbf\x3a\xbf\x7d\x33\x39\x1f\xc3\xe9\xbf\xe1\x41\x2e\x1f\x1f\x82\x24\x3b\x2e\x96\xe1\x5c\x2c\x64\xf6\x28\x9e\x1e\xe4\x71\x34\xab\x82\xd5\x9f\x89\x63\x7c\x0d\x57\xd7\x13\x38\x1f\x5f\x4c\x82\x7e\x1f\x89\x1e\xc3\x07\x01\x9b\x0d\x04\x37\x66\x4c\xa2\x93\xc5\x52\xe6\x0a\xbc\x7e\x6f\x30\x7b\x52\xa2\x18\xe0\x60\x2e\x33\x25\x2a\x45\xc3\x28\x54\xe1\x2c\x2c\xc4\x71\xf1\x39\xa5\x6f\x91\xe7\x32\x67\xa2\x78\xc1\x04\xb9\x88\x53\x31\x37\xc3\x07\x51\x2d\x69\x54\xa8\x1c\x65\xac\xcc\x30\xc9\x1e\x98\x43\x25\x0b\x41\xff\x96\x59\x32\x97\x11\x0f\x8b\xa7\x6c\x3e\xe8\xf7\x69\xf7\x79\x98\xa1\x49\xc1\x79\xa5\xf2\xf0\x82\x8d\x2a\xc8\xc0\x1e\x19\x4c\x03\xa2\x11\x59\x44\x43\x9f\x11\xb9\xc9\xc5\x4a\x64\x0a\x50\x53\x94\x10\x58\x61\x0a\x89\x61\x8c\x73\xb9\x80\x79\x58\x16\xa8\x1b\x66\x65\x92\x46\x10\x87\x49\x5a\xe6\xa2\xe8\xaf\xc2\x1c\xa6\x70\x02\xc6\xc8\xe0\x42\xc9\xd0\x9d\x24\x73\x83\xcb\xb0\x50\x17\x59\x24\xaa\x7a\x05\xf7\x1b\xdc\x2d\x71\x55\x99\x29\xb2\x3d\x78\x57\x22\x52\x7d\x9e\x41\x08\x7f\xce\xc3\xe5\x79\x9e\x13\x75\x99\xcd\x3d\x04\x0b\x8e\xce\x09\x31\x1f\x18\x38\xd8\xe4\x42\x95\x79\x46\x5f\xb8\xb5\x4b\xf9\xf0\x20\x72\x4d\x1b\xcb\x7c\x11\x2a\xa3\x7f\x08\x61\xfe\x50\x40\x10\xa0\x7f\x95\xc8\x63\x74\xf0\x66\x8b\xbb\xee\x21\xdf\x44\xca\x77\x61\xf6\x74\x2b\xd7\x05\xea\xd1\xfe\x08\xae\xc4\xda\x1b\x28\x29\x61\x81\x4b\x90\xe3\xda\xc0\x67\xea\xfb\xac\x28\x97\x84\x89\x88\xc6\x79\xb2\x12\x79\x87\xa7\x6c\xd6\x21\x62\x02\xc3\x78\xbe\x58\xaa\xa7\xfb\x25\xfa\x5f\x74\x58\x04\xad\x40\xc9\x4b\x48\x8c\x66\xd1\x06\x20\x95\x0f\xbc\xd5\xaf\xd9\x09\x6c\xfa\xbd\x24\x06\xb3\xff\x17\x27\x90\x25\x29\xcd\x19\x44\x8c\x08\xcd\x8b\xac\x68\xd1\xb6\x8f\xb1\xaa\x9e\x96\x02\x58\xc9\x19\xc6\x0f\x90\x2b\xfa\xe8\xc2\x82\xc3\xb7\x9e\x9f\xde\x67\x8f\x99\x5c\x67\x0e\xe5\x09\x24\x52\x85\x6d\x9a\x0e\x2e\xee\xe2\x95\x24\x74\xdd\x99\x49\x35\x96\x99\x68\xcd\x34\x6e\x70\xa7\xcf\xc8\x9c\x3c\x44\xd3\x7e\x4a\x64\x1a\x52\x58\xba\xcb\x0e\xaa\x04\x5c\xb3\x21\x82\xab\x9c\x2b\x02\x81\x02\x88\xf1\xee\xf7\xd8\xf8\x9a\xbb\xdf\x33\x2e\xd4\xd0\xd2\xb2\x55\x56\x4f\xbd\x2f\x45\xfe\x74\x57\xc6\x71\x52\xd9\xb9\xad\x71\x90\x27\xea\x60\xd4\x8e\xf2\x0d\x05\x29\xb5\x71\x19\xe0\x52\x60\x96\x6b\xce\xb5\x0e\x6b\x47\x80\x89\x66\xf6\x62\x1d\xf4\x8d\x1b\xad\x34\xf2\x9b\xfd\xf8\xd9\x0a\x69\xe4\x2e\xc2\x47\xc1\x53\x76\xc7\x6d\xc1\x62\xaf\x50\xfc\x64\xb1\x82\xd2\xe4\x2b\xb6\x67\x83\x7f\x47\xe6\x4c\x15\xeb\x44\xcd\x3f\x31\x2f\x32\xcd\x31\x75\x01\xa6\x2e\xda\x92\xf6\xea\x08\x25\x89\xc0\x44\xc5\xae\xcb\x5d\x06\xed\xf4\x03\x0c\x36\x22\x9a\x0d\xae\x77\x37\x58\x76\xa3\xcc\x8b\x5c\x0f\x3a\xdb\xed\xc8\x30\xfb\x42\xd5\x76\x6b\x3b\x01\x3b\xc4\x45\xb2\x64\x04\xcf\x44\x35\x11\xe9\xd1\xc8\x1c\x6f\x9c\xd9\x36\x06\x8a\x26\x1e\xbd\x6f\xb1\xc6\x89\xe3\x7d\x76\xb4\x97\x1d\x7d\xaa\x39\x35\xde\x67\x0a\xd5\x69\xe1\xc6\xea\xb7\x98\xe0\x1c\xc0\x7d\x26\x74\x96\x9d\x73\x31\x02\x57\x73\xdb\xbe\xf9\xee\xf1\x6d\xa2\x73\xe8\x2c\xff\x0e\x83\xf7\x59\xb9\x27\x5d\x68\x32\x3b\x3d\x72\x74\xd6\xa6\x72\xda\x30\x91\x54\xa7\x55\x4e\x1d\x95\x98\x6b\x5c\x9f\x4f\xbf\x1e\x45\xf8\xad\x28\xca\x14\x93\xac\x3e\x79\x26\x75\x7c\x15\xf7\x11\xb3\x13\xb2\x6d\x66\x9c\xfa\x1a\x7e\xcb\x4e\x5b\x31\x85\x33\x93\xea\xcd\x8d\x64\xaa\x4e\xb5\x89\x44\xa1\x92\x8c\x91\x01\xa4\x82\x10\x96\x9a\x8e\xea\x54\x2a\x8b\xe2\x09\xc1\x42\x20\x0a\x22\x68\xb3\xf2\x2a\xe1\x67\x96\x75\xb1\x62\xf0\xc6\xa7\x4e\xc2\x65\x7b\xc6\xa7\xfd\x5e\x34\x7b\x27\xd4\x27\x19\x15\x58\x69\xff\x29\xe5\x63\xe1\x10\xf5\xae\xe4\x5a\x57\x6a\x1f\xa8\x91\x09\x26\xf8\xc7\xd4\x25\x0e\x9d\xeb\xa5\xc8\xcc\xf1\x1e\x42\x21\xcb\x1c\x5d\x62\x83\xc4\x8b\x66\x70\x34\x3e\x65\xb8\x6c\xa6\x43\x99\xb4\x79\xd4\x3d\xa5\x55\x6b\x83\xc9\x5f\xc6\xbb\x1b\xb7\x35\x1a\x27\x21\xb5\x5a\xba\x2d\xe2\x44\x45\xbd\xd1\x55\xb8\x10\xf0\x05\xb8\x33\x89\x61\xf0\xdd\xe7\x01\xae\x53\xd2\xd2\x92\xb5\xce\x13\x90\x68\x5e\x4d\xbe\xdd\x7a\xda\x42\xdf\x6d\xab\x7a\x91\x88\x43\x0c\x89\x51\x2b\xd9\x0e\x0f\x66\x31\x2e\xcb\x36\x51\xbf\xd8\x97\xa8\x87\x6e\x8a\xd7\xe4\xa8\xc3\xb6\x3c\xed\xad\x33\x22\x7b\xa4\x99\x7d\x04\x67\xe8\x4e\x4c\x52\x38\x83\x52\xb6\x86\x99\x7a\x22\xc3\x82\xd5\xc0\x50\xde\x20\xe6\x9e\xff\xe3\xb7\x98\x45\xbe\x47\x90\x5e\x8d\x4f\x89\x72\x7c\x3a\x32\xb2\x86\xda\xe6\x59\xc0\xe1\x10\x50\x0c\x9c\x68\xf7\xe3\xb0\xff\xff\xf4\x16\xea\xa8\xc3\x0f\x75\x64\x62\xed\x7a\x8b\x76\xfa\x47\x3d\x55\xa7\x28\x0a\x0a\xaa\xa2\x75\x63\x20\x67\xff\xa1\xf0\xf4\xc1\x60\x0c\x5e\x3b\x4e\x0d\x1f\x92\x05\x16\x38\x1a\x8f\x4f\xad\x53\xfc\x3d\xb2\xf8\x3c\xcc\x55\x05\xe6\x36\x81\x25\x94\xff\xa5\xfc\x31\xa9\x86\x8e\x78\xa5\xbf\xc8\x83\x46\xec\xa9\x78\x48\x32\xf2\xf5\xf3\xc1\xe5\x1a\xd4\x78\xd2\x50\xbc\x9a\x54\x44\x3f\xc1\x7c\xaf\x28\xcb\xa3\x1a\x03\xef\x88\x19\x29\x51\x4f\x2a\x4f\x55\x3e\x39\xd9\x22\x82\xa0\xa3\x4e\x7b\x13\x0b\xee\x34\x9c\xb7\x15\xa1\xde\xd9\x20\xe6\x98\xdb\x0a\xc1\x3a\xc2\xd5\x06\xa4\x57\xb7\xd5\x26\x9a\xb1\x8a\xad\x96\x67\x7c\xc6\xdc\x63\x91\x0a\x25\xde\xa4\xe9\x3e\x64\x86\xa0\xd3\x04\x22\x84\xd1\xf1\xd7\xbf\x1c\xc0\x08\x23\xc5\x62\xfb\x1c\x42\xdf\x33\x43\xf7\xcc\xb5\x4e\x99\xd3\x5c\xf5\x74\x96\x40\xd9\x16\x50\x55\xa1\x5d\x8b\x45\xa2\xc8\xbd\x3d\x2b\x96\x8f\x5f\x2d\x61\x9a\xcb\x34\x9d\xe1\x6d\x92\xec\x42\x86\x5b\xf3\x69\x4e\x5f\xb3\xec\x9e\xe7\xfa\xa2\x80\xb9\x9d\xd0\x78\x1d\xa6\xe9\x08\x6a\x52\xba\xa7\x89\x68\x04\xdf\xad\x06\x43\xd7\x1e\x57\x9e\x5f\xa7\x01\xbf\x06\x1e\xd5\x47\x2e\xba\x4d\xa5\x9c\x54\x4e\x1e\xc7\x0f\x4e\x38\x93\xaa\xdf\x44\x44\x53\x54\xf5\xa1\x6d\x71\xa8\x86\xa3\x8e\x72\x9a\xab\x69\xf1\xdc\x18\xa0\x0e\x1c\x1c\x07\xd2\x16\xaa\x87\xc4\x35\x30\x7e\x95\xc0\x86\x9c\x45\x1e\xc8\x41\x3c\xff\x32\x9a\xf1\x3e\xe9\x85\xa1\x9b\x8a\x8a\xf1\xe9\x80\x9f\x1b\x98\x50\x55\x87\x09\x27\x95\x43\x88\x57\xee\xf4\x30\x29\xde\xe4\xd3\x01\xab\x67\x1a\x3c\x0e\x0d\xc3\x76\xeb\xa0\x8c\xa1\xcf\xff\x1d\x71\x21\xd6\x76\xc3\x74\x8a\xc0\xcf\xca\x2c\x4a\xc5\xd4\x49\x87\x48\xa0\x13\xae\x49\xbc\x9d\xec\xd3\x51\x82\x78\x8a\x59\x92\x45\x5e\x51\xd7\xe3\x9d\x7b\x0f\x25\x04\xa3\x34\xb0\xd4\xdd\xa4\xb6\x23\x16\x03\xf9\x4e\x2d\x94\x57\xe0\x9f\x56\xc7\x83\x0d\x0f\x74\xaf\xbb\x8e\xf9\x97\x0e\x9f\x73\xc7\xfd\x0d\x6d\xcf\x5d\x96\x9c\x1e\x11\xe4\xa3\x4d\xa4\x49\xd1\xf4\x91\xfa\xc4\xe9\x24\x89\x67\x17\x89\x9c\x54\x71\xa0\xeb\x75\xfb\x5d\xdf\xbd\xe9\xb4\x72\xae\xeb\x5a\x13\x5d\x5d\xc7\xb2\x4f\xbb\x3b\xaa\xf7\xbb\x53\xea\x74\x0e\x3c\x6a\x0b\x74\x32\x6c\x6b\x61\xc3\xb5\x73\x04\x5c\xab\x7b\x1d\x1d\x23\x4d\xec\xcc\x70\x06\x22\x7a\xfe\x4f\x33\x99\x68\x1a\xd1\x37\x56\x1f\x9a\xda\x0e\xdd\xd6\xae\xf1\x48\xad\xd6\x87\xbb\xf9\x27\xb1\x08\xf7\x5d\xa2\x7f\xa5\xed\xe8\xe5\xbb\xf7\x97\x48\xfc\xeb\xf3\x92\xea\x4a\x64\xf3\x0c\x76\x98\x36\x33\x75\xf7\x6d\x8e\xa5\xd9\xb7\x4d\x19\xa3\x26\x71\x6d\x14\x17\xbc\xed\xef\x40\x83\x0f\x41\x07\x11\x5d\x3a\x6b\x38\x6a\x4f\xd7\x76\xb8\x9e\xb6\x36\x3c\xe3\xec\x03\xc7\xe0\x37\x5f\x8b\x8e\x8f\x61\x72\x3d\xbe\xc6\x3a\x81\xe5\x14\x4f\xfe\x32\xc5\xb5\x4f\x32\xc5\x71\x71\xe0\x2d\x49\x96\x8a\x4e\x42\xf3\x6e\x17\x7b\x03\xd2\x85\xa5\xa5\xf8\x25\x23\x45\x54\x64\x7e\xc9\xb0\xcc\xe8\x93\xb8\x44\xa0\xd5\x93\x47\x2b\x5c\x60\xcc\x63\x14\xca\xb1\x0f\x50\x4e\x0b\xa6\xa1\xd0\x2c\xf0\xe1\xa3\x63\xaf\x75\xf5\xd2\xac\xfa\xf0\x96\x9f\xb3\xbc\x58\xdb\xa2\xe8\x56\x0c\x73\xc8\xcb\x4c\xf0\xde\x68\xf6\x2d\x5b\xe8\xc5\x43\x18\x7c\xc0\x7b\x4a\x86\xed\xc0\x2a\x4c\xb1\xbf\x8b\xf1\x84\x27\x43\xc0\x0f\xda\x8c\xce\xeb\x4b\x5b\xc4\x13\xf8\x3b\x7c\xaf\xab\x6a\x47\x08\xfe\x6f\x6a\x64\x2f\x5f\x31\xa7\x7e\xa7\x0d\x7e\x0a\xd3\x52\x5c\xc7\x1e\x0a\xf4\xb5\x90\x7c\x15\xfc\x8b\x12\x9e\x4f\xfd\x80\x25\xbb\x51\xb9\x96\xab\x09\x2e\x8a\xab\x24\x35\xcd\xc3\x8e\xae\xab\xfb\xcb\x4b\xd6\xd6\xa3\x44\x84\xb7\xb5\x52\xd0\xc7\x16\xe8\x2f\x19\x7e\x42\x22\xce\x53\xb1\xf0\xfc\xe0\xc2\x02\x65\x5b\x79\xdb\x43\xb3\x95\x48\x1d\x78\x84\xac\x56\xa5\x5f\x63\x38\x34\x46\xed\x4d\xc6\xac\x19\xdb\x67\x84\xc6\xb7\x94\xf5\xbd\x6c\x3f\x71\x41\xc4\x81\x71\x06\xd3\xde\xbe\x3d\xfb\xe1\x87\x1f\xfe\x76\x15\x66\xd2\xaf\xa5\x7c\xf8\x48\x0f\xe1\x5a\x04\x82\x3f\x1d\xc2\xac\x81\x7e\x65\x20\x40\x58\x5e\x98\x77\x6c\x04\xe7\x86\xb1\x20\x87\x7a\x33\xdf\xa2\xb4\x6b\xc0\x9f\x2a\x6b\xae\x03\x15\x18\x5f\xf3\xec\xb6\x6f\xff\x1c\xde\xaa\xd3\xfb\xef\x52\xad\x2c\xd5\x96\x13\x76\xc7\x53\x1f\x07\xa6\x43\xb0\x0d\xc2\x1d\x1f\xde\xc2\xbe\xaf\xbf\x34\x87\xb9\x2e\xe5\x75\x95\x9f\xe7\x02\xc3\xd6\x59\x3e\xe3\x09\xcd\xdf\x26\xd5\x2f\xc3\x0e\xa9\x7e\x08\x72\x48\x5b\xed\x80\x21\x74\x33\x89\xd3\xc1\xbc\x4d\x44\x1a\x35\x3f\x04\x18\x76\x4e\x23\x13\x93\x5a\x9c\x43\x49\xc3\x3d\xed\xfb\x7d\x21\x72\xfa\x21\x83\x15\xf7\x4a\xf3\x35\x5d\x94\xee\x1b\x7e\x3d\x4f\xa9\xd0\x3d\xce\x46\xbe\x93\xc4\xbc\x96\xdd\x3e\x4c\x27\xe1\x2c\x15\x4e\x29\x00\x93\xb2\x07\x6c\x27\x2d\x22\x1d\xb6\x41\x7d\x6b\xa1\xf9\x79\x27\x4c\x2f\x32\xd4\xaa\x9a\x5d\x36\xb8\xb4\x10\x3f\x80\xce\x21\x29\x3b\x58\xb5\xc1\x77\x10\xdb\x97\xd4\x48\x7b\xcb\x89\x07\xb4\xb3\x5f\x69\x73\x7f\x40\xf1\x8e\x9b\x39\x84\x62\x27\x7a\x76\x25\xbc\x9c\x2b\xc9\x37\xa1\xa6\xcd\x9c\xe2\xe1\x86\xe0\x1d\x9e\xc6\x94\x29\x83\xdd\x38\x8b\xf7\x6c\xa6\x37\x2d\x84\x82\x99\x94\x78\xfa\xa6\x59\x99\xa6\x76\xbc\xa2\x2c\xd9\x8a\x32\xa7\x80\x69\xfd\xd8\xaa\xac\x98\xe2\x0c\xbf\x38\xab\x72\x2c\x74\x54\x6d\x6a\x8f\x63\x94\x21\xa2\x6f\x33\x86\x69\x85\x39\x91\x78\x9d\x49\x6f\xd5\xbe\xe2\x9b\x10\x6a\xcb\xdb\x00\x59\x8c\x05\x3e\x2f\xb1\x86\x68\x33\x47\xa0\x2f\xad\x18\x68\x8f\xe2\x4d\x14\x91\x69\xaf\xea\x7b\xe7\x0a\xb6\xf5\xb5\x36\xb8\xc2\x2d\x9a\x68\xdc\xd9\xcd\xf4\x36\x5c\x9b\x1d\x4d\x6c\x67\xb2\xb3\x19\xca\x7b\xab\x3d\x8f\xf2\xae\x1c\x52\xe2\xb5\xfa\x45\x17\xb3\x5d\x5b\x8f\x1a\x5b\xfd\x7d\x30\x1b\x81\x7b\x8c\xf9\x1a\x88\xc8\xab\xfa\x03\x9c\x03\x1c\x77\x98\x7c\x48\x8a\x4c\xab\xa1\x08\x80\x8d\x95\xfd\x22\x0e\x38\x46\xbe\x7c\x01\x1c\x71\x88\xe8\xa1\x8e\x10\x83\x84\x7b\xcf\x3f\xa8\x81\x39\x50\x81\x93\x5b\x80\xc1\xd8\xa3\xa3\xce\x20\x2c\xfd\x47\xfb\x55\xeb\x6d\x65\x22\x57\xc9\xf4\x4c\xa6\xe5\x22\x3b\x94\x8b\xf4\xaa\x9b\x8c\xc8\xea\xd7\xed\xa3\x69\x9f\xea\xef\x27\x67\x9e\x6a\x8a\xaa\xf3\xee\xe9\x80\xaf\x02\x22\x73\x5f\xf8\xc7\xf4\x63\xc2\x61\x3e\xec\xe4\x1e\x85\x58\x42\xb9\x04\xf5\x49\xc0\x02\x6b\xa0\xc2\x96\x06\xd3\x34\xbd\xe0\x16\x12\x67\x43\xe4\xc6\xc4\x50\xe8\xab\x48\x01\x33\xa1\xd6\x42\x64\x2c\xe7\xbf\x32\x13\x05\xac\x93\x34\x65\x51\x75\x15\x55\xd2\xf6\x2e\x98\x16\xe4\x52\xe4\xe9\x53\xe0\x18\x39\xc1\xe2\x3c\x67\xc3\xc8\x96\x77\xac\x94\x8d\x3e\x3e\xa6\xdf\x92\x71\x95\x16\xc0\x3c\x9f\x01\x15\x7e\xfe\xd9\x98\x20\xc4\xa6\x1c\xd1\x44\xe6\x85\xc8\x54\x41\x1c\x7d\x4e\x6d\xef\x2f\x4d\x7d\x81\x6d\x2d\x88\x20\xfc\x46\x61\xff\x0b\x00\x00\xff\xff\x84\xd3\xd4\xa0\xfb\x1f\x00\x00")

func golangHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangHeaderTmpl,
		"golang.header.tmpl",
	)
}

func golangHeaderTmpl() (*asset, error) {
	bytes, err := golangHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.header.tmpl", size: 8187, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangMiscTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\xc1\xaa\x83\x30\x10\x45\xd7\xcf\xaf\xb8\x04\xdf\xae\xfa\x01\x42\xb7\xdd\x14\xba\x92\xae\x0d\x75\x94\x01\x1b\x6c\x12\x17\x92\xfa\xef\xcd\x98\x92\x16\xba\xbb\x39\x73\xe6\x66\x42\xa8\xd0\xd3\xc0\x86\xa0\x9c\xb7\xcb\xcd\x2b\x6c\x5b\xe1\xd7\x99\x10\x02\xea\x8b\xbe\x53\x04\x48\x33\x84\x22\x42\xab\xcd\x48\xa8\x4f\x4c\x53\xef\xc4\xfe\x8b\x90\x87\x2c\x7f\xef\xc5\x4c\xa6\x7f\xc3\x56\x5a\xf7\x28\x76\xab\x47\x87\x4a\xd6\xbb\x5c\x5a\xf2\x01\xa5\x47\x73\xfc\x8c\x93\x5d\xf2\x4f\xdb\x99\xd6\x98\x1a\x89\x57\x3d\x2d\x84\x27\x66\xcb\xc6\x0f\x50\xff\x0f\x95\xa4\x64\x77\x72\x61\xb5\x3f\xe4\xbf\xcc\x8b\x9c\x05\xbf\x02\x00\x00\xff\xff\x8e\x34\xcf\xa7\x0b\x01\x00\x00")

func golangMiscTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangMiscTmpl,
		"golang.misc.tmpl",
	)
}

func golangMiscTmpl() (*asset, error) {
	bytes, err := golangMiscTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.misc.tmpl", size: 267, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xc1\x6e\xe3\x36\x10\x3d\x5b\x5f\xc1\x15\x72\x90\x50\x85\xe8\x79\x01\xa3\x08\xb6\x69\x9b\x22\x35\xba\x71\xb7\x97\xa2\x10\x68\x69\xe4\xb2\xa1\x49\x95\xa2\xb2\x09\x0c\xff\x7b\x67\x48\x4a\x96\xbc\x76\xda\x02\x39\xf4\x60\x40\xe4\x0c\xdf\xbc\x99\x79\x43\x7a\xbf\xbf\x66\x35\x34\x52\x03\x4b\xb5\xd8\x41\xca\xae\x0f\x87\xe4\x53\x5b\x0b\x07\xfb\x3d\x93\x0d\xd3\xc6\x31\xfe\x00\xae\xb7\x9a\x1d\x0e\x2b\x13\x3e\xd1\x06\xba\xc6\x8d\x12\xbf\xf8\xba\x6f\x1a\xf9\x8c\xab\x84\xf0\xc8\x40\x28\xc9\x14\xbc\x93\x5b\x2d\xf0\x64\x8c\x40\x26\x07\xbb\x56\x61\x9c\x21\x32\x47\x80\x0c\xe1\x2a\xf7\xdc\x0a\x2b\x76\x8c\xdf\x28\x75\x63\xb7\x1d\xee\x17\xc9\xa2\xf7\xa4\x98\x8f\xe7\x6c\x5f\x39\x1e\x68\x86\xc5\x0a\x21\xd0\x2f\x67\x59\xb2\x08\xc4\x8f\xa4\x71\x1d\x01\xc7\xad\x82\x8d\x19\x80\xb5\x0c\x7f\xc6\xe6\x97\xd9\x4b\xfd\x64\x1e\xff\x1d\x75\x61\xb7\x33\xe2\x2c\xf0\x7e\x05\x7c\x63\xea\x97\x00\x4d\xcc\x61\xb7\x81\x1a\xc1\x2b\xf8\xc3\xa8\x1a\x6c\xc7\xf8\x9d\x6e\x0c\x9b\x9a\xbb\xbf\x54\xdc\x4d\xcb\xd2\xef\x94\x9d\xdb\xb9\x94\x9c\x92\x45\x59\x76\xe0\xba\x92\x9c\xde\x2f\x59\x49\x1f\x9b\x5e\xd7\x0a\xca\x7b\xe9\xc0\x0a\xd5\xed\x7f\x34\x52\xbf\x67\x69\xc1\x52\x44\x7d\x12\x16\xbd\x9e\x84\xea\xa1\x63\xbf\xfd\x2e\x35\x3a\x35\x18\x7f\x3f\xda\x04\xe5\x32\xb7\x78\x32\x56\xe8\x2d\xcc\xdb\x21\x36\x0a\xbe\x93\xa0\xea\xce\x33\xc6\x3e\x84\xfc\x39\xf5\x2d\x36\x89\x13\x41\xb6\x4f\x16\x8b\x31\xec\x92\x89\xb6\xc5\xea\x64\xc3\x4e\x71\xee\x9c\x37\x65\x79\xee\x4f\x0e\x49\xf2\xf5\xc7\xfb\x19\xc0\xcc\x50\x9c\x2b\x40\x96\x12\xea\x07\xa3\xfa\x1d\x89\x01\x0f\x7f\x93\x12\x6a\x2c\xb1\x97\x85\xcf\xf0\xda\x0b\x69\x05\x58\xf2\x95\xf9\xec\x33\x2a\x4b\x8d\x5f\x58\x58\xb3\xf9\x93\xd7\x1b\xfe\x83\x31\x8f\x1d\x47\x6b\x96\xf3\x4f\xbf\x7c\xc8\xf2\x11\x63\xe8\x68\xac\xd2\x4d\xef\xcc\xa4\x32\xaf\xa5\x4e\xec\xee\xb4\x74\xbf\x0a\x45\x9a\x4e\xde\x22\xdb\x58\xc3\x31\xd7\x79\xa2\xe3\xa4\x9f\xb0\xc4\x6d\x05\xfa\x34\x4c\xce\x96\x4b\xf6\xb5\xef\xe0\x50\xa3\x71\xb2\x70\xcf\x86\x6f\x2d\x55\x81\x7a\x6d\xdd\x4b\x18\x54\x2a\x8d\xf7\x07\xd5\xc1\xcc\xf3\xac\x53\x20\x77\xda\x93\x28\xc6\x49\x01\x68\xed\x4b\xd6\x10\x6d\x5f\x42\x92\xa4\x70\xb2\x8a\x33\x98\x4f\xd5\x7a\x25\x0b\x76\x45\x43\x8a\x2d\xe4\xab\x5e\x29\x52\x6c\x74\xf4\xf9\xbe\x43\x57\x72\x18\x55\x27\x3b\x8d\x6e\x59\x1e\x15\x5b\x19\x5d\xd3\xad\x77\x25\xc9\x48\x08\xc8\xa6\xc1\xa9\x02\x6f\xbe\x48\x6f\x86\x79\x54\xf2\x17\xf9\x5d\x96\x45\x00\xe3\x9c\x8f\x8a\xa0\x6e\x30\x3f\xe3\xb1\x3d\xc9\x30\xb2\x74\x1f\xb0\xf9\xf4\x3f\x20\x1a\xd8\xcc\xeb\x56\x0a\x05\x95\x23\xc8\xe3\xf5\x81\xa8\x64\x53\x66\xbb\xc6\x55\x16\x30\x8a\xf1\x6a\x08\x71\x63\xbf\xe7\xaf\x02\xf1\x2e\xe8\x12\x65\x71\x2c\xac\x7c\x02\xcb\x6f\x9f\xa1\xba\x00\x83\x10\xe4\xfe\x6e\x49\x2a\xf1\x85\x8d\x52\xa0\xe3\x3b\xf1\x08\xb7\xd6\x66\xe8\x11\x0a\x74\x14\x54\x32\x13\x50\x50\x2e\x0e\xca\x4c\x7f\x83\x24\xd7\x7d\xdb\x1a\xeb\xba\x60\x92\x7a\xeb\xad\x5f\xb0\xfc\xd8\x83\x7d\x79\xc0\xf9\x3d\xc7\x94\xaf\x2b\xa1\xe9\x66\x17\x75\x6d\x4d\xc3\xb2\x06\xaf\x7d\x07\x7a\x08\x98\x87\xf9\x8c\xe9\xe0\x54\xd0\x88\x20\x77\x7c\x27\xcd\xe7\x6e\x9a\x98\x9f\x06\x9f\xc1\xe1\x95\xf4\xbd\xd7\xd9\x1a\xcc\x06\xe7\xad\xaa\x7d\x31\xdc\x99\xb7\xe6\x7b\xbc\xb3\x67\xcf\x4d\xb9\x85\xf0\xe4\x4c\x24\x47\x7b\xff\x51\x76\x74\xe4\x44\x7a\x69\x76\xf7\xd3\xcf\xf7\x77\xb7\xdf\xe6\x2c\x65\x5f\x4d\xa0\x67\x33\xf0\xcf\xbd\x3c\x3d\xf2\x3f\xeb\x66\xbc\xe1\xa2\x33\xd1\xa2\xff\x0e\x93\xff\x28\x47\xc1\x07\xd7\xe9\x5f\x88\xbf\x03\x00\x00\xff\xff\x06\x66\x45\x4a\xba\x09\x00\x00")

func golangUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangUpdateTmpl,
		"golang.update.tmpl",
	)
}

func golangUpdateTmpl() (*asset, error) {
	bytes, err := golangUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.update.tmpl", size: 2490, mode: os.FileMode(438), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"golang.create-raw.tmpl": golangCreateRawTmpl,
	"golang.create.tmpl": golangCreateTmpl,
	"golang.decl.tmpl": golangDeclTmpl,
	"golang.delete-all.tmpl": golangDeleteAllTmpl,
	"golang.delete-world.tmpl": golangDeleteWorldTmpl,
	"golang.delete.tmpl": golangDeleteTmpl,
	"golang.dialect-postgres.tmpl": golangDialectPostgresTmpl,
	"golang.dialect-sqlite3.tmpl": golangDialectSqlite3Tmpl,
	"golang.footer.tmpl": golangFooterTmpl,
	"golang.get-all.tmpl": golangGetAllTmpl,
	"golang.get-count.tmpl": golangGetCountTmpl,
	"golang.get-first.tmpl": golangGetFirstTmpl,
	"golang.get-has.tmpl": golangGetHasTmpl,
	"golang.get-last.tmpl": golangGetLastTmpl,
	"golang.get-limitoffset.tmpl": golangGetLimitoffsetTmpl,
	"golang.get-one-all.tmpl": golangGetOneAllTmpl,
	"golang.get-one.tmpl": golangGetOneTmpl,
	"golang.get-paged.tmpl": golangGetPagedTmpl,
	"golang.get-scalar-all.tmpl": golangGetScalarAllTmpl,
	"golang.get-scalar.tmpl": golangGetScalarTmpl,
	"golang.header.tmpl": golangHeaderTmpl,
	"golang.misc.tmpl": golangMiscTmpl,
	"golang.update.tmpl": golangUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"golang.create-raw.tmpl": &bintree{golangCreateRawTmpl, map[string]*bintree{}},
	"golang.create.tmpl": &bintree{golangCreateTmpl, map[string]*bintree{}},
	"golang.decl.tmpl": &bintree{golangDeclTmpl, map[string]*bintree{}},
	"golang.delete-all.tmpl": &bintree{golangDeleteAllTmpl, map[string]*bintree{}},
	"golang.delete-world.tmpl": &bintree{golangDeleteWorldTmpl, map[string]*bintree{}},
	"golang.delete.tmpl": &bintree{golangDeleteTmpl, map[string]*bintree{}},
	"golang.dialect-postgres.tmpl": &bintree{golangDialectPostgresTmpl, map[string]*bintree{}},
	"golang.dialect-sqlite3.tmpl": &bintree{golangDialectSqlite3Tmpl, map[string]*bintree{}},
	"golang.footer.tmpl": &bintree{golangFooterTmpl, map[string]*bintree{}},
	"golang.get-all.tmpl": &bintree{golangGetAllTmpl, map[string]*bintree{}},
	"golang.get-count.tmpl": &bintree{golangGetCountTmpl, map[string]*bintree{}},
	"golang.get-first.tmpl": &bintree{golangGetFirstTmpl, map[string]*bintree{}},
	"golang.get-has.tmpl": &bintree{golangGetHasTmpl, map[string]*bintree{}},
	"golang.get-last.tmpl": &bintree{golangGetLastTmpl, map[string]*bintree{}},
	"golang.get-limitoffset.tmpl": &bintree{golangGetLimitoffsetTmpl, map[string]*bintree{}},
	"golang.get-one-all.tmpl": &bintree{golangGetOneAllTmpl, map[string]*bintree{}},
	"golang.get-one.tmpl": &bintree{golangGetOneTmpl, map[string]*bintree{}},
	"golang.get-paged.tmpl": &bintree{golangGetPagedTmpl, map[string]*bintree{}},
	"golang.get-scalar-all.tmpl": &bintree{golangGetScalarAllTmpl, map[string]*bintree{}},
	"golang.get-scalar.tmpl": &bintree{golangGetScalarTmpl, map[string]*bintree{}},
	"golang.header.tmpl": &bintree{golangHeaderTmpl, map[string]*bintree{}},
	"golang.misc.tmpl": &bintree{golangMiscTmpl, map[string]*bintree{}},
	"golang.update.tmpl": &bintree{golangUpdateTmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

