// Code generated by go-bindata.
// sources:
// golang.create-raw.tmpl
// golang.create.tmpl
// golang.decl.tmpl
// golang.delete-all.tmpl
// golang.delete-world.tmpl
// golang.delete.tmpl
// golang.dialect-postgres.tmpl
// golang.dialect-sqlite3.tmpl
// golang.footer.tmpl
// golang.get-all.tmpl
// golang.get-count.tmpl
// golang.get-first.tmpl
// golang.get-has.tmpl
// golang.get-last.tmpl
// golang.get-limitoffset.tmpl
// golang.get-one-all.tmpl
// golang.get-one.tmpl
// golang.get-paged.tmpl
// golang.get-scalar-all.tmpl
// golang.get-scalar.tmpl
// golang.header.tmpl
// golang.misc.tmpl
// golang.update.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _golangCreateRawTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcd\x8a\xdb\x3e\x10\x3f\x5b\x4f\x31\xff\x9c\x6c\xc8\xea\x01\xfe\xb0\x87\x52\xb6\xb0\x50\x0a\x4d\x7a\x17\x8a\x35\x76\xd5\xc8\x92\x77\xac\x7c\x21\xf4\xee\x45\x96\xe3\xf5\x12\x12\x0a\xed\x6d\x98\xb1\x7e\x5f\x1a\x39\x84\x27\x50\xd8\x68\x8b\xb0\xb2\xb2\xc3\x15\x3c\xc5\xc8\x36\xf2\xf4\x99\x50\x7a\x0c\x01\x74\x03\xd6\x79\xe0\x1b\xf4\x07\xb2\x10\xe3\x37\x97\xcb\x10\x00\xad\x82\x18\x45\x08\xc0\xb7\x87\xa6\xd1\x67\x88\x91\x25\xc8\x34\x48\x40\x6c\x89\x3f\xe8\xd6\x4a\x7f\xa0\x89\x24\x8d\x3c\x76\xbd\x91\x7e\x26\xe7\x10\x63\x19\x02\xd4\xfe\xdc\x4b\x92\x1d\xf0\x4f\xd4\x42\x8c\x15\x94\xac\xc8\x62\xde\x85\x84\x00\xd3\x47\x73\x6b\x0d\xb3\x2a\x24\x02\x24\x72\x54\xdd\x57\xa4\xed\xd1\xed\xff\x4c\x8e\xa4\x76\x16\xc3\x26\x92\x1b\xbc\x9d\x53\x97\x8c\x36\x8a\xb5\xda\x5b\x3c\x01\xff\xa2\xd1\xa8\x21\x65\x33\xf6\xb1\xdb\xa1\xea\x8d\xac\xf1\xa7\x33\x0a\x69\x00\xfe\x6a\x1b\x07\xd3\xb1\x71\x3c\xbc\x99\xa9\xbb\x12\x62\xec\x88\xc1\x77\x7e\x95\x41\x8e\x92\x40\x8c\x0d\x78\x4e\xc5\x9b\xd9\x1d\xac\x32\x28\x36\x68\x15\x52\xe9\x76\xbf\xb8\xd2\xd2\x60\xed\xd7\xb0\x3c\x5f\xb1\x22\xcd\x8c\x6b\xb7\xbe\xf3\x65\xc6\x18\x43\x1b\xfd\xcd\x42\x2b\x76\x8d\xfb\xe3\xdd\xb3\x42\xac\x53\xaa\xf0\x0c\x23\x07\xe9\x23\x12\x7f\x39\x63\x7d\x07\x2b\x41\x15\xba\x19\xcf\xfc\xf7\x0c\x56\x1b\x08\xac\x28\x28\x03\x26\x8c\x4e\xee\xf1\x85\xa8\x44\xa2\x8a\x15\x91\x5d\x67\x56\x9b\x1c\x87\x19\xf0\x3d\xd2\x26\x6d\x5a\xdf\x3b\xf2\x43\x16\xa5\x6d\x0b\x8b\xbc\x3f\x68\xbd\x11\xfa\xfd\x80\x74\xd9\xb8\xd3\x03\xe3\x7c\x5b\x4b\x9b\xee\x5c\x2a\x45\xae\x81\xb2\x31\xd2\x7b\xb4\x57\xe0\x0a\x1e\x5b\xb2\xda\xac\x1f\xfa\xba\x52\x2e\x76\xf6\xd6\xaa\x10\x84\x43\x4e\xfa\xff\x7f\x13\xf5\x7d\x5d\x42\xf4\xfb\x99\x6a\x24\xe6\x5f\xe5\xe0\x5f\xed\x80\xe4\x5f\x55\xf9\x57\x6e\xd3\xac\x45\x9f\x00\xd3\x5f\x22\x9b\xe6\x3f\x2e\x3d\xa6\xa7\x55\xfb\x73\xda\xcf\x7e\x5f\x65\xff\xd3\x9b\x5a\xd6\x8b\xf2\x77\x00\x00\x00\xff\xff\xa6\x7b\x5d\x9d\xac\x04\x00\x00")

func golangCreateRawTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateRawTmpl,
		"golang.create-raw.tmpl",
	)
}

func golangCreateRawTmpl() (*asset, error) {
	bytes, err := golangCreateRawTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create-raw.tmpl", size: 1196, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcd\x6a\x1b\x3f\x10\x3f\xaf\x9e\x62\xfe\x3e\xed\x82\xa3\x07\x08\xe4\xf0\x27\xa4\x34\x50\x0c\x4d\xd2\xb3\x90\x57\xb3\x5b\xd5\x5a\x69\x33\x92\x63\x1b\xa1\x77\x2f\xda\x0f\xdb\xc1\xd8\x14\xda\xdb\x30\xb3\xfa\x7d\x69\xb4\x31\xde\x81\xc2\x46\x5b\x84\x85\x95\x1d\x2e\xe0\x2e\x25\xf6\x48\x28\x03\xc6\x08\xba\x01\xeb\x02\xf0\x17\x0c\x5b\xb2\x90\xd2\xca\x8d\x65\x8c\x80\x56\x41\x4a\x22\x46\xe0\xaf\xdb\xa6\xd1\x7b\x48\x89\x65\xbc\x3c\xc8\x28\xec\x1c\xdc\xeb\xd6\xca\xb0\xa5\x89\x21\x8f\x02\x76\xbd\x91\xe1\xc8\xcc\x21\xa5\x32\x46\xa8\xc3\xbe\x97\x24\x3b\xe0\xff\x53\xeb\x21\xa5\x0a\x4a\x56\x8c\x6a\x4e\x4a\x62\x84\xe9\xab\x63\x6b\x09\x47\x59\x48\x04\x48\xe4\xa8\xba\x2e\x49\xdb\x0f\xb7\xf9\x33\x3d\x92\xda\x93\x1a\x36\xb1\x5c\x00\xae\x9d\x3a\x8c\x70\x45\x6e\x67\xb9\x2b\x44\xe5\x57\x6e\x97\xb3\x29\x84\xb0\x6e\x07\xf7\x0f\xe0\xd6\xbf\xb8\x5a\xf3\xaf\xce\x6d\x3c\x5f\xb9\x5d\x59\xf1\x1f\x6f\x8f\x65\x35\xb8\x9c\xa1\x07\xc7\x56\x07\x8b\x3b\xe0\x5f\x34\x1a\x95\xd9\xd9\xf8\x4d\xb7\x46\xd5\x1b\x59\xe3\x4f\x67\x14\x92\x07\xfe\x6c\x1b\x07\xd3\xb1\x61\xec\xdf\xcd\xd4\x5d\x08\x31\x74\x84\x0f\x5d\x58\x8c\x20\x1f\x92\x40\x0c\x0d\x78\xc8\xc5\xbb\x59\x6f\xad\x32\x28\x5e\xd0\x2a\xa4\x72\x90\xa8\xa5\xc1\x3a\x2c\xe1\xfc\x7c\xc5\x8a\x3c\x33\xae\x7d\x0d\x5d\x28\x47\x8c\x21\xf9\x21\xa4\xa3\xd0\x8a\xcd\x77\xf6\x79\x83\x58\x21\x96\xf9\x6a\x60\x8a\x81\xf4\x07\x12\x7f\xda\x63\x7d\x05\x2b\x43\x15\xba\x19\xce\xfc\xf7\x00\x56\x1b\x88\xac\x28\x68\x04\xcc\x18\x9d\xdc\xe0\x13\x51\x89\x44\x15\x2b\x12\x9b\x67\x56\x9b\x31\x0e\xe3\xf1\x14\x69\x93\xf7\xb5\xef\x1d\x05\x3f\x8a\xd2\xb6\x85\xb3\xbc\x3f\x69\xbd\x10\xfa\x7d\x8b\x74\x78\x71\xbb\x1b\xc6\xf9\x6b\x2d\x6d\x5e\x1c\xa9\x14\xb9\x06\xca\xc6\xc8\x10\xd0\xce\xc0\x15\xdc\xb6\x64\xb5\x59\xde\xf4\x35\x53\x9e\x2d\xfe\xa5\x55\x21\x08\xfd\x98\xf4\xfd\xbf\x89\xfa\xba\x2e\x21\xfa\xcd\x91\x6a\x20\xe6\xdf\xa4\x0f\xcf\xd6\x23\x85\x67\x55\xfe\x95\xdb\x3c\x6b\x31\x64\xc0\xfc\xaf\x19\x4d\xf3\xb7\x43\x8f\xf9\x7d\xd6\x61\x9f\xf7\xb3\xdf\x5c\x3e\x9e\xb9\x3e\x2b\x7f\x07\x00\x00\xff\xff\xc0\xb8\xac\xa4\xef\x04\x00\x00")

func golangCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangCreateTmpl,
		"golang.create.tmpl",
	)
}

func golangCreateTmpl() (*asset, error) {
	bytes, err := golangCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.create.tmpl", size: 1263, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeclTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\xd6\x55\x48\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x49\x4d\xce\x51\x52\xa8\xad\xe5\x4a\x2b\xcd\x4b\x56\xd0\xc8\x4f\xca\x52\xd0\xaa\xae\x56\xd0\x0b\x4a\x4d\x4e\xcd\x2c\x4b\x2d\x72\x4a\x2c\x4e\x55\xa8\xad\xf5\xcc\x2d\xc8\xd1\x54\x00\x49\x04\x67\xa6\xe7\x25\x96\x94\x16\x81\x44\x15\xaa\xb9\x40\x42\x4e\xf9\x29\x95\x20\x23\x6a\x41\xbc\xd4\xbc\x14\x05\xdd\xda\x5a\x2e\x40\x00\x00\x00\xff\xff\x9b\x28\x5e\xfd\x65\x00\x00\x00")

func golangDeclTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeclTmpl,
		"golang.decl.tmpl",
	)
}

func golangDeclTmpl() (*asset, error) {
	bytes, err := golangDeclTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.decl.tmpl", size: 101, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\x41\x8b\xdb\x30\x10\x85\xcf\xd6\xaf\x98\x0d\x39\xd8\xe0\x15\x3d\x94\x1e\x16\x7c\x08\x74\x0f\xbd\xec\x61\x73\x2c\x45\x28\xd6\x38\x55\x77\x2c\x65\x47\x72\x9a\x22\xfc\xdf\x8b\x14\x37\x78\x61\x69\xa1\x07\x83\x3d\xf3\xfc\xbd\x99\xc7\xa4\x74\x0f\x06\x07\xeb\x10\x36\xc1\x1e\x9d\x8e\x13\xe3\x06\xee\xe7\x59\x7c\x46\xc2\x88\x2a\x25\x90\xfb\x69\x18\xec\x05\xe6\xb9\x4e\x09\xfa\x78\x39\x69\xd6\x23\xc8\x1d\xd1\x8e\x8f\x01\xe6\xb9\x81\x5a\x54\xbd\x9f\x5c\x04\xeb\xe2\xa7\x8f\x2d\x20\x73\x7e\x3c\x37\x22\x7b\xa0\x33\x05\x2a\xd6\x86\xd6\x9d\xfd\xcb\xbf\xdd\x34\x1f\xdf\x78\x89\x94\xde\xe7\x1d\xbc\xf9\x75\xa5\x55\x59\x32\x1e\xd0\x9c\x48\xf7\xf8\xdd\x93\x41\x0e\x20\xbf\xb8\xc1\xc3\xba\x1d\x5e\x69\xa9\x6e\x94\x2a\x15\x15\xe2\x18\x37\x59\x24\xaa\xb3\x66\x50\xea\xac\x69\xc2\x00\x5f\xbf\x59\x17\x91\x07\xdd\x63\x9a\x45\x75\xab\x77\xa0\x4f\x27\x74\xa6\xfe\x53\x69\x21\x25\x18\x2c\x92\x29\xdf\x20\xf7\x51\x47\xdb\xdf\xa6\x2f\xee\xac\xdd\x11\x61\x6b\x5b\xd8\xe6\xf5\x1e\x3a\x90\x4f\x13\x91\x3e\x10\x2e\x42\x51\xd9\x01\xee\x52\x2a\x02\xf9\xa4\x47\x84\x79\x96\x36\xb8\x89\xa8\x6e\x20\x89\xaa\x52\xaa\xf7\xce\xe4\xcc\xb6\x36\x37\x33\x01\x3a\x18\x34\x05\x2c\xed\xbf\x8e\xf8\x86\x5b\xea\x75\xd3\x88\x6a\x49\xc7\x99\x75\x06\x39\x14\xe8\xf2\xcb\x2b\x1d\x26\x67\x08\xd5\x33\x3a\x83\x5c\xfb\xc3\x0f\x69\xac\x26\xec\x63\x0b\xeb\x0c\x1b\x51\xe5\x1e\xf9\xe3\x3e\x8e\xb1\xbe\x32\xda\x5b\x9e\x52\xca\x1c\x85\x52\x9c\xc7\xc9\xd7\xf2\xd0\x41\x81\xb1\x3d\x23\xcb\xc7\x0b\xf6\xef\xff\x94\x73\xc9\xfa\xbb\x0e\x9c\xa5\x12\x04\x63\x9c\xd8\xc1\x87\xb6\x10\x46\xfd\x82\x8f\xcc\x35\x32\x97\x7d\x96\xcb\xbc\xba\xe4\x25\x18\x83\x7c\xf6\x3f\xc3\x6e\x18\xb0\x8f\x68\xea\xff\x82\x2e\xfd\x85\xed\x2c\xad\xef\xf2\x77\x00\x00\x00\xff\xff\x5a\xc7\x38\xe5\x58\x03\x00\x00")

func golangDeleteAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteAllTmpl,
		"golang.delete-all.tmpl",
	)
}

func golangDeleteAllTmpl() (*asset, error) {
	bytes, err := golangDeleteAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-all.tmpl", size: 856, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteWorldTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x90\xb1\x6a\xc3\x30\x10\x86\x67\xe9\x29\xae\x86\x82\x4d\x13\xd1\xa1\x74\xf3\x10\x4a\xb6\x2e\x4d\x1f\x20\x38\xd6\x39\xa8\x55\x4f\xcd\xe9\x9c\xba\x08\xbf\x7b\xb1\x5c\x87\xcc\x19\x84\x40\xe8\xff\xbe\xbb\x3f\xa5\x35\x58\xec\x1c\x21\x14\xd1\x1d\xa9\x91\x9e\xb1\x80\xf5\x38\x6a\x8b\x1e\x05\x37\xde\x97\xad\x0c\xd0\x06\x12\x1c\xc4\xbc\xcc\x77\x05\x65\x1b\x7a\x12\x70\x24\xcf\x4f\x2b\x40\xe6\xe9\x04\xae\xf4\x84\x44\xb2\x99\xa1\xaf\xf9\x87\x60\x7f\x67\xb4\x3a\x37\x0c\xfb\x3d\x63\x84\x78\xf2\x66\x87\xb1\xf7\xb2\xbc\x5e\x71\xe7\x3c\x37\x74\x44\x30\xef\x6f\xaf\x11\xa6\x70\x0e\xce\xca\x1a\xc2\xe1\xc3\x58\x76\x67\x64\xb3\x1d\xb0\x2d\x53\x82\x6f\x76\x24\x1d\x14\xf7\xa7\x02\x0c\x8c\x63\xa5\x95\xeb\xf2\xf7\xbb\x1a\xc8\x79\x48\x5a\x29\x46\xe9\x99\xe0\x71\x95\x09\x5f\xcd\x27\x6e\x99\x4b\x64\xae\xb4\x1a\xf5\x24\xc9\x73\x2c\x9a\xec\x34\xbb\xf0\x13\x37\x5d\x87\xad\xa0\x2d\x6f\xc0\xaa\x79\xb7\x87\x7a\x59\xf3\x52\xd6\xd4\xd5\x12\xfe\x17\x93\xf3\x3a\xa5\x4b\x95\x7f\x01\x00\x00\xff\xff\xab\x74\xf7\x3d\xaa\x01\x00\x00")

func golangDeleteWorldTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteWorldTmpl,
		"golang.delete-world.tmpl",
	)
}

func golangDeleteWorldTmpl() (*asset, error) {
	bytes, err := golangDeleteWorldTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete-world.tmpl", size: 426, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x92\x4f\x8b\xdb\x30\x10\xc5\xcf\xd6\xa7\x98\x0d\x39\xd8\xe0\x15\x3d\x2f\xb8\x10\xe8\x1e\x7a\xd9\xc3\xe6\x58\x8a\x90\xad\x51\xaa\xee\x58\xca\x8e\xe5\x34\x45\xf8\xbb\x17\x29\x6e\xc8\x42\xff\xc0\x1e\x02\xf1\xcc\x9b\xf7\x66\x7e\x28\xa5\x7b\x30\x68\x9d\x47\xd8\x4c\xee\xe0\x75\x9c\x19\x37\x70\xbf\x2c\xe2\x13\x12\x46\x54\x29\x81\xdc\xcf\xd6\xba\x33\x2c\x4b\x9d\x12\x0c\xf1\x7c\xd4\xac\x47\x90\x3b\xa2\x1d\x1f\x26\x58\x96\x06\x6a\x51\x99\x32\x60\xa0\x0f\x81\x5a\x40\xe6\xfc\x0b\xdc\x88\x1c\x82\xde\x14\x57\x71\x9b\xe8\xfc\x29\xbc\xfc\x3f\x4e\xf3\xe1\x4d\xd8\xdf\x0d\xfb\x60\x7e\x5e\xec\xaa\x94\x00\xc7\x1e\xcd\x91\xf4\x80\xdf\x02\x19\xe4\x09\xe4\x67\x6f\x03\xdc\xb6\xa7\x57\x5a\xab\x1b\xa5\x4a\x45\x4d\x71\x8c\x9b\x2c\x12\xd5\x49\x33\x28\x75\xd2\x34\xe3\x04\x5f\xbe\x3a\x1f\x91\xad\x1e\x30\x2d\xa2\xba\xd6\x3b\xd0\xc7\x23\x7a\x53\xff\xae\xb4\x90\x12\x58\x87\x64\xca\x37\xc8\x7d\xd4\xd1\x0d\xd7\xf5\x4b\x3a\x6b\x7f\x40\xd8\xba\x16\xb6\xf9\xbe\x87\x0e\xe4\xd3\x4c\xa4\x7b\xc2\x55\x28\x2a\x67\xe1\x2e\xa5\x22\x90\x4f\x7a\x44\x58\x16\xe9\x26\x3f\x13\xd5\x0d\x24\x51\x55\x4a\x0d\xc1\x9b\x0c\x6d\xeb\x72\x33\x3b\x40\x07\x56\xd3\x84\xa5\xfd\xcf\x15\xdf\xf8\x96\x7a\xdd\x34\xa2\x5a\xe9\x78\x73\xcb\x20\x43\x81\x2e\xff\x79\xa5\x7e\xf6\x86\x50\x3d\xa3\x37\xc8\x75\xe8\xbf\x4b\xe3\x34\xe1\x10\x5b\xb8\x65\xd8\x88\x2a\xf7\x28\x1c\xf6\x71\x8c\xf5\xc5\xa3\xbd\xf2\x94\x52\x66\x14\x4a\x71\x5e\x27\x3f\x97\x87\x0e\x8a\x19\xbb\x13\xb2\x7c\x3c\xe3\xf0\xe7\xa1\xcc\x25\xeb\xef\x3a\xf0\x8e\x0a\x08\xc6\x38\xb3\xbf\x1c\xde\x16\x97\x51\xbf\xe0\x23\x73\x8d\xcc\xe5\x26\x51\x60\xcd\x3e\x5e\xb3\x4a\xb2\x7c\x0e\x3f\xa6\x9d\xb5\x38\x44\x34\xf5\xbb\xbd\x57\xcd\x1a\x01\x1f\xe1\x43\x9b\xe7\xc5\x0a\x32\xbf\xc8\x5f\x01\x00\x00\xff\xff\x94\xcf\x73\x61\x6b\x03\x00\x00")

func golangDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDeleteTmpl,
		"golang.delete.tmpl",
	)
}

func golangDeleteTmpl() (*asset, error) {
	bytes, err := golangDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.delete.tmpl", size: 875, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectPostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\x4b\x6e\x84\x30\x10\x44\xd7\xf6\x29\x4a\x5e\x41\x04\x1e\x29\xd9\x25\x62\x85\x72\x81\xdc\x80\x4f\x33\x69\x05\x6c\xa6\x6d\xb2\xb1\x7c\xf7\x08\xe7\x2f\x79\x55\x55\xef\x59\xea\x94\x5a\xcc\xb4\xb0\x23\x18\xde\x76\x2f\xd1\x20\x67\xad\xcc\x95\xe3\xeb\x31\xda\xc9\x6f\x97\x95\xc7\xcb\x7e\x33\x3a\x25\x90\x9b\xd1\xe6\xac\xf5\x3f\x2e\xb4\x93\x77\x21\xca\xc0\x2e\xb6\x24\xe2\xa5\x48\x96\xc3\x4d\xa8\x78\xdb\x57\xa4\x04\xfb\x42\x13\xf1\x3b\x09\x72\xae\xc1\xa1\xff\x41\x9e\x4f\xa2\x22\x11\x14\xb6\x46\xa5\xd5\xaf\x10\x21\x0a\xbb\x6b\x03\xff\x86\xd1\xfb\xb5\x46\xd2\x8a\x17\x50\x49\x1e\xbb\x13\xb2\xd5\xdd\x7e\xb3\xc5\x53\x3f\x9d\x71\xd2\x4a\x95\x91\xed\xfd\x4c\xb6\x5f\x87\x10\xaa\x1a\x5d\x07\x73\xff\x60\x3e\x6b\x25\x14\x0f\x71\x65\xf3\xfd\x59\x83\x28\x07\x9d\x6d\xd6\xe7\xfb\x9a\x18\xd3\x60\x19\xd6\x40\x3a\xff\xbd\xc2\x47\x00\x00\x00\xff\xff\x28\x4c\xe9\xcf\x3d\x01\x00\x00")

func golangDialectPostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectPostgresTmpl,
		"golang.dialect-postgres.tmpl",
	)
}

func golangDialectPostgresTmpl() (*asset, error) {
	bytes, err := golangDialectPostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-postgres.tmpl", size: 317, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangDialectSqlite3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x91\x41\x4b\xc4\x30\x10\x85\xcf\xc9\xaf\x18\x73\x6a\x61\xdb\x45\xbc\xad\xf4\xb4\x78\x10\x3c\xa9\x37\xf1\xd0\x6d\xa7\x75\xb0\x49\xd6\x49\x2a\x42\xc8\x7f\x97\xa4\xeb\xb6\x42\x4f\xf3\xde\xf7\xf5\x41\x42\xa8\xa0\xc7\x81\x0c\x82\x22\x7d\xb6\xec\x15\xc4\x28\x85\x1a\xc9\x7f\xcc\xa7\xba\xb3\x7a\xaf\x5b\xef\xcd\x7e\xb4\x95\xfb\x9a\xc8\xe3\x9d\x92\x21\x00\x9a\x1e\xaa\x18\xa5\xfc\x67\x70\x55\x67\x8d\xf3\xdc\x92\xf1\x15\x32\x5b\xce\xba\x61\x36\x1d\x14\xa4\xcf\x13\x84\x00\xf5\x33\x76\x48\xdf\xc8\x10\x63\x09\xe4\x8e\x57\xe4\x21\x11\x05\x32\x43\x66\x4b\x28\xa4\x58\x85\xe0\x3c\x93\x19\x77\x60\x3f\xe1\x64\xed\x54\x42\x90\x82\x06\xc0\x7c\x39\x34\x09\xaa\x8b\xcb\xc8\x3a\xbb\xca\xfb\x14\x05\x29\x44\x2e\xd6\x47\xdb\x23\x34\x0d\x6c\x4a\xeb\xdf\x97\x9e\xd0\x6e\xfc\x93\x2d\x7b\xca\x7c\xee\xec\x64\x4d\x0a\x96\x15\xae\x7e\x6a\x9d\x7f\x34\x3d\xfe\x14\xda\x8d\x3b\x50\x07\xb5\x14\x69\x80\xa5\x7b\xd3\x40\x75\x7b\x91\x0a\x46\x3f\xb3\xb9\xc2\xaf\x4c\xfa\xe5\xdc\x76\x98\xe0\xb7\xdc\x3f\xbc\x97\x3b\xf0\x3c\x63\x06\xa2\xdc\x50\x4a\xad\x49\x94\xe9\xdb\x04\x43\x3b\x39\x94\x71\xfb\x28\xbf\x01\x00\x00\xff\xff\xf2\xcb\x38\xa5\xd6\x01\x00\x00")

func golangDialectSqlite3TmplBytes() ([]byte, error) {
	return bindataRead(
		_golangDialectSqlite3Tmpl,
		"golang.dialect-sqlite3.tmpl",
	)
}

func golangDialectSqlite3Tmpl() (*asset, error) {
	bytes, err := golangDialectSqlite3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.dialect-sqlite3.tmpl", size: 470, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x93\xcf\x8e\xd3\x30\x10\xc6\xcf\x9e\xa7\x18\x6e\x49\xb5\xf8\x84\xb8\xa0\x1e\xd8\x5d\x0e\x1c\x10\x52\x9b\x17\x48\x93\x69\xd7\xaa\xeb\x04\x77\xb2\x0c\xb2\xf2\xee\xc8\xf9\x5f\x9a\x05\x21\xb5\x8a\x3d\xf2\x7c\xdf\xcf\xfe\xec\x10\xd0\x1c\x51\xef\x9b\xba\xae\x3c\xef\x04\xdb\x16\xf8\x57\x4d\xb8\x13\xbc\xb2\x6f\x0a\xc6\x00\xaa\x3c\xe0\xe6\xf9\x11\x14\x0b\x6e\x32\x81\x16\xe0\xd8\xb8\x02\x13\x2f\xb8\xd9\x49\x8a\x27\xe2\x4c\x92\x82\x05\x8b\xca\x31\x09\xeb\xa7\xfe\x9b\x62\xd2\xf7\x3c\x20\x79\x1f\xff\x95\x4f\xa3\xa2\x39\xa2\x17\xcd\x82\xdb\x2d\x3a\x63\x63\x69\xaa\xf5\x6b\xb7\x71\x52\x1e\xf4\xf7\x9a\x5c\x94\x4e\x3f\x75\xe5\x77\xf3\x7a\xe5\x89\x1b\xef\xe2\xbc\x6b\x01\xa5\x5a\x88\xbf\xa1\x3e\x88\x39\x63\xef\x89\x9f\xaa\xcb\xc5\x70\x92\x62\xf2\x06\xd7\xc2\x67\xa2\x61\xd1\x63\x1f\x28\x35\xf0\x77\xfa\x0b\xd7\x08\x72\x67\xb7\xab\xac\x3d\xe4\xc5\xf9\xff\x0d\xe7\xce\x7f\x59\x86\x80\x3e\x77\x27\x42\xfd\x8d\xf8\xa5\x2a\xaf\x31\xcb\x5b\x8c\x10\x50\xef\xcd\xc9\xe5\xdc\x78\xc2\xb6\x8d\x6e\xaf\xb9\xc7\x21\xd7\x08\x73\x73\xfc\x53\xae\xf7\x87\x3f\x58\x2f\x31\x58\x74\x34\xf8\xea\x5e\xab\x73\x54\xef\x99\xc8\x95\x71\x3c\x8f\xfa\xfb\x35\x32\x1a\xc7\xe4\x8f\x79\x41\x18\x20\x84\xf7\x2b\x5b\x50\x7f\x52\x2f\xb4\x46\xb5\x4c\xd6\xf4\xd4\x50\x04\x50\x53\xde\xdd\xc9\x83\x5a\x04\xd2\x57\x46\x25\x5e\x57\x9a\x0c\x00\x54\x49\x96\x98\x3e\x5b\xfb\xc6\x8d\x37\x8e\x3f\x7e\x78\x18\x32\x06\x75\xc9\xcf\xf4\xc5\xfb\x65\xee\xb7\x96\xcf\x8f\xab\x96\xfb\xe2\x85\x2e\x79\x92\xc6\x77\x68\xdc\x69\xde\xcd\xd8\x57\x1e\x56\xfb\x26\x39\x00\xf5\xd3\xe7\x75\x26\xdd\x1b\xbc\xfe\xb0\x3a\x93\x74\xde\xe0\x5f\xc9\x7e\x07\x00\x00\xff\xff\x0d\x56\x59\xce\x18\x04\x00\x00")

func golangFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangFooterTmpl,
		"golang.footer.tmpl",
	)
}

func golangFooterTmpl() (*asset, error) {
	bytes, err := golangFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.footer.tmpl", size: 1048, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\x41\x6b\xdc\x3c\x10\x3d\x4b\xbf\x62\xb2\xe4\x60\xc3\x46\x3f\x20\x1f\x3e\x84\x8f\x1e\x7a\x09\x34\x7b\x2c\xc5\x68\xad\xd1\x56\xcd\xac\xb4\x91\xe5\x4d\x82\xd0\x7f\x2f\x23\x3b\x26\x0b\x69\x43\x0f\x06\x6b\x66\xf4\xde\x9b\xa7\x99\x9c\x6f\xc0\xa0\x75\x1e\x61\x33\xba\x83\xd7\x69\x8a\xb8\x81\x9b\x52\xe4\x1d\x51\x9f\x33\xa8\xdd\x64\xad\x7b\x81\x52\x9a\x9c\x61\x48\x2f\x27\x1d\xf5\x11\xd4\x1d\xd1\x5d\x3c\x8c\x50\x4a\x0b\x8d\x14\x31\x3c\x8f\x90\x33\x8c\xe4\x06\x0c\x16\xd4\x43\x78\x86\x52\xb6\x80\x31\xf2\x17\x62\x2b\x99\x0c\xbd\xa9\xe8\xf2\x3d\xb3\xf3\xe7\xf0\xf8\x09\xad\x8e\x87\x0b\xd2\x3f\xa3\xed\x83\x79\xdd\x40\x29\x52\xe4\x0c\x78\xdc\xa3\x39\x91\x1e\xf0\x67\x20\x83\x71\x04\xf5\xd5\xdb\x70\x91\x1e\x9f\x68\x89\x6e\xfa\xbe\x46\xfa\x31\x1d\x53\xc5\x90\xe2\xac\x23\xf4\xfd\x59\xd3\x84\x23\x7c\xff\xe1\x7c\xc2\x68\xf5\x80\xb9\x48\xb1\xc6\x3b\xd0\xa7\x13\x7a\xd3\xbc\x45\xb6\x6c\x86\x75\x48\xa6\x9e\x41\xed\x92\x4e\x6e\x58\xd5\x57\xf6\xa8\xfd\x01\xe1\xda\x6d\xe1\x9a\xdb\xbb\xed\x40\xdd\x4f\x44\x7a\x4f\xb8\x14\x4a\xe1\x2c\x5c\xe5\x5c\x0b\xd4\xbd\x3e\x22\x94\xa2\xdc\xe8\x27\xa2\xa6\x85\x2c\x85\xe8\xfb\x21\x78\xc3\x9e\x5d\x3b\x4e\x32\x02\x74\x60\x35\x8d\x58\xd3\x7f\x95\x78\x81\x5b\xe3\x4d\xdb\x4a\xb1\xb8\xe3\xcd\x7b\x0f\xd8\x14\xe8\xf8\xe7\x89\xf6\x93\x37\x84\xfd\x03\x7a\x83\xb1\x09\xfb\x5f\xca\x38\x4d\x38\xa4\x2d\xbc\xf7\xb0\x95\x82\x73\x14\x0e\xbb\x74\x4c\xcd\x8c\xb1\x5d\xfd\x54\x4a\xb1\x15\x7d\xcf\xe3\x33\xcf\xca\x6d\x07\x15\x2d\xba\x33\x46\xf5\x6d\xc2\xf8\xfa\xf1\x35\x76\x86\x2f\x5c\x75\xe0\x1d\x55\x2b\x22\xa6\x29\x7a\x3e\x6e\x2b\xc8\x51\x3f\xe2\x97\x18\x1b\x8c\x71\xee\xc9\xa0\x45\xee\x84\xe9\xd4\xff\x14\x46\x6c\x98\xdf\x86\x35\x78\x8f\x2f\x69\x31\x36\x67\x70\xde\x25\x8f\xcf\x6f\xd3\x2c\x85\x60\xc6\xee\xad\x78\x37\x68\xcf\xe3\xa9\x8d\x89\xc1\x42\x63\x49\xa7\x84\xbe\x96\xb7\xf5\x99\xc5\x07\x2a\x3f\x91\xc9\x3a\xe7\x75\x5a\x5f\x6c\x76\x87\x89\x78\x09\x66\x2d\x73\x43\x0b\xfa\xed\x2a\x89\x71\xda\xff\xfe\xd9\x98\xa5\x60\x26\xf2\x8e\xe4\xf2\xfa\xbc\x5c\xbf\x03\x00\x00\xff\xff\x8d\x17\xe9\xb7\x24\x04\x00\x00")

func golangGetAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetAllTmpl,
		"golang.get-all.tmpl",
	)
}

func golangGetAllTmpl() (*asset, error) {
	bytes, err := golangGetAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-all.tmpl", size: 1060, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetCountTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\x4d\x6b\xdc\x30\x10\x3d\x5b\xbf\x62\xb2\x2c\xc5\x06\x47\xf4\x50\x7a\x28\xf8\x10\x4a\x0f\xbd\x04\x9a\x3d\x96\x62\xb4\xd6\xd8\x55\x33\x1e\x6d\xc6\xf2\x36\x41\xe8\xbf\x17\xa9\x9b\x65\x17\xfa\x71\x30\x58\xef\xcd\xbc\x37\xf3\x98\x18\x6f\xc1\xe2\xe8\x18\x61\xb3\xb8\x89\x4d\x58\x05\x37\x70\x9b\x92\xfa\xe8\x57\x0e\x7d\x8c\xa0\x77\xeb\x38\xba\x67\x48\xa9\x8e\x11\x86\xf0\x7c\x30\x62\x66\xd0\x77\x44\x77\x32\x2d\x90\x52\x03\xb5\xaa\x86\x5c\x0f\x8e\xc3\xfb\x77\x2d\xa0\x48\xfe\xbc\x34\x2a\x5b\x20\xdb\xa2\xa9\x2e\xfd\x1c\x1f\xfd\xe3\x7f\xcd\x8c\x4c\x57\x56\x7f\xd7\xdb\x7b\xfb\xb2\x81\x94\x54\x15\x23\xe0\xbc\x47\x7b\x20\x33\xe0\x77\x4f\x16\x65\x01\xfd\x99\x47\x7f\x45\x2f\x4f\x74\x42\x37\x7d\x5f\x90\x7e\x09\x73\x28\x1a\xaa\x3a\x1a\x81\xbe\x3f\x1a\x5a\x71\x81\xaf\xdf\x1c\x07\x94\xd1\x0c\x18\x93\xaa\xce\x78\x07\xe6\x70\x40\xb6\xf5\x2b\xd2\x42\x8c\x30\x3a\x24\x5b\xde\xa0\x77\xc1\x04\x37\x9c\xa7\x2f\xee\x62\x78\x42\xd8\xba\x16\xb6\x79\xbd\x0f\x1d\xe8\xfb\x95\xc8\xec\x09\x4f\x85\xaa\x72\x23\xdc\xc4\x58\x0a\xf4\xbd\x99\x11\x52\xd2\x6e\xe1\x95\xa8\x6e\x20\xaa\xaa\xea\xfb\xc1\xb3\xcd\x99\x6d\x5d\x26\xb3\x02\x74\x30\x1a\x5a\xb0\xd0\xff\x1c\xf1\x4a\xb7\xe0\x75\xd3\xa8\xea\x94\x0e\xdb\xcb\x0c\x72\x28\xd0\xe5\x9f\x27\xda\xaf\x6c\x09\xfb\x07\x64\x8b\x52\xfb\xfd\x0f\x6d\x9d\x21\x1c\x42\x0b\x97\x19\x36\xaa\xca\x1c\xf9\x69\x17\xe6\x50\xff\xd6\x68\xcf\x79\x6a\xad\x73\x14\xf9\x4a\x3a\x28\x22\xe2\x8e\x28\xfa\xcb\x8a\xf2\xf2\xe0\x7f\xfe\xb1\x41\xef\x06\xc3\xf5\x9b\x72\x67\x4d\x09\x28\xf7\xdf\x74\xc0\x8e\x4a\x22\x82\x61\x15\x86\xb7\x6d\x91\x9c\xcd\x23\x7e\x12\xa9\x51\xa4\x2c\xa6\x5e\xf9\x22\xd0\xe6\x2e\x75\xda\x35\x9f\xd2\xaf\x00\x00\x00\xff\xff\x6b\x43\x21\x7d\x0a\x03\x00\x00")

func golangGetCountTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetCountTmpl,
		"golang.get-count.tmpl",
	)
}

func golangGetCountTmpl() (*asset, error) {
	bytes, err := golangGetCountTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-count.tmpl", size: 778, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetFirstTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\x51\x6b\xdb\x30\x10\xc7\x9f\xad\x4f\x71\x0d\x7d\xb0\xc1\xd5\x07\xe8\xf0\x43\x19\x1b\xec\xa5\xb0\xe6\x71\x0c\xa3\x58\xe7\x4c\xab\x2c\xa5\x27\x39\x4d\x11\xfa\xee\xe3\x14\x27\x24\x63\x5b\x61\x0f\x81\xe8\xee\xf4\xff\x9f\x7e\xbe\x4b\xe9\x0e\x34\x8e\xc6\x21\xac\x82\xd9\x3a\x15\x67\xc2\x15\xdc\xe5\x2c\x3e\x1b\x0a\xb1\x4f\x09\xe4\x7a\x1e\x47\x73\x80\x9c\xeb\x94\x60\x88\x87\x9d\x22\x35\x81\x7c\xb0\xf6\x81\xb6\x01\x72\x6e\xa0\x16\x55\x4a\xb0\x24\x9e\xfc\x2b\xe4\xdc\x02\x12\xf1\xcf\x53\x23\xd8\x07\x9d\x2e\xc2\xe2\xd2\xd4\xb8\xbd\x7f\x7e\xd7\x51\xd1\xf6\xca\xef\xef\x7a\x1b\xaf\xdf\x56\x90\x73\xe9\x07\xa7\x0d\xea\x9d\x55\x03\xfe\xf0\x56\x23\x05\x90\x5f\xdc\xe8\xaf\xd2\xe1\xc5\x2e\xd1\x55\xdf\x97\x48\x1f\xe2\x14\x8b\x86\xa8\xf6\x8a\xa0\xef\xf7\xca\xce\x18\xe0\xdb\x77\xe3\x22\xd2\xa8\x06\x4c\x59\x54\xe7\x78\x07\x6a\xb7\x43\xa7\xeb\x53\xa4\x85\x94\x60\x34\x68\x75\x39\x83\x5c\x47\x15\xcd\x70\xee\xbe\xb8\x93\x72\x5b\x84\x5b\xd3\xc2\x2d\x3f\xef\xbe\x03\xf9\x38\x5b\xab\x36\x16\x97\x42\x51\x99\x11\x6e\x52\x2a\x05\xf2\x51\x4d\x08\x39\x4b\x13\xdc\x6c\x6d\xdd\x40\x12\x55\xd5\xf7\x83\x77\x9a\x99\xdd\x1a\x4e\xb2\x02\x74\x30\x2a\x1b\xb0\xa4\xff\xd9\xe2\x95\x6e\x89\xd7\x4d\x23\xaa\x85\x8e\xd3\x97\x0c\x18\x0a\x74\xfc\xe7\xc5\x6e\x66\xa7\x2d\xf6\x4f\xe8\x34\x52\xed\x37\x3f\xa5\x36\xca\xe2\x10\x5b\xb8\x64\xd8\x88\x8a\x73\xd6\x6f\xd7\x71\x8a\xf5\x51\xa3\x3d\xf3\x94\x52\x32\x8a\xbe\x27\xff\x1a\x8e\xd3\x72\xdf\x41\x51\x23\xb3\x47\x92\x5f\x67\xa4\xb7\x3f\x5f\x63\x32\x7c\xe1\xa6\x03\x67\x6c\x41\x41\x18\x67\x72\x7c\x6c\x8b\xc8\xa4\x9e\xf1\x13\x51\x8d\x44\xc7\x37\x69\x1c\x91\x5f\xc2\x76\xf2\xa3\xf5\x01\x6b\xf6\x67\xc6\x4b\xf0\x11\x0f\x71\x01\xbb\xe8\xdf\x77\xa7\x0b\x2c\xd5\x7c\xf8\xdd\xf4\x1d\x57\xb6\xbd\x2a\x71\xc6\x72\x2f\x05\xb0\x71\x26\x9e\x96\x45\x54\x2c\x7c\x36\x5b\x0f\xca\xf1\xe8\x2b\xad\xc9\x8f\x50\x8f\x56\xc5\x88\xae\x54\x37\x65\x84\xfe\x03\x80\x38\x55\xb0\x30\x2f\xd4\x69\x4f\xb9\xa9\xe5\x83\xf3\x3e\xfd\x0a\x00\x00\xff\xff\x82\xd1\x12\x31\x14\x04\x00\x00")

func golangGetFirstTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetFirstTmpl,
		"golang.get-first.tmpl",
	)
}

func golangGetFirstTmpl() (*asset, error) {
	bytes, err := golangGetFirstTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-first.tmpl", size: 1044, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetHasTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xcd\x6a\xdc\x30\x10\x80\xcf\xd6\x53\x4c\x96\x50\x6c\x70\xf4\x00\x05\x1f\x72\x28\xb4\x97\x40\xb3\xc7\x52\xcc\xd8\x1a\x7b\xd5\xc8\xd2\x66\x24\x6f\x13\x84\xde\xbd\x48\xeb\x2e\xbb\xd0\x9f\x83\xc1\x9a\x9f\x6f\x34\x1f\x8a\xf1\x01\x14\x4d\xda\x12\xec\xbc\x9e\x2d\x86\x95\x69\x07\x0f\x29\x89\xcf\xe8\xfb\x18\x41\xee\xd7\x69\xd2\x6f\x90\x52\x1d\x23\x8c\xe1\xed\x88\x8c\x0b\xc8\x47\x63\x1e\x79\xf6\x90\x52\x03\xb5\xa8\x0e\xe8\x61\x70\xce\xb4\x40\xcc\xf9\x73\xdc\x88\x4c\x27\xab\x0a\x4e\x5c\x8f\xd2\xf6\xe4\x5e\xfe\x33\x07\x79\xbe\x99\xf2\x77\xda\xe0\xd4\xfb\x0e\x52\x12\x55\x8c\x40\xcb\x40\xea\x68\x70\xa4\x83\x33\x8a\xd8\x83\xfc\x62\x27\x77\x93\xf6\xaf\x66\x8b\xee\xfa\xbe\x44\x7a\x1f\x96\x50\x18\xa2\x3a\x21\x43\xdf\x9f\xd0\xac\xe4\xe1\xdb\x77\x6d\x03\xf1\x84\x23\xc5\x24\xaa\x4b\xbc\x03\x3c\x1e\xc9\xaa\xfa\x77\xa4\x85\x18\x61\xd2\x64\x54\x39\x83\xdc\x07\x0c\x7a\xbc\xdc\xbe\x4c\x67\xb4\x33\xc1\xbd\x6e\xe1\x3e\xaf\xf7\xb1\x03\xf9\xb4\x1a\x83\x83\xa1\xad\x50\x54\x7a\x82\xbb\x18\x4b\x81\x7c\xc2\x85\x20\x25\xa9\xbd\x5d\x8d\xa9\x1b\x88\xa2\xaa\xfa\x7e\x74\x56\x65\x67\xf7\x3a\x27\x33\x01\x3a\x98\xd0\x78\x2a\xe9\x7f\x5e\xf1\x86\x5b\xe2\x75\xd3\x88\x6a\xb3\x63\xd5\xb5\x83\x2c\x05\xba\xfc\xf3\x6a\x86\xd5\x2a\x43\xfd\x33\x59\x45\x5c\xbb\xe1\x87\x54\x1a\x0d\x8d\xa1\x85\x6b\x87\x8d\xa8\x72\xce\xb8\x79\x1f\x96\x50\x9f\x19\xed\xc5\xa7\x94\x32\xab\xc8\x6f\xa4\x83\x02\x61\x7d\x22\x96\x5f\x57\xe2\xf7\x67\xf7\xf3\x8f\x0d\x72\x3f\xa2\xad\x3f\x1c\xd0\x37\x45\x4f\xee\xbe\xeb\xc0\x6a\x53\x7c\x30\x85\x95\xed\x79\xff\xb6\x40\x17\x7c\xa1\x4f\xcc\x35\x31\x9f\x57\xdb\x4a\x0e\xe8\xdb\xdc\x26\xb6\x55\xf3\x4b\xfa\x15\x00\x00\xff\xff\x00\x39\xc5\xaf\x02\x03\x00\x00")

func golangGetHasTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetHasTmpl,
		"golang.get-has.tmpl",
	)
}

func golangGetHasTmpl() (*asset, error) {
	bytes, err := golangGetHasTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-has.tmpl", size: 770, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLastTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\x41\x6f\xa3\x30\x10\x85\xcf\xf6\xaf\x98\xe5\x04\x12\xe1\xb4\xda\x5b\x4e\xab\x1e\x2a\xf5\xd2\xa4\x77\x64\xf0\x40\xdd\x18\x9b\x0c\x43\x9a\xd4\xf2\x7f\xaf\x0c\x89\x44\x0e\x96\xad\x99\x79\xef\xf3\xbc\x10\x76\xa0\xb1\x33\x0e\x21\x9b\x4c\xef\x14\xcf\x84\x19\xec\x62\x94\x3d\xf2\x9b\x9a\x38\x04\xa8\x0e\xc8\x33\xb9\xea\xe3\x36\x22\xc4\x98\xb7\x7c\x85\xd6\x3b\xc6\x2b\x57\xff\xd7\xbb\x94\x62\x3c\x81\x71\xfc\xef\x6f\x01\xb9\x14\x21\xc0\xa8\x48\x0d\x0f\x2d\xc4\x58\x02\x12\xa5\xe3\xa9\x90\x89\x8b\x4e\x2f\x20\xb9\xfd\x44\xe3\xf5\x6d\xe5\x27\x0f\x1c\x1a\xd4\xa3\x55\x2d\x7e\x7a\xab\x91\x26\xa8\x5e\x5d\xe7\x61\xdb\x9e\xce\xf6\x5e\xcd\xea\x7a\xa9\xd4\x13\x0f\x9c\xa5\x21\x29\x2e\x8a\xa0\x5e\x0a\xb0\x4f\x8f\xb3\x6d\x66\xa7\x2d\xd6\x07\x74\x1a\x29\xf7\xcd\x57\xa5\x8d\xb2\xd8\x72\x09\x5b\x7d\x21\x45\xea\x59\xdf\x1f\x79\xe0\x7c\xf5\x28\x61\x3c\x15\x72\x61\x1b\x67\x78\xb3\x9d\x14\x69\xbb\x3d\x2c\x7e\x64\x2e\x48\xd5\xfb\x8c\x74\x3b\xf8\xef\xad\xb6\x3a\xb6\xca\xe5\x21\x80\xd2\x9a\x7c\x07\x79\x67\x15\x33\xba\x87\x53\x01\x31\x16\x52\x98\x6e\x09\xeb\xcf\x1e\x9c\xb1\x10\xa4\x10\xb4\x82\x42\x80\x1f\x24\xff\x14\x6b\x42\x0e\xea\x84\x2f\x44\x39\x12\x15\x52\x44\xb9\x99\x57\xd4\x3f\x8d\x3b\x63\x65\xca\xee\x9e\xfe\x6f\x00\x00\x00\xff\xff\x3a\xb2\xd4\xf6\x02\x02\x00\x00")

func golangGetLastTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLastTmpl,
		"golang.get-last.tmpl",
	)
}

func golangGetLastTmpl() (*asset, error) {
	bytes, err := golangGetLastTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-last.tmpl", size: 514, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetLimitoffsetTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\xc1\x6a\xdc\x30\x10\x3d\x4b\x5f\x31\x59\x72\xb0\xc1\xd1\xa9\xf4\x90\xe2\x43\x28\x3d\x14\x4a\xa0\xd9\x63\x29\x46\x6b\x8d\xb6\x6a\x64\x69\x23\xc9\x9b\x0d\xc2\xff\x5e\x46\xf6\x2e\xbb\x21\xa4\xed\xc1\x60\xcd\x8c\xde\x7b\xf3\x34\x93\xf3\x0d\x28\xd4\xc6\x21\xac\xa2\xd9\x3a\x99\xc6\x80\x2b\xb8\x99\x26\xfe\xcd\x0c\x26\xa1\xea\x72\x06\xb1\x1e\xb5\x36\x07\x98\xa6\x2a\x67\xe8\xd3\x61\x27\x83\x1c\x40\xdc\x59\x7b\x17\xb6\x11\xa6\xa9\xe1\xcc\x52\x3d\x18\x97\x1a\xf0\x5a\x47\x2c\xff\x1f\x3f\xd4\x50\x71\x16\xfc\x73\x84\x9c\x21\x5a\xd3\xa3\xd7\x20\x1e\xfc\x33\xdd\x02\x0c\x81\x3e\x1f\x6a\x4e\x52\xd0\xa9\xc2\xcd\xf9\xb9\x30\xe3\xf6\xfe\xf1\x1f\x54\xc9\xb0\xbd\xd0\x04\x45\xd2\x51\xce\x2b\x86\x73\x82\x8d\x57\x2f\x2b\x98\x26\xce\x72\x06\x1c\x36\xa8\x76\x56\xf6\xf8\xcb\x5b\x85\x21\x82\xf8\xea\xb4\xbf\x48\xc7\x27\xbb\x44\x57\x5d\x57\x22\x5d\x4c\x43\x2a\x18\x9c\xed\x65\x80\xae\xdb\x4b\x3b\x62\x84\x1f\x3f\x8d\x4b\x18\xb4\xec\x31\x4f\x9c\x9d\xe2\x2d\xc8\xdd\x0e\x9d\xaa\x8e\x91\x86\x0c\xd2\x06\xad\x2a\x67\x10\xeb\x24\x93\xe9\x97\x66\x6a\x5e\xd8\x83\x74\x5b\x84\x6b\xd3\xc0\x35\x75\x7b\xdb\x82\xb8\x1f\xad\x95\x1b\x8b\x4b\x21\x67\x46\xc3\x55\xce\xa5\x40\xdc\xcb\x01\x61\x9a\x84\x89\x6e\xb4\xb6\xaa\x21\x73\xc6\xba\xae\xf7\xae\x58\x78\x6d\x28\x49\x08\xd0\x82\x96\x36\x62\x49\xbf\x2b\xf1\x02\xb7\xc4\xab\xba\xe6\x6c\x71\xc7\xa9\xd9\x83\xf7\x40\x5e\x3d\xcb\xd1\x30\x72\x10\x5a\xfa\x79\xb2\x9b\xd1\x29\x8b\xdd\x03\x3a\x85\xa1\xf2\x9b\xdf\x42\x19\x69\xb1\x4f\x0d\x9c\x1b\x5e\x73\x46\x39\xeb\xb7\xeb\x34\xa4\x6a\xc6\x68\x4e\xe6\x0b\x21\xea\xa2\x85\xe6\x6f\x1e\xb6\xdb\x16\x0a\x5a\x30\x7b\x0c\xe2\xfb\x88\xe1\xe5\xed\x6b\x64\x23\x5d\xb8\x6a\xc1\x19\x5b\x7c\x0b\x98\xc6\xe0\xe8\xd8\x14\x90\x41\x3e\xe2\x97\x10\x2a\x0c\x61\x36\x40\xa1\x46\xea\x84\xe8\xc4\x67\xeb\x23\x56\xc4\xaf\xfd\x29\x78\x8f\x87\xb4\xbc\x42\xce\x60\x9c\x49\x0e\x9f\x8f\xeb\xc0\x19\x23\xc6\xf6\x58\xbc\xee\xa5\xa3\xd1\x96\x4a\x05\xaf\xa1\xd2\x56\xa6\x84\xae\x94\xd7\x65\x26\xd8\x1b\x2a\xff\x22\x93\x74\xce\xfb\x78\x7a\x99\xd9\x1d\x22\xa2\x05\x9a\xb5\xcc\x0d\x2d\xe8\xb7\x27\x49\x84\x53\x7f\xfa\x6f\x63\x96\x82\x99\xc8\x19\xcb\x97\x51\xa1\x4d\xfc\x13\x00\x00\xff\xff\xed\x93\x86\x3b\x83\x04\x00\x00")

func golangGetLimitoffsetTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetLimitoffsetTmpl,
		"golang.get-limitoffset.tmpl",
	)
}

func golangGetLimitoffsetTmpl() (*asset, error) {
	bytes, err := golangGetLimitoffsetTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-limitoffset.tmpl", size: 1155, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x94\xdd\x6a\x1b\x3d\x10\x86\x8f\x77\xaf\x62\x62\xf2\xc1\x2e\x38\xba\x80\x7c\xec\x41\x28\xa5\xf4\xa0\x86\xc6\x87\xa5\x2c\xf2\x6a\xe4\xaa\xd1\x4a\xf6\x48\xeb\x24\x08\xdd\x7b\x19\x65\xed\xda\xfd\x4b\xe9\x41\x20\x3b\x3f\xef\x3b\xf3\xa0\x71\x4a\x37\xa0\x50\x1b\x87\xb0\x08\x66\xeb\x64\x9c\x08\x17\x70\x93\x73\xfd\x0e\x63\x9f\x12\x88\xf5\xa4\xb5\x79\x82\x9c\x9b\x94\x60\x88\x4f\x3b\x49\x72\x04\x71\x67\xed\x1d\x6d\x03\xe4\xdc\x42\x53\x57\x29\xc1\x9c\xb8\xf7\x8f\x90\xf3\x12\x90\x88\xff\x3c\xb5\x35\xbb\xa0\x53\x45\xb6\x3e\xb7\x34\xee\xe0\x1f\x5e\xf1\x93\xb4\xbd\x70\xfb\xbd\xda\xc6\xab\xe7\x05\xe4\x5c\xa6\xc1\x71\x83\x6a\x67\xe5\x80\x5f\xbc\x55\x48\x01\xc4\x7b\xa7\xfd\x45\x3a\xec\xed\x1c\x5d\xf4\x7d\x89\xf4\x21\x8e\xb1\x68\xd4\xd5\x41\x12\xf4\xfd\x41\xda\x09\x03\x7c\xfa\x6c\x5c\x44\xd2\x72\xc0\x94\xeb\xea\x14\xef\x40\xee\x76\xe8\x54\x73\x8c\x2c\x21\x25\xd0\x06\xad\x2a\xdf\x20\xd6\x51\x46\x33\x9c\xa6\x2f\xee\x24\xdd\x16\xe1\xda\x2c\xe1\x9a\xd7\xbb\xed\x40\xac\x26\x6b\xe5\xc6\xe2\x5c\x58\x57\x46\xc3\x55\x4a\xa5\x40\xac\xe4\x88\x90\xb3\x30\xc1\x4d\xd6\x36\x2d\xa4\xba\xaa\xfa\x7e\xf0\x4e\x31\xb3\x6b\xc3\x49\x56\x80\x0e\xb4\xb4\x01\x4b\xfa\x8f\x23\x5e\xe8\x96\x78\xd3\xb6\x75\x35\xd3\x71\xea\x9c\x01\x43\x81\x8e\xff\xd9\xdb\xcd\xe4\x94\xc5\xfe\x1e\x9d\x42\x6a\xfc\xe6\xab\x50\x46\x5a\x1c\xe2\x12\xce\x19\xb6\x75\xc5\x39\xeb\xb7\xeb\x38\xc6\xe6\x45\x63\x79\xe2\x29\x84\x60\x14\x7d\x4f\xfe\x31\xbc\xbc\x95\xdb\x0e\x8a\x1a\x99\x03\x92\xf8\x38\x21\x3d\xff\xba\x8d\xc9\x70\xc3\x55\x07\xce\xd8\x82\x82\x30\x4e\xe4\xf8\x73\x59\x44\x46\xf9\x80\x6f\x89\x1a\x24\x7a\xd9\x49\xa1\x46\xde\x84\xed\xc4\x1b\xeb\x03\x36\xec\xcf\x8c\xe7\xe0\x0a\x9f\xe2\x0c\x76\xd6\xbf\xed\x8e\x0d\x2c\xd5\xfe\xff\xa3\xe9\x2b\xae\x6c\x7b\x51\x72\x4c\x87\xbd\x65\xc5\x95\xbf\xf7\x8f\xa1\x8c\x57\x98\x1b\x67\xe2\xf1\x7a\xea\x8a\xbd\x4e\xfe\xeb\x41\x3a\xbe\x06\xa9\x14\x79\x0d\x8d\xb6\x32\x46\x74\xa5\xba\x2d\xaf\xea\x1f\x98\x94\x9e\x9f\x97\x3f\x6f\x8b\xde\x7f\x90\xee\x99\xe7\x64\xfb\x1d\x19\x17\x35\x2c\xfe\xdb\x2f\xce\xce\xf4\xbb\xd8\xdf\x40\x7b\x7d\xaa\xb9\x82\xd7\xe5\xcb\x3f\xfe\x9c\x38\x63\xeb\xf9\x65\xf2\xe1\x7f\x0b\x00\x00\xff\xff\x2f\xa6\x55\x23\xb9\x04\x00\x00")

func golangGetOneAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneAllTmpl,
		"golang.get-one-all.tmpl",
	)
}

func golangGetOneAllTmpl() (*asset, error) {
	bytes, err := golangGetOneAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one-all.tmpl", size: 1209, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetOneTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xcf\x6e\xdb\x3c\x10\xc4\xcf\xe2\x53\x6c\x0c\x1f\x24\xc0\xe1\x03\x7c\x80\x0e\x39\x7c\x28\x7a\x09\x50\xfb\x58\x14\x02\x25\x2e\x55\x36\x2b\xd2\x59\x51\x4e\x52\x82\xef\x5e\x90\x91\x1d\x1b\xe8\x9f\x83\x00\x69\x67\x31\xb3\xfa\x61\x62\xbc\x07\x8d\xc6\x3a\x84\xcd\x6c\x47\xa7\xc2\xc2\xb8\x81\xfb\x94\xc4\x27\x0c\x5d\x8c\x20\x0f\x8b\x31\xf6\x15\x52\xaa\x63\x84\x21\xbc\x1e\x15\xab\x09\xe4\x03\xd1\x03\x8f\x33\xa4\xd4\x40\x2d\xaa\x18\x61\x15\xf6\xfe\x05\x52\xda\x01\x32\xe7\xc7\x73\x23\x72\x0a\x3a\x5d\x6c\xc5\x75\xa4\x75\x27\xff\xf4\x8f\x3c\xc5\xe3\x4d\xda\x9f\xdd\x7a\xaf\xdf\x36\x90\x52\xb9\x06\xa7\x1e\xf5\x91\xd4\x80\xdf\x3d\x69\xe4\x19\xe4\x67\x67\xfc\x8d\x3c\x3f\xd3\x3a\xdd\x74\x5d\x99\x74\x73\x98\x42\xf1\x10\xd5\x49\x31\x74\xdd\x49\xd1\x82\x33\x7c\xfd\x66\x5d\x40\x36\x6a\xc0\x98\x44\x75\x99\xb7\xa0\x8e\x47\x74\xba\x3e\x4f\x76\x10\x23\x18\x8b\xa4\xcb\x37\xc8\x43\x50\xc1\x0e\x97\xeb\x4b\x3a\x2b\x37\x22\x6c\xed\x0e\xb6\xf9\xf7\xfe\x6b\x41\x3e\x2e\x44\xaa\x27\x5c\x17\x45\x65\x0d\xdc\xc5\x58\x16\xe4\xa3\x9a\x10\x52\x92\x76\x76\x0b\x51\xdd\x40\x14\x55\xd5\x75\x83\x77\x3a\x33\xdb\xda\x2c\x66\x07\x68\xc1\x28\x9a\xb1\xc8\x7f\x3d\xf1\xc6\xb7\xcc\xeb\xa6\x11\xd5\x4a\xc7\xe9\x6b\x06\x19\x0a\xb4\xf9\xe5\x99\xfa\xc5\x69\xc2\x6e\x8f\x4e\x23\xd7\xbe\xff\x21\xb5\x55\x84\x43\xd8\xc1\x35\xc3\x46\x54\x59\x23\x3f\x1e\xc2\x14\xea\x77\x8f\xdd\x85\xa7\x94\x72\x45\x61\x9d\x0d\xe7\xd2\x88\x2a\x97\xa6\x85\xe2\xca\xf6\x84\x2c\xbf\x2c\xc8\x6f\x7b\xff\xf2\x5b\x07\x79\x18\x94\xcb\x35\x51\x5a\xb3\x37\x50\x1b\x52\x21\xa0\x2b\x7e\x4d\xc1\x9d\x31\x66\xd3\xbb\x16\x9c\xa5\xc2\x8d\x31\x2c\xec\x32\x83\x9f\xc8\xfe\xa3\xb0\x39\x75\x52\x4f\xf8\x3f\x73\x8d\xcc\xef\x30\x3e\x96\x4b\x0f\xcf\xbb\xce\x92\x58\x39\xe5\x1a\xfe\x0a\x00\x00\xff\xff\x87\x4f\x2c\x01\x47\x03\x00\x00")

func golangGetOneTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetOneTmpl,
		"golang.get-one.tmpl",
	)
}

func golangGetOneTmpl() (*asset, error) {
	bytes, err := golangGetOneTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-one.tmpl", size: 839, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetPagedTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xc1\x6a\xdc\x3a\x14\x5d\x5b\x5f\x71\x63\xb2\xb0\xc1\x11\x59\xe7\xe1\x07\xe1\xf1\x16\x85\x12\xd2\xcc\xb2\x14\xa3\xb1\xae\xa6\xea\xc8\xd2\x44\x92\x27\x09\xaa\xfe\xbd\x48\xf2\x38\x13\x08\x69\xe9\x62\x60\x7c\x75\x74\xee\x39\x47\xba\x0a\xe1\x0a\x38\x0a\xa9\x11\x6a\x27\x77\x9a\xf9\xd9\x62\x0d\x57\x31\x92\x7b\xb6\x43\x3e\x84\x00\x74\x33\x0b\x21\x9f\x21\xc6\x26\x04\x18\xfd\xf3\x81\x59\x36\x01\xbd\x55\xea\xd6\xee\x1c\xc4\xd8\x91\x4a\xc9\x49\x7a\x90\xda\x77\x30\x7a\xb3\x47\x0d\xce\x5b\xa9\x77\x2d\x34\xa4\xb2\xe6\xc9\x41\x08\xe0\x94\x1c\xd1\x08\xa0\x0f\xe6\x29\x6d\x5b\xa0\x66\xf6\x0b\xba\x03\xb4\x36\xfd\x8c\x6d\x49\xd2\x86\x9a\x67\x31\xe4\x5c\xa8\xd4\x47\xb3\xff\xad\x4a\x66\x77\x6f\x34\x42\x96\x78\xea\xf9\x01\xfd\xd6\xf0\x97\x1a\x62\x24\x95\x14\x27\x33\x7d\x0f\x75\x0d\x81\x54\xd5\xa9\x00\xf5\x75\x4d\xaa\x48\x48\x15\x02\xe0\xb4\x45\x7e\x50\x6c\xc4\xef\x46\x71\xb4\x0e\xe8\x27\x2d\x4c\x26\x39\x2d\xbb\x47\xb5\x54\xeb\x61\xc8\x95\xc1\xf9\xc9\xe7\x4e\xa4\x3a\x32\x0b\xc3\x70\x64\x6a\x46\x07\x5f\xbf\x49\xed\xd1\x0a\x36\x62\x88\xa4\x5a\xeb\x3d\xb0\xc3\x01\x35\x6f\x4e\x95\x2e\xa5\x2a\x24\x2a\x9e\xbf\x81\x6e\x3c\xf3\x72\x5c\x2c\xb7\x45\x9c\x65\x7a\x87\x70\x29\x3b\xb8\x4c\x99\xdc\xf4\x40\xef\x66\xa5\xd8\x56\xe1\x02\xcc\x4e\x2f\x42\xc8\x00\x7a\xc7\x26\x84\x18\xa9\x74\x7a\x56\xaa\x69\xb3\xed\x61\x18\x8d\xce\x41\x5f\xca\xb4\x98\x18\xa0\x07\xc1\x94\xc3\xbc\xfc\xa1\xc4\x37\xbc\xb9\xde\xb4\x6d\x4a\x2f\xa7\xa3\x79\xc9\xe0\x23\x92\x12\xfb\x72\x88\xed\x1a\x58\x4a\x10\xfa\xf4\xe7\x51\x6d\x67\xcd\x15\x0e\x0f\xa8\x39\xda\xc6\x6c\x7f\x50\x2e\x99\xc2\xd1\x77\x70\x1e\x78\x4b\xaa\xb4\xa6\xcc\x6e\xe3\x27\xdf\x14\x8e\x6e\x0d\x9f\x52\xda\x66\x2d\xe9\xd2\x96\xfb\x78\xd3\x43\x66\xb3\xf2\x88\x96\x7e\x99\xd1\xbe\xbc\xbf\x2d\xc5\x98\x36\x5c\xf4\xa0\xa5\xca\xb9\x59\xf4\xb3\xd5\xe9\xb3\x83\xba\xee\x32\xd1\xc4\xf6\xf8\xbf\xb5\x0d\x5a\x5b\x42\xe0\x28\x30\xb9\x49\x2d\xe9\x7f\xca\x38\x6c\x96\xb3\x93\x5a\x7a\x8d\x4f\x40\x3f\x33\xe7\xef\xf7\xf9\xac\x84\x59\xb1\x77\xf8\xec\x97\x03\x3a\x07\x97\xf1\x22\x55\x95\xc4\xf4\x27\xf0\x66\x64\x3a\xcd\x06\xe3\xdc\x1a\x01\x8d\x50\xcc\x7b\xd4\x19\xde\xc2\x4f\x18\xcd\x34\x31\x88\xf1\x15\xf2\xda\xb5\x25\xd5\x3b\xe6\xfe\xc0\x5d\xb2\x57\xe6\x7f\x3d\xd4\x12\x6c\xea\x92\x26\xb4\x68\x2d\x39\x2c\x1d\x6e\x56\xc9\x89\xa7\xfd\xe7\x6f\x32\xcd\x64\xe5\x51\xfa\x17\xae\xf3\xb6\x54\x40\x9d\xdb\xb7\x69\xa0\xcb\x6a\xf6\xf1\xfa\x0e\xf5\x20\x26\x4f\x37\x07\x2b\xb5\x6f\x4e\x1a\xdf\xc4\x10\x49\x15\x01\x95\xc3\xb3\xe7\xa0\xec\x2c\xff\x4b\xf7\x45\x63\xf1\xba\x82\xba\x24\x9a\x2c\x77\x3e\x3d\x3c\xbf\x02\x00\x00\xff\xff\x20\x27\x50\x4a\x80\x05\x00\x00")

func golangGetPagedTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetPagedTmpl,
		"golang.get-paged.tmpl",
	)
}

func golangGetPagedTmpl() (*asset, error) {
	bytes, err := golangGetPagedTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-paged.tmpl", size: 1408, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarAllTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x94\xdd\x8a\xdb\x3c\x10\x86\x8f\xed\xab\x98\x35\xfb\x81\x0d\x5e\x5d\xc0\x7e\xf8\x60\x29\x2d\xf4\xa0\x0b\xdd\x1c\x96\x62\x14\x6b\x94\xaa\x2b\x4b\xd9\xb1\x9c\xdd\x45\xe8\xde\xcb\x28\x4e\x9a\xf4\x2f\xa5\x07\x81\x68\x7e\xde\x77\xe6\x41\x72\x8c\x37\xa0\x50\x1b\x87\x50\x4d\x66\xe3\x64\x98\x09\x2b\xb8\x49\xa9\x7c\x67\x9c\xea\x63\x04\xb1\x9a\xb5\x36\x2f\x90\x52\x1d\x23\x0c\xe1\x65\x2b\x49\x8e\x20\xee\xac\xbd\xa3\xcd\x04\x29\x35\x50\x97\x45\x8c\xb0\x24\x1e\xfc\x33\xa4\xd4\x02\x12\xf1\xcf\x53\x53\xb2\x0d\x3a\x95\x75\xcb\x53\x4f\xe3\x76\xfe\xf1\x92\xa1\xa4\xcd\x99\xdd\xef\xe5\xd6\x5e\xbd\x56\x90\x52\x1e\x07\xc7\x35\xaa\xad\x95\x03\x7e\xf1\x56\x21\x4d\x20\xde\x3b\xed\xcf\xd2\xd3\x93\x5d\xa2\x55\xdf\xe7\x48\x3f\x85\x31\x64\x8d\xb2\xd8\x49\x82\xbe\xdf\x49\x3b\xe3\x04\x9f\x3e\x1b\x17\x90\xb4\x1c\x30\xa6\xb2\x38\xc6\x3b\x90\xdb\x2d\x3a\x55\x1f\x22\x2d\xc4\x08\xda\xa0\x55\xf9\x0c\x62\x15\x64\x30\xc3\x71\xfa\xec\x4e\xd2\x6d\x10\xae\x4d\x0b\xd7\xbc\xde\x6d\x07\xe2\x7e\xb6\x56\xae\x2d\x2e\x85\x65\x61\x34\x5c\xc5\x98\x0b\xc4\xbd\x1c\x11\x52\x12\x66\x72\xb3\xb5\x75\x03\xb1\x2c\x8a\xbe\x1f\xfc\x9e\xd9\xb5\xe1\x24\x2b\x40\x07\x5a\xda\x09\x73\xfa\x8f\x23\x9e\xe9\xe6\x78\xdd\x34\x65\xb1\xd0\x71\xea\x94\x01\x43\x81\x8e\xff\x3c\xd9\xf5\xec\x94\xc5\xfe\x01\x9d\x42\xaa\xfd\xfa\xab\x50\x46\x5a\x1c\x42\x0b\xa7\x0c\x9b\xb2\xe0\x9c\xf5\x9b\x55\x18\x43\xbd\xd7\x68\x8f\x3c\x85\x10\x8c\xa2\xef\xc9\x3f\x4f\xfb\xcb\x72\xdb\x41\x56\x23\xb3\x43\x12\x1f\x67\xa4\xd7\x5f\xb7\x31\x19\x6e\xb8\xea\xc0\x19\x9b\x51\x10\x86\x99\x1c\x1f\xdb\x2c\x32\xca\x47\x7c\x4b\x54\x23\xd1\x7e\x27\x85\x1a\x79\x13\xb6\x13\x6f\xac\x9f\xb0\x66\x7f\x66\xbc\x04\xef\xf1\x25\x2c\x60\x17\xfd\xdb\xee\xd0\xc0\x52\xcd\xff\x3f\x9a\x5e\x70\x65\xdb\xb3\x12\x67\x2c\xcf\x92\x01\x1b\x67\xc2\xe1\xad\x94\x05\x0b\x1f\xcd\x56\x83\x74\x7c\xf5\xa5\x52\xe4\x35\xd4\xda\xca\x10\xd0\xe5\xea\x26\x5f\xa1\x7f\x00\x90\x7b\x7e\xde\xf4\xb4\x2d\x78\xff\x41\xba\xd7\x07\xff\x3c\xb1\xfd\x96\x8c\x0b\x1a\xaa\xff\x9e\xaa\x93\x37\xf9\x5d\xec\x6f\x08\x5d\x9e\x6a\xa9\xe0\x75\xf9\x99\x1f\x3e\x1e\x8c\x6a\xb9\x86\xfc\xca\xbf\x05\x00\x00\xff\xff\x62\x10\xdc\x10\xa8\x04\x00\x00")

func golangGetScalarAllTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarAllTmpl,
		"golang.get-scalar-all.tmpl",
	)
}

func golangGetScalarAllTmpl() (*asset, error) {
	bytes, err := golangGetScalarAllTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar-all.tmpl", size: 1192, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangGetScalarTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xc1\x8a\xdb\x3c\x10\xc7\xcf\xd6\x53\xcc\x86\x1c\x6c\xc8\xea\x01\x3e\xf0\x61\x0f\xfb\x41\x2f\x81\x26\xc7\x52\x8c\x62\x8d\x53\x75\xc7\x52\x32\x92\x93\xdd\x0a\xbd\x7b\x91\xe2\xcd\x26\xd0\x6e\x0f\x06\x7b\x46\xfa\xcd\xf8\xc7\x3f\xc6\x47\xd0\x38\x18\x8b\xb0\xf0\x66\x6f\x55\x98\x18\x17\xf0\x98\x92\xf8\xdf\x58\xdd\xc5\x08\x72\x3b\x0d\x83\x79\x85\x94\xea\x18\xa1\x0f\xaf\x07\xc5\x6a\x04\xf9\x44\xf4\xc4\x7b\x0f\x29\x35\x50\x8b\x2a\x46\x98\x1b\x1b\x77\x86\x94\x56\x80\xcc\xf9\x71\xdc\x88\x3c\x06\xad\x2e\x5c\x71\x3b\xd3\xd8\x93\x7b\xf9\xd7\x40\xc5\xfb\xbb\x71\x7f\xc7\xed\x9c\x7e\x5b\x40\x4a\x65\x1d\x1c\x77\xa8\x0f\xa4\x7a\xfc\xe1\x48\x23\x7b\x90\x5f\xec\xe0\xee\xda\xfe\x48\x73\x75\xd1\x75\xa5\xd2\xf9\x30\x86\xc2\x10\xd5\x49\x31\x74\xdd\x49\xd1\x84\x1e\xbe\x7d\x37\x36\x20\x0f\xaa\xc7\x98\x44\x75\xad\xb7\xa0\x0e\x07\xb4\xba\x7e\xaf\xac\x20\x46\x18\x0c\x92\x2e\xdf\x20\xb7\x41\x05\xd3\x5f\xb7\x2f\xd3\x59\xd9\x3d\xc2\xd2\xac\x60\x99\x7f\xef\xbf\x16\xe4\x7a\x22\x52\x3b\xc2\xf9\xa0\xa8\xcc\x00\x0f\x31\x96\x03\x72\xad\x46\x84\x94\xa4\xf1\x76\x22\xaa\x1b\x88\xa2\xaa\xba\xae\x77\x17\x67\x4b\x93\x9b\x99\x00\x2d\x0c\x8a\x3c\x96\xf6\xa7\x2b\xde\x71\x4b\xbd\x6e\x1a\x51\xcd\x76\xac\xbe\x75\x90\xa5\x40\x9b\x5f\x8e\xb4\x9b\xac\x26\xec\x36\x68\x35\x72\xed\x76\x3f\xa5\x36\x8a\xb0\x0f\x2b\xb8\x75\xd8\x88\x2a\xf7\xc8\xed\xb7\x61\x0c\xf5\x85\xb1\xba\xfa\x94\x52\xce\x2a\x8c\x35\xe1\x3d\x35\xa2\xca\xa9\x69\xa1\x50\xd9\x9c\x90\xe5\xd7\x09\xf9\x6d\xe3\xce\x7f\x24\xc8\x6d\xaf\x6c\x8e\x89\xd2\x9a\xdd\x00\xf5\x40\x2a\x04\xb4\x85\xd7\x14\xdd\x59\x63\x81\xb6\xe0\x8f\x24\x9f\x99\xd7\x6e\xe3\xce\xbe\x18\x64\x0c\x13\xdb\x6c\xe3\x17\xb2\xfb\xc8\xae\x35\x54\x4c\xcc\x77\x1f\xda\x5c\xf9\xf4\x46\xde\x78\x54\x2f\xf8\xcc\x5c\x23\xf3\x45\xe4\xc7\xe1\x92\xe1\x5b\xfa\xec\x38\x47\xf8\x77\x00\x00\x00\xff\xff\x74\x62\xde\x03\x85\x03\x00\x00")

func golangGetScalarTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangGetScalarTmpl,
		"golang.get-scalar.tmpl",
	)
}

func golangGetScalarTmpl() (*asset, error) {
	bytes, err := golangGetScalarTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.get-scalar.tmpl", size: 901, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x59\x6f\x6f\xdb\x38\xd2\x7f\x2d\x7d\x8a\xa9\x9f\xb6\x90\x02\x97\xde\x07\x7b\x38\xe0\xbc\xc8\x01\x4d\x9c\xde\x05\x97\x26\xdd\xc4\xd9\xc5\x61\x77\xe1\xa5\x25\xca\xd1\x46\x26\x1d\x92\xb2\x95\x73\xf5\xdd\x0f\x43\x52\x12\xe5\x3f\x69\xbb\xd7\x17\xad\x4c\xce\x0c\x67\x7e\x33\xfc\x0d\xc9\x6e\xb7\xef\xe0\xb5\x58\xe9\x5c\x70\x05\xe3\x53\x20\x37\xee\xfb\x5d\x5d\x87\xe1\x68\x04\xef\xef\xa7\x37\xff\xb8\xb8\xbe\xb8\x7d\x3f\xbd\x98\xc0\xd9\xbf\x61\x21\x56\x8f\x0b\x92\xf3\x91\x5a\xd1\x84\x2d\x05\x7f\x64\xcf\x0b\x31\x4a\xe7\x15\x59\xff\x3f\x6a\x4c\x6e\xe0\xfa\x66\x0a\x17\x93\xcb\x29\x09\xc3\x15\x4d\x1e\xe9\x82\xc1\x76\x0b\xe4\x93\xfb\x46\xd3\xf9\x72\x25\xa4\x86\x28\x0c\x06\xf3\x67\xcd\xd4\x20\x0c\x06\x89\xe0\x9a\x55\x1a\x3f\x53\xaa\xe9\x9c\x2a\x36\x52\x4f\x05\xfe\x66\x52\x0a\x69\x84\xb2\xa5\x11\x90\x2c\x2b\x58\xe2\x3e\x17\xac\x5a\xe1\x97\xd2\x32\x11\x7c\xed\x3e\x73\xbe\x30\x1a\x3a\x5f\x32\xfc\xb7\xe4\x79\x22\x52\xf3\xa9\x9e\x79\x32\x08\x43\x8c\x5e\x52\xbe\x60\x40\x2e\x2a\x2d\xe9\xa5\x71\x4a\xa1\x83\x01\x3a\x8c\x1f\x28\xc3\x78\x8a\x9f\xb1\x41\xe4\x93\x64\x6b\xc6\x35\x24\x82\xa7\x39\x82\x45\x0b\xc8\x9d\x62\x26\xc5\x12\x12\x5a\xaa\x9c\x2f\x60\x5e\xe6\x45\x0a\x19\xcd\x8b\x52\x32\x15\xae\xa9\x84\x19\x9c\x82\x73\x92\x5c\x6a\x41\xfd\x41\x74\x97\x5c\x51\xa5\x2f\x79\xca\xaa\x76\x26\x5b\x6a\x72\xb7\x92\x39\xd7\x6e\x08\x7d\x27\x1f\x4b\xcd\xaa\xd0\x8c\x44\x61\xf0\xb3\xa4\xab\x0b\x29\x51\xba\xe4\x49\xc4\xa4\x84\x93\x0b\x44\x2c\x06\x03\x1c\x6c\x25\xd3\xa5\xe4\xf8\xab\x0e\x83\x2b\xb1\x58\x30\x69\x65\x33\x21\x97\x54\xbb\xf5\x87\x40\xe5\x42\x01\x21\x24\xe7\x9a\xc9\x8c\x26\x6c\x5b\xc7\x61\x18\x30\x29\xa7\x42\x7c\xa4\xfc\xf9\x56\x6c\x14\x9c\x5a\xb3\x8a\x5c\xb3\x4d\x34\xd0\x42\xc0\x92\xf2\x67\x90\x62\xa3\x06\xb1\x91\xbe\xe7\xaa\x5c\x21\x26\x2c\x9d\xc8\x7c\xcd\xe4\x8e\x4e\xd9\xcd\x43\x6a\x04\x9c\xe2\xc5\x72\xa5\x9f\xef\x57\x29\xd5\x6c\x47\x85\xe1\x0c\x94\x66\x6a\x10\x63\x32\x30\x00\x28\xc4\xc2\x84\xfa\x35\x91\xc0\x36\x0c\xf2\x0c\x5c\xfc\xaf\x4e\x81\xe7\x05\x8e\x39\x44\x9c\x09\xab\x4b\x08\x89\xc3\xa0\x0e\xeb\x30\xd4\xcf\x2b\x06\x66\x91\x73\x91\x32\xc0\x54\x84\x89\xe0\xca\x94\x6f\x3b\x3e\xbb\xe7\x8f\x5c\x6c\xb8\x27\x79\x0a\xb9\xd0\xb4\x2f\xb3\x83\x8b\x3f\x79\x2d\x10\x5d\x7f\x64\x5a\x4d\x04\x67\xbd\x91\x2e\x0d\xfe\xf0\x39\xba\x23\x69\xce\xf5\x4f\xb9\x28\x28\x96\xa5\x3f\xed\xa1\x8a\xc0\x75\x01\x21\x5c\x65\xa2\x11\x04\x2c\x20\x83\x77\x18\x18\xe7\x5b\xed\x30\x70\x29\xb4\xd0\xe2\x74\xb3\x58\x3b\xf4\x63\xc9\xe4\xf3\x5d\x99\x65\x79\xd5\x8c\xd5\x2e\x41\x11\x6b\x8b\xd1\x26\x2a\x76\x12\xb8\x68\x53\x97\xe4\x42\x4a\xe2\xa6\x5b\xcd\x8d\x2d\x6b\xcf\x80\xab\x66\x93\xc5\xb6\xe8\xbb\x34\x36\xd6\x30\x6f\xcd\x8f\x9f\x1b\x23\x9d\xdd\x25\x7d\x64\x66\xa8\x89\xb8\x6f\x98\x1d\x34\xca\xf3\xc2\x98\x65\x48\x93\x6f\x8d\x3f\xdb\x0b\x29\xc7\x6e\x4f\xa9\x4d\xae\x93\x07\xa3\xbb\x0d\x83\x84\x2a\x06\xea\xa9\xc0\x90\x6c\x56\xc7\x61\x10\x30\xe2\xaa\x62\x3f\xe5\xbe\x82\x4d\xfa\x11\x85\xa6\x22\xba\x00\x37\xfb\x01\x96\xbb\x55\x16\xa5\x7e\x06\xbd\x70\x77\x6c\xb8\xb8\xc2\x20\x68\x42\xdb\x2b\xd8\x61\x18\x98\xfa\x18\xc3\x0b\x55\x8d\x42\xf6\x6b\xec\xb6\xf7\x30\x0c\xea\xce\x41\xd6\xd5\x63\xf4\x2d\xde\x78\x75\x7c\xc8\x8f\xfe\xb4\xb7\x9e\xee\x76\x4d\xf4\x84\xa5\x3a\x53\x7e\xad\x7e\x8b\x0b\xde\x06\x3c\xe4\xc2\xce\xb4\xb7\x2f\xc6\xe0\xaf\xdc\xf7\x2f\xd9\xdf\xbe\x5d\x75\x0e\xbd\xe9\x3f\xe1\xf0\x21\x2f\x0f\xd0\x85\x15\x6b\x86\xc7\xde\x9a\xad\xab\x86\x36\x5c\x25\xb5\xb4\x6a\xa8\xa3\x62\x89\xc5\xf5\x65\xfa\x8d\xb0\xc2\x6f\x99\x2a\x0b\x3d\x74\x3b\xcf\x51\xc7\x57\x69\x9f\x18\x75\x44\xb6\xaf\x7c\x2b\x36\x5f\xa3\xdf\xa8\x63\x28\xae\x71\x72\xa1\xdf\x7f\x12\x46\x6a\xa7\xdb\xa4\x4c\xe9\x9c\x1b\x64\x80\x0b\x0d\x14\x56\x56\x0e\xfb\x54\x21\x94\x7a\x3e\x17\x7c\xcd\xa4\x42\x81\xbe\xaa\x99\x45\xfc\xdc\xb4\x6d\x56\x06\xbc\xc9\x99\x47\xb8\xc6\x9f\xc9\x59\x18\xa4\xf3\x8f\x4c\x3f\x88\x54\x85\x61\xf0\x4f\x21\x1e\x95\x27\x14\x5c\x8b\x8d\xed\xd4\x31\xe0\x41\x86\x4c\xf3\x25\x73\x7d\xc9\x94\xce\xcd\x8a\x71\xb7\xbd\x87\xa0\x44\x29\x13\xd6\x16\x49\x94\xce\xe1\x64\x72\x66\xe0\x6a\x98\x6e\x1b\x06\xea\xa9\x98\xa5\x73\x3b\x3a\x3e\x35\xb4\x73\xc0\x4a\xdc\x92\xe1\xab\x43\x64\x38\xf4\x69\xd4\x74\xca\x20\x65\x59\x73\xac\xb0\x4b\x80\x0b\xd1\xac\x7a\xc0\x9a\xf3\x84\x9c\x17\x42\xb1\x28\x0e\x03\xb4\x52\x3b\x65\x3c\x77\x38\x15\xeb\x24\x4a\x7e\xca\xf9\x22\x8a\x7f\xf8\x16\xb7\x10\x5f\x38\x85\xb7\x93\x33\x94\x9c\x9c\x8d\x9d\xad\xa1\xf5\x79\x4e\x0c\xe4\x04\x71\x3e\xb5\x10\x5f\x8b\x4d\xd8\x32\xba\xab\xf7\xad\x7f\x58\x9c\xe4\x14\x0f\x9f\xf6\xa0\x68\xa8\x1b\x4f\x8b\xd7\x74\xc9\xe0\x33\x98\xb3\x5a\x06\x83\x37\x4f\x03\xa8\x6b\xa4\xf1\x74\x4e\xda\x14\xc3\x29\x70\xb6\x69\xc5\xeb\x3a\xc2\x48\x7b\x07\x51\x96\xdc\x70\xcc\x87\xb1\x8e\x10\xcc\x86\xb0\x03\x83\xd9\x70\xdb\x6d\x6f\x2d\x3c\xad\xee\x23\xd3\x83\x26\x9d\x93\x3e\x3a\x41\xef\x7c\xeb\x7d\x62\x2e\x69\x59\xe8\xf1\x0e\xb8\xc7\x3a\x8b\x43\xda\x89\x62\x71\x61\xbf\x6c\x8f\x00\x62\xfe\x07\x16\x62\x0c\x2e\xd3\x10\xf5\x2b\xd2\xe9\x89\xf9\x1f\xad\x83\xf8\x3d\x39\x6b\x4a\x23\x3e\x60\xcb\xd4\x6c\xa2\x2b\x70\xf7\x06\x72\x6e\xff\x45\xa6\x98\x56\x43\xcf\xbc\xae\xda\x62\x77\x66\xcf\xd8\x22\xe7\xd1\x17\x4b\xdc\x77\xa8\xab\x27\x27\xf1\x76\x5a\xa1\xbc\xae\xc6\xa0\x91\xcf\x03\x5d\xb9\x24\x8f\x8d\x22\x52\xf2\xb4\x8a\x74\x15\x63\xa9\x35\x88\x6c\xb7\x90\x67\xed\x9d\x8b\xdc\x59\x38\x6f\x2b\x44\x7d\x27\xc0\x6b\xb6\xb9\xad\xa2\x18\x4e\x6e\x2b\x0f\xa4\xb7\xb7\xd5\x36\x9d\x9b\x25\x6a\x6b\xcf\xe5\xcc\x68\x4f\x58\xc1\x34\x7b\x5f\x14\x87\x90\xc1\x0a\xb0\xa6\xa3\x9c\xeb\xbf\xfe\xe5\x08\x46\xe9\x9c\x34\xd8\xbe\x84\xd0\x77\x46\x61\x77\xe7\xf7\xf6\xba\x77\x8c\x0a\xcc\x6f\xbf\x04\x75\x45\xce\xc5\x72\x99\x6b\x4c\x6f\x5b\xa9\xa6\x28\x5b\x0b\x33\x29\x8a\x62\x4e\x93\x47\xf4\x4b\x57\xe4\xd6\xfd\x74\x1c\xd0\x4d\xfb\x25\xdf\x5e\x09\x06\xa9\x41\xe3\x1d\x2d\x8a\x31\xb4\xa2\x78\x23\x63\xe9\x18\xde\xac\x07\xbb\x5b\xa2\xb5\x17\xb7\x64\x14\xb7\xc0\xeb\x8a\xa4\x3e\xba\x5d\x4f\x9c\x56\x1e\x63\xeb\xca\xd2\xde\xb4\x0a\xbb\x8a\xe8\xda\xa7\xa5\x8e\x63\x1a\x6d\x95\xe3\x58\x2b\x1b\x43\x03\xd4\x91\x8d\xe3\x41\xda\x43\xf5\x98\xb9\x0e\xc6\xaf\x32\xd8\x89\x1b\x93\x47\x98\xd0\x8c\xbf\x4e\xe7\x26\xce\xf1\xe9\x3e\x21\xaa\xc9\xd9\xc0\x3c\x2c\x18\x41\x5d\x1d\x17\x9c\x56\x9e\x60\xbe\x5c\x15\xc7\x45\x2f\x97\xab\x62\x60\x96\x37\x32\xdb\xad\xa7\x50\xd7\x1e\xca\xe9\x1c\xcc\x9f\x13\xd3\x72\xad\xdf\x30\x9b\xa9\xa7\x62\x5e\xf2\xb4\x60\x33\x8f\x94\xc3\xc0\xd1\xbe\xa3\xff\x1d\xf6\xd9\x59\x24\xc6\x4b\xe8\x9d\x5e\xea\x48\xe9\x65\xff\x06\x4a\x08\x81\xdd\x1b\xa8\xb7\xce\x95\xa7\xe7\x5d\x3b\xbf\xb0\xda\x4b\xf7\x17\xef\xd8\x06\xe2\xb1\x61\xbc\x5c\x75\x47\x3b\xbb\x35\x2c\x9b\xe5\x19\x0a\x79\x7b\xfa\xc8\x41\xd4\x3f\x82\xc6\xfe\xe5\xa3\x47\x8e\x7e\x0e\x5c\x19\xec\x66\xc0\x80\xbf\x1b\x51\x1b\xef\x5e\x67\xb4\x64\x75\xd2\x37\xe8\x51\x61\x6f\x62\x6b\x5a\xed\x18\x4c\x6b\x0f\x76\xd6\x18\x5b\x61\x6f\xc4\x50\x05\xca\x9b\x3f\x56\xc9\xa5\x7d\x8c\xbf\xc9\xe4\x0c\x87\xea\xa1\x7f\xda\xea\x32\xd2\x2e\x1b\xc3\x5d\xf2\xc0\x96\xf4\xd0\xbd\xf6\x77\x0c\xc7\x4e\xdf\xfd\x78\x05\x75\xfd\xfb\xcb\x96\xda\x96\xd1\x10\x42\x0c\x2d\x85\xec\xc6\xed\xf6\x8f\x8b\xbb\xd9\xdb\xe3\x8e\x61\xb6\xb6\x33\xd5\x7f\x02\x0d\xac\x99\x5d\x44\x6c\x8f\x6b\xe1\x68\x33\xdd\xfa\xe1\x67\xba\xf1\xe1\x85\x64\x1f\xd9\x06\x5f\x7c\xc0\x19\x8d\x60\x7a\x33\xb9\x19\x83\x64\x3c\x65\x12\x56\x05\x4d\xd8\x83\x28\x52\x26\xd5\x91\xe7\x1d\x51\x6a\xdc\x09\xdd\x53\x5a\x16\x0d\x70\xad\x31\xbc\x51\xbf\x72\x5c\x08\xbb\xc1\xaf\x7c\x30\x04\xbb\x13\x57\x92\x69\xfd\x1c\xe1\x8c\xe9\x04\xee\x7d\x48\x94\xba\x79\x13\xf2\xce\x4a\x16\x0a\xab\x02\xbf\xfc\xe6\xf9\xdb\xa4\x7a\xe5\x66\x63\xf8\x60\x5e\x98\xa2\xcc\xfa\xa2\xf1\xa2\x0a\x09\xc8\x92\x33\x13\x1b\x8e\x7e\x30\x1e\x46\xd9\x10\x06\xbf\x0c\xe2\x90\xb3\x4a\xaf\x69\x31\x0e\x83\x4c\x48\xc8\x87\xb0\xa6\x05\x06\x63\x09\x78\xd5\x74\xdb\x1c\xfe\x0e\xdf\xd9\xf6\xb7\x63\x64\x08\x03\xd7\xcc\x02\xb9\x36\x9a\xf6\xe9\x94\xfc\x44\x8b\x92\xdd\x64\xd1\x9a\x16\xb1\x35\x22\xd7\xe4\x5f\x39\x4f\xa3\x18\x1b\x77\x23\xf6\x49\x4b\x6b\xd7\x0a\x5c\xaa\xeb\xbc\x70\x5d\x7e\x6f\xad\xeb\xfb\xab\x2b\xb3\x5a\x80\x44\xa4\x73\x5e\x32\xfc\x51\x03\xfe\x8d\x8e\x9f\xa2\x89\x8b\x82\x2d\xa3\x98\x5c\x36\x40\x35\x27\xff\xe6\xc8\x6d\xbc\x5c\xd3\x82\x44\x88\xac\x5d\xca\x3e\x90\x98\xd2\x18\xf7\x83\xcc\xcc\xca\x6f\x9e\x06\x43\x58\xc7\x8d\x64\x7b\x55\x3a\x2c\xac\x50\x98\xb8\x64\x18\xd9\xdb\x0f\xe7\xdf\x7f\xff\xfd\xdf\xae\x29\x17\x71\x6b\xe5\x97\xdf\xe6\xcf\xda\x99\x10\x12\xcf\xe1\xf3\x0e\xfa\xb5\x83\x20\xcf\xe0\x95\x7b\x5a\x26\x97\xea\x93\xc1\x02\x13\x1a\xcd\xe3\x06\xa5\x7d\x07\xfe\xaf\x6a\xdc\xf5\xa0\x02\x97\x6b\x33\x5a\x87\xcd\x5f\xc7\x43\xf5\x0e\xe9\xfb\x52\xeb\x46\xaa\x36\x84\xbd\x93\xa9\xdf\x06\xae\x95\x37\x9d\xfc\xce\x6c\x5e\xd5\xdc\x03\x5e\xbb\xcd\xdc\xf6\xdc\xb6\x1d\x27\x92\x51\xcd\xbc\xe9\x73\x33\x60\xf5\xfb\xa2\xf6\xb1\xd6\x13\xb5\x6f\x33\x9e\x68\xaf\x6f\x3b\x41\x9f\x49\xbc\xa3\xc6\x87\x9c\x15\x69\xf7\x36\xef\xd4\x0d\x8d\x4c\x1d\xb5\xec\xdc\x65\x0e\x9c\xb3\xef\x15\x93\x29\xd5\xd4\x2c\x1c\x94\xee\xd7\x6c\x59\xfa\xcf\xea\xed\x38\x52\xa1\xbf\x9d\x9d\x7d\x8f\xc4\xa2\x9e\xdf\x31\xcc\xa6\x74\x5e\x30\xaf\x15\x80\xa3\xec\x81\xf1\x13\x27\xa1\xae\x07\xe0\x18\x24\xcf\x9a\xff\x71\xa1\xc5\x25\x57\x4c\xea\x2e\xca\x0e\x97\x1e\xe2\x47\xd0\x39\x66\x65\x0f\xab\x3e\xf8\x1e\x62\x87\x48\x0d\x57\xef\x25\xf1\xc8\xea\x26\xaf\x18\xdc\xff\xb0\xf0\x5e\x9a\x4d\x09\x65\x5e\xf5\xec\x5b\x78\x9d\x68\x61\xae\x2c\xdd\x79\x70\xf6\x46\x0d\x80\x7c\x14\x29\x2b\x8c\x24\xd9\xaf\xb3\xec\x40\x30\xc1\x4c\x31\x0d\x73\x21\x8a\x30\x98\xad\x91\x19\x7b\x95\xe5\x35\x2d\xbb\x66\x5d\x47\x6b\x23\x71\xae\x85\x34\x4c\x6a\xf2\xbf\x63\x7e\xdb\x66\xf9\x63\x89\x64\xff\xc1\x5e\xea\xd7\x70\x6a\x74\xbd\xc1\x68\x1d\xf7\xee\xdf\xae\x6c\xfa\xf6\xb6\x80\x5e\x8e\x41\xcb\x92\x0d\xc1\xba\x39\x06\x7b\xa3\x24\x53\xfa\xc8\xde\xa7\x29\xba\xf6\xb6\xbd\x14\xae\xa1\x6e\xef\x9c\xe4\xba\x2c\x0a\x57\x81\x7b\xd1\xcc\x6e\xe9\xc6\x45\x34\x6d\x4e\x23\x7b\xc1\x20\xd7\xad\x0f\xbc\x8d\xfb\x76\x70\x91\xa8\x77\x46\xf4\x31\xdb\xf7\xf5\xa4\xf3\x35\x3e\x04\xb3\x33\x78\xc0\x99\x2f\x42\x04\xde\x3e\xcd\x76\xe4\x62\xc8\x15\xb7\x96\x31\xe9\xb0\x6d\xcc\xbd\xca\x88\x29\x85\xcf\x9f\x21\x23\xae\x12\x5c\xc4\xfe\x65\xfb\xa8\x59\xa3\x11\xc5\x3e\x6f\x80\x09\xba\x31\xdc\x52\x82\x31\xf9\x43\xf3\xab\x5d\xac\x47\x2d\xbe\xe5\xd9\xb9\x28\xca\x25\x3f\x46\x2e\x76\xd6\x67\x17\x74\xf5\x5d\x7f\xaf\x35\xcf\xe1\xf7\xd3\xf3\x48\x77\x5d\xd2\x7b\x5b\xf4\x90\xd5\x04\xc5\xfc\x57\xf4\x09\xd5\xec\x05\xbd\xd1\x08\x1e\x19\x5b\x41\xb9\x02\xfd\xc0\x60\x99\xf3\x52\x33\x40\xde\xcd\x05\x07\x25\x40\x3f\x50\x0d\x5a\x52\xae\xec\xdd\x42\xc1\x9c\xe9\x0d\x63\xdc\xd8\xf9\x8f\xe0\x4c\xc1\x26\x2f\x0a\x63\xaa\x6d\x8b\x5a\x34\x87\x11\x58\x49\xb1\x62\xb2\x78\x26\x9e\x93\x53\x59\xf2\xc4\x38\x86\xbe\x7c\x34\x8b\x1a\xa7\x47\xa3\x70\x34\xc2\xc3\x15\x4e\x80\x7b\xb8\x02\xec\xe4\xe6\xbf\x66\x11\x42\xf5\x54\x80\xc2\x4d\xb8\x64\x5c\x2b\xd4\x08\x0d\x57\xfd\x78\xe5\x1a\x06\xd4\xad\x21\x84\xf0\x1b\x8d\xfd\x37\x00\x00\xff\xff\x29\xff\x62\xb4\x5f\x1f\x00\x00")

func golangHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangHeaderTmpl,
		"golang.header.tmpl",
	)
}

func golangHeaderTmpl() (*asset, error) {
	bytes, err := golangHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.header.tmpl", size: 8031, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangMiscTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\xc1\xca\x83\x30\x10\x84\xcf\xbf\x4f\x31\x04\xff\x5b\xf5\x01\x84\x5e\x7b\x29\xf4\x24\x3d\x1b\xea\x2a\x01\x1b\xac\x89\x07\xd9\xee\xbb\x97\x35\x25\x2d\xf4\x36\x99\xf9\x66\xb2\xcc\x15\x7a\x1a\x9c\x27\x98\x10\x97\xf5\x16\x0d\x44\x8a\xb8\xcd\x04\x66\xd4\x17\x7b\x27\x88\x20\x65\xe0\x82\x19\x8b\xf5\x23\xa1\x3e\x39\x9a\xfa\xa0\xf4\x1f\x33\xdc\x90\xe1\xef\x1e\x33\xc8\xf7\x6f\xb3\xd5\xd5\x5d\x2a\xdd\xda\x31\xa0\xd2\x7a\x97\x47\x4b\x77\x40\x19\xd1\x1c\x3f\x71\xa2\x4b\xf7\xb3\x76\xa6\x0d\x22\x8d\xca\xab\x9d\x56\xc2\x13\xf3\xe2\x7c\x1c\x60\xfe\x1f\x26\x41\x89\xee\xf4\xc2\x6a\x7f\xe8\x7f\xd9\x2f\xb2\x56\xfb\x15\x00\x00\xff\xff\x8e\x34\xcf\xa7\x0b\x01\x00\x00")

func golangMiscTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangMiscTmpl,
		"golang.misc.tmpl",
	)
}

func golangMiscTmpl() (*asset, error) {
	bytes, err := golangMiscTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.misc.tmpl", size: 267, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x41\x6f\xec\x34\x10\x3e\x6f\x7e\xc5\xbc\xa8\x87\x44\xa4\x16\xe7\x4a\x11\xaa\x1e\x05\x8a\xca\x8a\xd7\xf2\xb8\x20\x14\x79\x93\xc9\x62\xea\xd8\xc1\x76\xba\xad\xac\xfc\x77\x34\x8e\x37\x4d\xda\x6d\x01\xe9\x1d\xb8\x6d\x3c\xf6\x37\xdf\x37\xf3\x8d\xbd\xde\x9f\x43\x83\xad\x50\x08\xa9\xe2\x1d\xa6\x70\x3e\x8e\xc9\xe7\xbe\xe1\x0e\xbd\x07\xd1\x82\xd2\x0e\xd8\x2d\xba\xc1\x28\x18\xc7\xad\x9e\x7e\x7a\x0f\xa8\x1a\x18\xc7\xca\x7b\x60\x77\x43\xdb\x8a\x47\x18\xc7\x84\xf0\x28\x40\x28\xc9\x12\xdc\x8a\xbd\xe2\x6e\x30\x31\x03\x85\x1c\x76\xbd\xe4\x6e\xce\xcc\x60\x1c\x33\xef\xa1\x76\x8f\x3d\x37\xbc\x03\x76\x29\xe5\xa5\xd9\x5b\x18\xc7\x22\xd9\x0c\x81\x14\x84\x7c\xce\x0c\xb5\x63\x13\xcd\xe9\x63\xcb\x3b\x84\x71\xcc\x21\x4b\x36\x13\xf1\x67\xd2\xde\x43\x04\x9c\x97\x0a\x98\x15\xa0\x31\x80\xc6\x68\x93\xbf\xcd\x5e\xa8\x07\x7d\xff\xef\xa8\x73\xb3\x5f\x11\x87\x89\xf7\x3b\xe0\x3b\xdd\x3c\x4d\xd0\xc4\x1c\xbb\x1d\x36\xbd\xe4\x35\xfe\xa1\x65\x83\xc6\x02\xbb\x56\xad\x86\x65\xd8\xfe\x25\xe3\x6a\x5a\x55\x61\xa5\xb2\xae\x73\x29\x6d\x4a\x36\x55\x65\xd1\xd9\x8a\x36\x5d\x94\x50\xd1\x8f\xdd\xa0\x1a\x89\xd5\x8d\x70\x68\xb8\xb4\xfe\x47\x2d\xd4\x05\xa4\x05\xa4\x63\xb2\x79\xe0\x06\xaa\xea\x81\xcb\x01\x2d\xfc\xf6\xbb\x50\x0e\x4d\xcb\x6b\xf4\x73\x8c\x93\x96\x75\x24\x90\x31\x5c\xed\x71\xdd\x0e\xbe\x93\xf8\x9d\x40\xd9\xd8\xc0\x58\xb4\x51\x3f\xa3\xbe\xc5\x26\x31\x22\x08\x3e\xd9\x6c\xe6\xb4\x25\xf0\xbe\x47\xd5\x64\xc7\x95\xe2\xd4\xb9\x10\xca\xf2\x3c\x9c\x3c\x8a\x64\x77\x9f\x6e\x56\x00\xab\x40\x71\xaa\x00\x59\x4a\xa8\x1f\xb5\x1c\x3a\x32\x03\x94\xf0\x4d\x4a\xa8\xb1\xc4\xc1\x16\x41\xe1\x79\x30\xd2\x16\xb1\xb1\x5b\x7d\x08\x8a\xaa\x4a\xe9\x03\x15\x56\xef\xfe\x64\xcd\x8e\xfd\xa0\xf5\xbd\x65\x5b\x7d\xc8\x72\xf6\xf9\x97\x8f\x59\x3e\x63\x1c\x3b\x1a\xab\x74\x39\x38\xbd\xa8\xcc\x7b\xd2\x89\xdd\xb5\x12\xee\x57\x2e\xc9\xd3\xc9\x97\x50\x1b\x6b\x38\x6b\x5d\x0b\x9d\x27\xfd\x05\x4b\xd1\x82\x44\xf5\x32\x4d\x0e\x65\x09\x5f\x87\x0e\x9a\x69\xa2\x94\x90\x05\x60\xd7\xbb\xa7\x69\x28\xb3\xd7\xd5\x8c\x36\x5a\x50\xa7\xef\x20\xb6\xa5\x84\x41\x3c\x99\x89\x3b\x51\xc7\xe9\xc9\x97\x3e\x3b\x13\x05\x9c\xd1\x78\x5d\x94\xc0\xb6\x83\x94\xe4\xb5\xb8\x31\x30\xfd\xe0\x7d\xd8\x30\xfb\x45\x58\x35\x48\x99\xe5\xd1\x6b\xb5\x56\x0d\xdd\x57\x67\x82\x82\x84\x00\x25\xb4\x5c\x5a\x0c\xe1\x37\xe9\xad\x30\x9f\x3d\xf8\x4a\xdf\xdb\x0d\x9d\xc0\x18\x63\x73\x2f\xa9\x8e\x10\xa6\x33\x16\x36\x39\x0e\x1b\x4d\x32\xac\xe7\xf6\x16\x55\x83\x26\x0b\x8e\x13\x5c\x62\xed\x08\xf2\x79\xf0\xf3\x64\x43\x31\xa9\xf7\x77\xae\x73\xd9\x84\x51\xcc\x43\x1d\xf2\xae\xba\x3c\xdf\x83\xc9\xa6\x2a\xe8\xf6\x83\xe8\x67\x23\x1e\xd0\xb0\xab\x47\xac\x4f\xa3\x50\x99\x69\xfb\x87\x92\x5a\xbe\x74\x00\x1d\xef\xf8\x3d\x5e\x19\x93\xa1\x31\x53\x7d\x9e\xdd\x31\xd5\x4a\x5a\x9c\xc7\x42\x28\xb1\x66\x12\xaf\xed\xbb\xa1\xef\xb5\x71\x76\x8a\x08\xb5\x0f\xc1\x57\x1c\x3f\x0d\x68\x9e\x6e\xf5\xe1\x24\x4f\x76\x57\x73\x45\x17\x32\x6f\x1a\xa3\x5b\xc8\x5a\xc9\x9d\x43\x75\xcc\x97\x4f\x63\x15\xc5\x94\x25\x90\xb3\xaf\x8c\xd9\xea\x5b\x7d\xb0\xaf\x8c\x1d\xf8\x8f\xef\x88\x0f\xbb\x4e\x56\x60\xa5\xfa\x4b\xd5\xfa\xcd\x74\x27\x9e\x88\xef\xd1\xad\x5f\x89\x6a\x8f\xd3\x4b\xb1\xf0\x1b\xad\xfd\x47\xcf\xd1\x91\x17\xbe\x4b\xb3\xeb\x9f\x7e\xbe\xb9\xbe\xfa\x36\x87\x14\xbe\x5a\x40\xaf\x06\xe0\x9f\x7b\xf9\xf2\xc8\xff\xab\x9b\xc7\x9b\x3d\x6e\x26\x5a\xf4\xe4\x2f\xfe\x5a\xcc\x76\x8f\x5b\x97\x2f\xff\xdf\x01\x00\x00\xff\xff\x2a\x1b\xe1\xa5\x71\x09\x00\x00")

func golangUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_golangUpdateTmpl,
		"golang.update.tmpl",
	)
}

func golangUpdateTmpl() (*asset, error) {
	bytes, err := golangUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golang.update.tmpl", size: 2417, mode: os.FileMode(420), modTime: time.Unix(946710000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"golang.create-raw.tmpl": golangCreateRawTmpl,
	"golang.create.tmpl": golangCreateTmpl,
	"golang.decl.tmpl": golangDeclTmpl,
	"golang.delete-all.tmpl": golangDeleteAllTmpl,
	"golang.delete-world.tmpl": golangDeleteWorldTmpl,
	"golang.delete.tmpl": golangDeleteTmpl,
	"golang.dialect-postgres.tmpl": golangDialectPostgresTmpl,
	"golang.dialect-sqlite3.tmpl": golangDialectSqlite3Tmpl,
	"golang.footer.tmpl": golangFooterTmpl,
	"golang.get-all.tmpl": golangGetAllTmpl,
	"golang.get-count.tmpl": golangGetCountTmpl,
	"golang.get-first.tmpl": golangGetFirstTmpl,
	"golang.get-has.tmpl": golangGetHasTmpl,
	"golang.get-last.tmpl": golangGetLastTmpl,
	"golang.get-limitoffset.tmpl": golangGetLimitoffsetTmpl,
	"golang.get-one-all.tmpl": golangGetOneAllTmpl,
	"golang.get-one.tmpl": golangGetOneTmpl,
	"golang.get-paged.tmpl": golangGetPagedTmpl,
	"golang.get-scalar-all.tmpl": golangGetScalarAllTmpl,
	"golang.get-scalar.tmpl": golangGetScalarTmpl,
	"golang.header.tmpl": golangHeaderTmpl,
	"golang.misc.tmpl": golangMiscTmpl,
	"golang.update.tmpl": golangUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"golang.create-raw.tmpl": &bintree{golangCreateRawTmpl, map[string]*bintree{}},
	"golang.create.tmpl": &bintree{golangCreateTmpl, map[string]*bintree{}},
	"golang.decl.tmpl": &bintree{golangDeclTmpl, map[string]*bintree{}},
	"golang.delete-all.tmpl": &bintree{golangDeleteAllTmpl, map[string]*bintree{}},
	"golang.delete-world.tmpl": &bintree{golangDeleteWorldTmpl, map[string]*bintree{}},
	"golang.delete.tmpl": &bintree{golangDeleteTmpl, map[string]*bintree{}},
	"golang.dialect-postgres.tmpl": &bintree{golangDialectPostgresTmpl, map[string]*bintree{}},
	"golang.dialect-sqlite3.tmpl": &bintree{golangDialectSqlite3Tmpl, map[string]*bintree{}},
	"golang.footer.tmpl": &bintree{golangFooterTmpl, map[string]*bintree{}},
	"golang.get-all.tmpl": &bintree{golangGetAllTmpl, map[string]*bintree{}},
	"golang.get-count.tmpl": &bintree{golangGetCountTmpl, map[string]*bintree{}},
	"golang.get-first.tmpl": &bintree{golangGetFirstTmpl, map[string]*bintree{}},
	"golang.get-has.tmpl": &bintree{golangGetHasTmpl, map[string]*bintree{}},
	"golang.get-last.tmpl": &bintree{golangGetLastTmpl, map[string]*bintree{}},
	"golang.get-limitoffset.tmpl": &bintree{golangGetLimitoffsetTmpl, map[string]*bintree{}},
	"golang.get-one-all.tmpl": &bintree{golangGetOneAllTmpl, map[string]*bintree{}},
	"golang.get-one.tmpl": &bintree{golangGetOneTmpl, map[string]*bintree{}},
	"golang.get-paged.tmpl": &bintree{golangGetPagedTmpl, map[string]*bintree{}},
	"golang.get-scalar-all.tmpl": &bintree{golangGetScalarAllTmpl, map[string]*bintree{}},
	"golang.get-scalar.tmpl": &bintree{golangGetScalarTmpl, map[string]*bintree{}},
	"golang.header.tmpl": &bintree{golangHeaderTmpl, map[string]*bintree{}},
	"golang.misc.tmpl": &bintree{golangMiscTmpl, map[string]*bintree{}},
	"golang.update.tmpl": &bintree{golangUpdateTmpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

